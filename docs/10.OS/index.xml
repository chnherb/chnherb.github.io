<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Herbdocs – OS</title><link>/docs/10.OS/</link><description>Recent content in OS on Herbdocs</description><generator>Hugo -- gohugo.io</generator><atom:link href="/docs/10.OS/index.xml" rel="self" type="application/rss+xml"/><item><title>Docs: 00.OS相关概念</title><link>/docs/10.OS/00.OS%E7%9B%B8%E5%85%B3%E6%A6%82%E5%BF%B5/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/docs/10.OS/00.OS%E7%9B%B8%E5%85%B3%E6%A6%82%E5%BF%B5/</guid><description>
&lt;h1 id="namespace">Namespace&lt;/h1>
&lt;p>当一台物理主机（宿主机）运行容器的时候，为了避免容器所需系统资源之间相互干扰。所以Docker利用操作系统的隔离技术-NameSpace，来实现在同一个操作系统中，不同容器之间的资源独立隔离运行。&lt;/p>
&lt;h2 id="隔离系统资源列表">隔离系统资源列表&lt;/h2>
&lt;p>Linux NameSpace是Linux系统提供的一种资源隔离机制，可实现系统资源的列表如下：&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th style="text-align:left">Mount&lt;/th>
&lt;th style="text-align:left">用于隔离文件系统的挂载点&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td style="text-align:left">UTS&lt;/td>
&lt;td style="text-align:left">用于隔离HostName和DomainName&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:left">IPC&lt;/td>
&lt;td style="text-align:left">用于隔离进程间通信&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:left">PID&lt;/td>
&lt;td style="text-align:left">用于隔离进程ID&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:left">NetWork&lt;/td>
&lt;td style="text-align:left">用于隔离网络&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:left">User&lt;/td>
&lt;td style="text-align:left">用于隔离用户和用户组 UID/GID&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h2 id="查看系统资源隔离">查看系统资源隔离&lt;/h2>
&lt;h3 id="查找进程">查找进程&lt;/h3>
&lt;style>
.td-content .highlight {
margin-top: 0.5rem;
margin-bottom: 0.5rem;
}
.code-collapse1 {
overflow-y: auto;
max-height: 500px;
overflow-x: auto;
max-width: 100%;
}
&lt;/style>
&lt;div class="code-collapse1">
&lt;div class="highlight">&lt;div style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">
&lt;table style="border-spacing:0;padding:0;margin:0;border:0;">&lt;tr>&lt;td style="vertical-align:top;padding:0;margin:0;border:0;">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>ps aux | grep ssh
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;h3 id="查看namespace-ns">查看NameSpace(NS)&lt;/h3>
&lt;style>
.td-content .highlight {
margin-top: 0.5rem;
margin-bottom: 0.5rem;
}
.code-collapse1 {
overflow-y: auto;
max-height: 500px;
overflow-x: auto;
max-width: 100%;
}
&lt;/style>
&lt;div class="code-collapse1">
&lt;div class="highlight">&lt;div style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">
&lt;table style="border-spacing:0;padding:0;margin:0;border:0;">&lt;tr>&lt;td style="vertical-align:top;padding:0;margin:0;border:0;">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>ll /proc/727 /ns/
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;h1 id="linux-cgroup">Linux CGroup&lt;/h1>
&lt;p>Linux Control Group， 是Linux内核的一个功能，用来限制、控制与分离一个进程组群的资源（如CPU、内存、磁盘输入输出等）。这个项目最早是由Google的工程师在2006年发起（主要是Paul Menage和Rohit Seth），最早的名称为进程容器（process containers）。在2007年时，因为在Linux内核中，容器（container）这个名词太过广泛，为避免混乱，被重命名为cgroup，并且被合并到2.6.24版的内核中去。然后，其它开始了他的发展。 &lt;/p>
&lt;p>Linux CGroupCgroup 可​​​为​​​系​​​统​​​中​​​所​​​运​​​行​​​任​​​务​​​（进​​​程​​​）的​​​用​​​户​​​定​​​义​​​组​​​群​​​分​​​配​​​资​​​源​​​ — 比​​​如​​​ CPU 时​​​间​​​、​​​系​​​统​​​内​​​存​​​、​​​网​​​络​​​带​​​宽​​​或​​​者​​​这​​​些​​​资​​​源​​​的​​​组​​​合​​​。​​​可​​​以​​​监​​​控​​​​​​配​​​置​​​的​​​ cgroup，拒​​​绝​​​ cgroup 访​​​问​​​某​​​些​​​资​​​源​​​，甚​​​至​​​在​​​运​​​行​​​的​​​系​​​统​​​中​​​动​​​态​​​配​​​置​​​​cgroup。&lt;/p>
&lt;p>主要功能:&lt;/p>
&lt;p>限制资源使用，比如内存使用上限以及文件系统的缓存限制。&lt;/p>
&lt;p>优先级控制，CPU利用和磁盘IO吞吐。&lt;/p>
&lt;p>一些审计或一些统计，主要目的是为了计费。&lt;/p>
&lt;p>挂起进程，恢复执行进程。&lt;/p>
&lt;h2 id="cgroups子系统">cgroups子系统&lt;/h2>
&lt;p>1、cpu 子系统&lt;/p>
&lt;p>主要限制进程的 cpu 使用率。&lt;/p>
&lt;p>2、cpuacct 子系统&lt;/p>
&lt;p>可以统计 cgroups 中的进程的 cpu 使用报告。&lt;/p>
&lt;p>3、cpuset 子系统&lt;/p>
&lt;p>可以为 cgroups 中的进程分配单独的 cpu 节点或者内存节点。&lt;/p>
&lt;p>4、memory 子系统&lt;/p>
&lt;p>可以限制进程的 memory 使用量。&lt;/p>
&lt;p>5、blkio 子系统&lt;/p>
&lt;p>可以限制进程的块设备 io。&lt;/p>
&lt;p>6、devices 子系统&lt;/p>
&lt;p>可以控制进程能够访问某些设备。&lt;/p>
&lt;p>7、net_cls 子系统&lt;/p>
&lt;p>可以标记 cgroups 中进程的网络数据包，然后可以使用 tc 模块（traffic control）对数据包进行控制。&lt;/p>
&lt;p>8、net_prio&lt;/p>
&lt;p>用来设计网络流量的优先级&lt;/p>
&lt;p>9、freezer 子系统&lt;/p>
&lt;p>可以挂起或者恢复 cgroups 中的进程。&lt;/p>
&lt;p>10、ns 子系统&lt;/p>
&lt;p>可以使不同 cgroups 下面的进程使用不同的 namespace&lt;/p>
&lt;p>11、hugetlb&lt;/p>
&lt;p>主要针对于HugeTLB系统进行限制，这是一个大页文件系统。&lt;/p>
&lt;h2 id="cgroups层级结构-hierarchy">cgroups层级结构(Hierarchy)&lt;/h2>
&lt;p>内核使用 cgroup 结构体来表示一个 control group 对某一个或者某几个 cgroups 子系统的资源限制。cgroup 结构体可以组织成一颗树的形式，每一棵cgroup 结构体组成的树称之为一个 cgroups 层级结构。&lt;/p>
&lt;p>cgroups层级结构可以 attach 一个或者几个 cgroups 子系统，当前层级结构可以对其 attach 的 cgroups 子系统进行资源的限制。每一个 cgroups 子系统只能被 attach 到一个 cpu 层级结构中。&lt;/p>
&lt;p>&lt;img src="../imgs/20220107_os_1.png" alt="20220107_os_1.png">&lt;/p>
&lt;p>创建了 cgroups 层级结构中的节点（cgroup 结构体）之后，可以把进程加入到某一个节点的控制任务列表中，一个节点的控制列表中的所有进程都会受到当前节点的资源限制。同时某一个进程也可以被加入到不同的 cgroups 层级结构的节点中，因为不同的 cgroups 层级结构可以负责不同的系统资源。所以说进程和 cgroup 结构体是一个多对多的关系。&lt;/p>
&lt;h2 id="查看系统资源限制">查看系统资源限制&lt;/h2>
&lt;style>
.td-content .highlight {
margin-top: 0.5rem;
margin-bottom: 0.5rem;
}
.code-collapse1 {
overflow-y: auto;
max-height: 500px;
overflow-x: auto;
max-width: 100%;
}
&lt;/style>
&lt;div class="code-collapse1">
&lt;div class="highlight">&lt;div style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">
&lt;table style="border-spacing:0;padding:0;margin:0;border:0;">&lt;tr>&lt;td style="vertical-align:top;padding:0;margin:0;border:0;">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>cat /proc/cgroups
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;h2 id="cpu限制实战">CPU限制实战&lt;/h2>
&lt;h3 id="查看cgroup挂载点">查看cgroup挂载点&lt;/h3>
&lt;style>
.td-content .highlight {
margin-top: 0.5rem;
margin-bottom: 0.5rem;
}
.code-collapse1 {
overflow-y: auto;
max-height: 500px;
overflow-x: auto;
max-width: 100%;
}
&lt;/style>
&lt;div class="code-collapse1">
&lt;div class="highlight">&lt;div style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">
&lt;table style="border-spacing:0;padding:0;margin:0;border:0;">&lt;tr>&lt;td style="vertical-align:top;padding:0;margin:0;border:0;">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>mount -t cgroup
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;h3 id="创建隔离组">创建隔离组&lt;/h3>
&lt;style>
.td-content .highlight {
margin-top: 0.5rem;
margin-bottom: 0.5rem;
}
.code-collapse1 {
overflow-y: auto;
max-height: 500px;
overflow-x: auto;
max-width: 100%;
}
&lt;/style>
&lt;div class="code-collapse1">
&lt;div class="highlight">&lt;div style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">
&lt;table style="border-spacing:0;padding:0;margin:0;border:0;">&lt;tr>&lt;td style="vertical-align:top;padding:0;margin:0;border:0;">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">1
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">2
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a90d91">cd&lt;/span> /sys/fs/cgroup/cpu &lt;span style="color:#177500"># 进入cgroup挂载点&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>mkdir cpu_demo &lt;span style="color:#177500"># 创建目录后会自动生成文件&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ls cpu_demo/
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;h3 id="测试cpu">测试cpu&lt;/h3>
&lt;p>死循环程序测试cpu&lt;/p>
&lt;style>
.td-content .highlight {
margin-top: 0.5rem;
margin-bottom: 0.5rem;
}
.code-collapse1 {
overflow-y: auto;
max-height: 500px;
overflow-x: auto;
max-width: 100%;
}
&lt;/style>
&lt;div class="code-collapse1">
&lt;div class="highlight">&lt;div style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">
&lt;table style="border-spacing:0;padding:0;margin:0;border:0;">&lt;tr>&lt;td style="vertical-align:top;padding:0;margin:0;border:0;">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">1
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">2
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">3
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">4
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">5
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">6
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-xml" data-lang="xml">&lt;span style="display:flex;">&lt;span>int main(void)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> int i=0;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> for(;;) i++;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> return 0;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;p>启动程序后cpu使用100%
默认-1不限制，现在改成30000，可以理解使用率限制在30%&lt;/p>
&lt;style>
.td-content .highlight {
margin-top: 0.5rem;
margin-bottom: 0.5rem;
}
.code-collapse1 {
overflow-y: auto;
max-height: 500px;
overflow-x: auto;
max-width: 100%;
}
&lt;/style>
&lt;div class="code-collapse1">
&lt;div class="highlight">&lt;div style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">
&lt;table style="border-spacing:0;padding:0;margin:0;border:0;">&lt;tr>&lt;td style="vertical-align:top;padding:0;margin:0;border:0;">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a90d91">echo&lt;/span> &lt;span style="color:#1c01ce">30000&lt;/span> &amp;gt; /sys/fs/cgroup/cpu/cpu_demo/cpu.cfs_quota_us
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;p>找到进程号增加到cpu tasks里面，再看top  cpu使用率很快就下来
&lt;style>
.td-content .highlight {
margin-top: 0.5rem;
margin-bottom: 0.5rem;
}
.code-collapse1 {
overflow-y: auto;
max-height: 500px;
overflow-x: auto;
max-width: 100%;
}
&lt;/style>
&lt;div class="code-collapse1">
&lt;div class="highlight">&lt;div style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">
&lt;table style="border-spacing:0;padding:0;margin:0;border:0;">&lt;tr>&lt;td style="vertical-align:top;padding:0;margin:0;border:0;">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a90d91">echo&lt;/span> &amp;lt;pid&amp;gt; &amp;gt;&amp;gt; /sys/fs/cgroup/cpu/cpu_demo/tasks
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;/div>&lt;/p>
&lt;p>其他资源限制同cpu限制&lt;/p>
&lt;h2 id="内存限制实战">内存限制实战&lt;/h2>
&lt;style>
.td-content .highlight {
margin-top: 0.5rem;
margin-bottom: 0.5rem;
}
.code-collapse1 {
overflow-y: auto;
max-height: 500px;
overflow-x: auto;
max-width: 100%;
}
&lt;/style>
&lt;div class="code-collapse1">
&lt;div class="highlight">&lt;div style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">
&lt;table style="border-spacing:0;padding:0;margin:0;border:0;">&lt;tr>&lt;td style="vertical-align:top;padding:0;margin:0;border:0;">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">1
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">2
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">3
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">4
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">5
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">6
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">7
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">8
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">9
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>$ service sshd status
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$ &lt;span style="color:#a90d91">cd&lt;/span> /sys/fs/cgroup/memory/system.slice/sshd.service
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#177500"># 查看内存限制(byte)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$ cat memory.limit_in_bytes
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#177500"># 设置限制内存&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$ &lt;span style="color:#a90d91">echo&lt;/span> 64k &amp;gt; memory.limit_in_bytes
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$ cat memory.limit_in_bytes
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#1c01ce">65536&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;h1 id="reference">Reference&lt;/h1>
&lt;p>&lt;a href="https://www.cnblogs.com/menkeyi/p/10941843.html">Linux CGroup总结&lt;/a>&lt;/p>
&lt;p>&lt;a href="https://github.com/opencontainers/runtime-spec/blob/main/config-linux.md#control-groups">https://github.com/opencontainers/runtime-spec/blob/main/config-linux.md#control-groups&lt;/a>&lt;/p>
&lt;p>&lt;a href="https://man7.org/linux/man-pages/man7/cgroups.7.html">https://man7.org/linux/man-pages/man7/cgroups.7.html&lt;/a>&lt;/p></description></item><item><title>Docs: Linux负载均衡LVS之IPVS</title><link>/docs/10.OS/Linux%E8%B4%9F%E8%BD%BD%E5%9D%87%E8%A1%A1LVS%E4%B9%8BIPVS/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/docs/10.OS/Linux%E8%B4%9F%E8%BD%BD%E5%9D%87%E8%A1%A1LVS%E4%B9%8BIPVS/</guid><description>
&lt;h1 id="名词概念">名词概念&lt;/h1>
&lt;h2 id="lvs">LVS&lt;/h2>
&lt;p>LVS（Linux Virtual Server）即Linux虚拟服务器，是一个虚拟的服务器集群系统，由&lt;a href="https://baike.baidu.com/item/%E7%AB%A0%E6%96%87%E5%B5%A9">章文嵩&lt;/a>博士在1998年5月成立，在linux2.6+后将lvs自动加入了kernel模块。&lt;/p>
&lt;p>LVS的用户空间的命令行管理工具为ipvsadm，ipvs是工作在内核中netfilter的INPUT的钩子函数上，对进入的报文在没有进入用户空间前，对这些报文进行操作。&lt;/p>
&lt;h2 id="ipvs">IPVS&lt;/h2>
&lt;p>IPVS是LVS（Linux Virtual Server）项目重要组成部分，目前包含于官方Linux Kernel，IPVS依赖于netfilter框架，位于内核源码的net/netfilter/ipvs目录下。&lt;/p>
&lt;p>&lt;a href="http://www.linuxvirtualserver.org/software/ipvs.html">IPVS&lt;/a>是&lt;a href="http://www.linuxvirtualserver.org/">LVS&lt;/a>项目的一部分，是一款运行在Linux kernel当中的4层负载均衡器，性能异常优秀。 &lt;/p>
&lt;h2 id="rs">RS&lt;/h2>
&lt;p>realserver，常简称为RS&lt;/p>
&lt;h2 id="nat">NAT&lt;/h2>
&lt;p>网络地址转换(Network Address Translate)&lt;/p>
&lt;h2 id="snat">SNAT&lt;/h2>
&lt;p>原地址转换&lt;/p>
&lt;h2 id="dnat">DNAT&lt;/h2>
&lt;p>目标地址转换&lt;/p>
&lt;h2 id="几种ip">几种IP&lt;/h2>
&lt;p>&lt;img src="../imgs/20220227_ipvs_1.png" alt="20220227_ipvs_1.png">&lt;/p>
&lt;h3 id="vip">VIP&lt;/h3>
&lt;p>virtual IP，LVS服务器上接收外网数据包的网卡IP地址。&lt;/p>
&lt;h3 id="dip">DIP&lt;/h3>
&lt;p>director IP，LVS服务器上转发数据包到realserver的网卡IP地址。&lt;/p>
&lt;h3 id="rip">RIP&lt;/h3>
&lt;p>realserver(常简称为RS)上接收Director转发数据包的IP，即提供服务的服务器IP。&lt;/p>
&lt;p>CIP:客户端的IP。&lt;/p>
&lt;h1 id="ipvs的三种转发模式">IPVS的三种转发模式&lt;/h1>
&lt;h2 id="dr模式-direct-routing">DR模式(Direct Routing)&lt;/h2>
&lt;p>DR模式下，客户端的请求包到达负载均衡器的虚拟服务IP端口后，负载均衡器不会改写请求包的IP和端口，但是会改写请求包的MAC地址为后端RS的MAC地址，然后将数据包转发；真实服务器处理请求后，响应包直接回给客户端，不再经过负载均衡器。所以DR模式的转发效率是最高的，特别适合下行流量较大的业务场景，比如请求视频等大文件。&lt;/p>
&lt;h2 id="nat模式-network-address-translation">NAT模式(Network Address Translation)&lt;/h2>
&lt;p>NAT模式下，请求包和响应包都需要经过LB处理。当客户端的请求到达虚拟服务后，LB会对请求包做目的地址转换（DNAT），将请求包的目的IP改写为RS的IP。当收到RS的响应后，LB会对响应包做源地址转换（SNAT），将响应包的源IP改写为LB的IP。&lt;/p>
&lt;h2 id="tun模式">TUN模式&lt;/h2>
&lt;p>采用NAT技术时，由于请求和响应报文都必须经过调度器地址重写，当客户请求越来越多时，调度器的处理能力将成为瓶颈。为了解决这个问题，调度器把请求报文通过IP隧道转发至真实服务器，而真实服务器将响应直接返回给客户，所以调度器只处理请求报文。由于一般网络服务响应报文比请求报文大许多，采用VS/TUN技术后，调度器得到极大的解放，集群系统的最大吞吐量可以提高10倍。&lt;/p>
&lt;h2 id="fullnat模式">FULLNAT模式&lt;/h2>
&lt;p>FULLNAT模式下，LB会对请求包和响应包都做SNAT+DNAT。&lt;/p>
&lt;h1 id="转发模式对比">转发模式对比&lt;/h1>
&lt;p>三种转发模式性能从高到低：DR &amp;gt; NAT &amp;gt;FULLNAT。&lt;/p>
&lt;p>虽然FULLNAT模式的性能比不上DR和NAT，但是FULLNAT模式没有组网要求，允许LB和RS部署在不同的子网中，这给运维带来了便利。并且 FULLNAT模式具有更好的可拓展性，可以通过增加更多的LB节点，提升系统整体的负载均衡能力。&lt;/p>
&lt;h1 id="ipvs实现service">IPVS实现Service&lt;/h1>
&lt;h2 id="背景知识">背景知识&lt;/h2>
&lt;p>一定要让Kernel认为VIP是本地地址，这样4层的LVS才能开始工作。&lt;/p>
&lt;h2 id="网络结构">网络结构&lt;/h2>
&lt;p>&lt;img src="../imgs/20220227_ipvs_2.png" alt="20220227_ipvs_2.png">&lt;/p>
&lt;h2 id="步骤">步骤&lt;/h2>
&lt;p>1、绑定VIP到本地（欺骗内核）&lt;/p>
&lt;style>
.td-content .highlight {
margin-top: 0.5rem;
margin-bottom: 0.5rem;
}
.code-collapse1 {
overflow-y: auto;
max-height: 500px;
overflow-x: auto;
max-width: 100%;
}
&lt;/style>
&lt;div class="code-collapse1">
&lt;div class="highlight">&lt;div style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">
&lt;table style="border-spacing:0;padding:0;margin:0;border:0;">&lt;tr>&lt;td style="vertical-align:top;padding:0;margin:0;border:0;">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#177500"># ip route add to local 192.168.60.200/32 dev eth0proto kernel&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;p>2、为该虚IP创建一个IPVS的virtual server
&lt;style>
.td-content .highlight {
margin-top: 0.5rem;
margin-bottom: 0.5rem;
}
.code-collapse1 {
overflow-y: auto;
max-height: 500px;
overflow-x: auto;
max-width: 100%;
}
&lt;/style>
&lt;div class="code-collapse1">
&lt;div class="highlight">&lt;div style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">
&lt;table style="border-spacing:0;padding:0;margin:0;border:0;">&lt;tr>&lt;td style="vertical-align:top;padding:0;margin:0;border:0;">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#177500"># ipvsadm -A -t 192.168.60.200:9376 -s rr -p 600&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;/div>&lt;/p>
&lt;p>3、为该IPVS service创建相应的real server
&lt;style>
.td-content .highlight {
margin-top: 0.5rem;
margin-bottom: 0.5rem;
}
.code-collapse1 {
overflow-y: auto;
max-height: 500px;
overflow-x: auto;
max-width: 100%;
}
&lt;/style>
&lt;div class="code-collapse1">
&lt;div class="highlight">&lt;div style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">
&lt;table style="border-spacing:0;padding:0;margin:0;border:0;">&lt;tr>&lt;td style="vertical-align:top;padding:0;margin:0;border:0;">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">1
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">2
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#177500"># ipvsadm -A -t 192.168.60.200:9376 -r 10.1.2.3:80 -m&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#177500"># ipvsadm -A -t 192.168.60.200:9376 -r 10.1.4.5:80 -m&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#177500"># ipvsadm -A -t 192.168.60.200:9376 -r 10.1.3.8:80 -m&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;/div>&lt;/p>
&lt;h1 id="reference">Reference&lt;/h1>
&lt;p>&lt;a href="https://www.cnblogs.com/lipengxiang2009/p/7349271.html">Linux负载均衡LVS（IPVS）&lt;/a>&lt;/p>
&lt;p>&lt;a href="https://www.sohu.com/a/223150286_744906">应用负载均衡之LVS(一)：基本概念和三种模式&lt;/a>&lt;/p>
&lt;p>&lt;a href="https://www.bilibili.com/video/BV1XJ411s7cd?spm_id_from=333.999.0.0">IPVS实现Service&lt;/a>&lt;/p></description></item><item><title>Docs: shell</title><link>/docs/10.OS/shell/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/docs/10.OS/shell/</guid><description>
&lt;h1 id="introduction">Introduction&lt;/h1>
&lt;p>shell脚本相关&lt;/p></description></item><item><title>Docs: 进程</title><link>/docs/10.OS/%E8%BF%9B%E7%A8%8B/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/docs/10.OS/%E8%BF%9B%E7%A8%8B/</guid><description>
&lt;h1 id="introduction">Introduction&lt;/h1>
&lt;p>进程相关&lt;/p></description></item><item><title>Docs: 文件系统</title><link>/docs/10.OS/%E6%96%87%E4%BB%B6%E7%B3%BB%E7%BB%9F/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/docs/10.OS/%E6%96%87%E4%BB%B6%E7%B3%BB%E7%BB%9F/</guid><description>
&lt;h1 id="introduction">Introduction&lt;/h1>
&lt;p>文件系统相关&lt;/p></description></item></channel></rss>