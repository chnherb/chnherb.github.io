<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Herbdocs – SQL引擎</title><link>/docs/30.%E6%95%B0%E6%8D%AE%E5%BA%93/SQL%E5%BC%95%E6%93%8E/</link><description>Recent content in SQL引擎 on Herbdocs</description><generator>Hugo -- gohugo.io</generator><atom:link href="/docs/30.%E6%95%B0%E6%8D%AE%E5%BA%93/SQL%E5%BC%95%E6%93%8E/index.xml" rel="self" type="application/rss+xml"/><item><title>Docs: 01.SQL解析器介绍</title><link>/docs/30.%E6%95%B0%E6%8D%AE%E5%BA%93/SQL%E5%BC%95%E6%93%8E/01.SQL%E8%A7%A3%E6%9E%90%E5%99%A8%E4%BB%8B%E7%BB%8D/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/docs/30.%E6%95%B0%E6%8D%AE%E5%BA%93/SQL%E5%BC%95%E6%93%8E/01.SQL%E8%A7%A3%E6%9E%90%E5%99%A8%E4%BB%8B%E7%BB%8D/</guid><description>
&lt;h1 id="背景">背景&lt;/h1>
&lt;p>传统的关系型数据库都支持 SQL 查询，另外在大数据领域，为了降低大数据的学习成本和难度方便用户，都开始支持 SQL 查询。SQL 查询让更多的用户可以方便快捷地查询数据，极大降低了学习门槛。&lt;/p>
&lt;h1 id="解析流程">解析流程&lt;/h1>
&lt;p>通常解析器主要包括：&lt;/p>
&lt;ul>
&lt;li>词法解析&lt;/li>
&lt;li>语法解析&lt;/li>
&lt;li>语义解析&lt;/li>
&lt;/ul>
&lt;h2 id="词法解析">词法解析&lt;/h2>
&lt;p>根据构词规则识别字符并切割成一个个的词条，如遇到空格进行分割，遇到分号时结束词法解析。&lt;/p>
&lt;h2 id="语法解析">语法解析&lt;/h2>
&lt;p>语法分析的任务会在词法分析的结果上将词条序列组合成不同语法短句，组成的语法短句将与相应的语法规则进行适配，若适配成功则生成对应的抽象语法树，否则报会抛出语法错误异常。&lt;/p>
&lt;h2 id="语义解析">语义解析&lt;/h2>
&lt;p>语义分析的任务是对语法解析得到的抽象语法树进行有效的校验，比如字段、字段类型、函数、表等进行检查。&lt;/p>
&lt;h1 id="常用sql解析器">常用SQL解析器&lt;/h1>
&lt;p>&lt;strong>C/C++中，可以使用 LEX 和 YACC 来做词法分析和语法分析；Java中，可以使用 JavaCC 或 ANTLR&lt;/strong> 。&lt;/p>
&lt;h1 id="antlr">ANTLR&lt;/h1>
&lt;p>ANTLR是一款功能强大的语法分析器生成器，几乎支持所有主流变成语言的解析（&lt;a href="https://github.com/antlr/grammars-v4">antlr/grammars-v4&lt;/a>）。可以用来读取、处理、执行和转换结构化文本或者二进制文件。在大数据的一些SQL框架里面有有广泛的应用，比如Hive的词法文件是ANTLR3写的，Presto词法文件也是ANTLR4实现的，SparkSQLambda词法文件也是用Presto的词法文件改写的，另外还有HBase的SQL工具Phoenix也是用ANTLR工具进行SQL解析的。&lt;/p>
&lt;h2 id="执行过程">执行过程&lt;/h2>
&lt;ul>
&lt;li>实现词法文件（.g4）&lt;/li>
&lt;li>生成词法分析器和语法分析器&lt;/li>
&lt;li>生成抽象语法书（AST）&lt;/li>
&lt;li>遍历AST，生成语义树&lt;/li>
&lt;li>访问统计信息&lt;/li>
&lt;li>生成逻辑执行计划&lt;/li>
&lt;li>生成物理执行计划&lt;/li>
&lt;/ul>
&lt;h2 id="parser">Parser&lt;/h2>
&lt;p>Parser用来识别语言程序，包括两个部分：&lt;/p>
&lt;ul>
&lt;li>
&lt;p>词法分析器：关键字、标识符；&lt;/p>
&lt;/li>
&lt;li>
&lt;p>语法分析器：基于词法分析结果构造语法分析树。
转换过程：&lt;/p>
&lt;/li>
&lt;li>
&lt;p>字符流&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Token流&lt;/p>
&lt;/li>
&lt;li>
&lt;p>（语法分析树）非叶子节点&lt;/p>
&lt;/li>
&lt;li>
&lt;p>（语法分析树）叶子结点&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h2 id="grammar">Grammar&lt;/h2>
&lt;p>ANTLR提供了很多常用语言的语法文件（&lt;a href="https://github.com/antlr/grammars-v4">antlr/grammars-v4&lt;/a>）。&lt;/p>
&lt;p>使用语法注意事项：&lt;/p>
&lt;ul>
&lt;li>语法名称和文件名要一致&lt;/li>
&lt;li>语法分析器规则以小写字母开始&lt;/li>
&lt;li>词法分析器规则以大写字母开始&lt;/li>
&lt;li>用'string'单引号引出字符串&lt;/li>
&lt;li>不需要指定开始符号&lt;/li>
&lt;li>规则以分号结束&lt;/li>
&lt;/ul>
&lt;h2 id="实现四则运算">实现四则运算&lt;/h2>
&lt;p>实现的基本流程：&lt;/p>
&lt;ol>
&lt;li>按照ANTLR4的规则编写自定义语法的语义规则, 保存成以g4为后缀的文件；&lt;/li>
&lt;li>使用ANTLR4工具处理g4文件，生成词法分析器、句法分析器代码、词典文件；&lt;/li>
&lt;li>编写代码继承Visitor类或实现Listener接口，开发自己的业务逻辑代码。
一般有两种模式：&lt;/li>
&lt;/ol>
&lt;ul>
&lt;li>
&lt;p>Visitor模式
&lt;style>
.td-content .highlight {
margin-top: 0.5rem;
margin-bottom: 0.5rem;
}
.code-collapse1 {
overflow-y: auto;
max-height: 500px;
overflow-x: auto;
max-width: 100%;
}
&lt;/style>
&lt;div class="code-collapse1">
&lt;div class="highlight">&lt;div style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">
&lt;table style="border-spacing:0;padding:0;margin:0;border:0;">&lt;tr>&lt;td style="vertical-align:top;padding:0;margin:0;border:0;">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>antlr4 -package com.chnherb.sql -no-listener -visitor .&lt;span style="color:#c41a16">\x&lt;/span>xx.g4
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;/div>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Listener模式
&lt;style>
.td-content .highlight {
margin-top: 0.5rem;
margin-bottom: 0.5rem;
}
.code-collapse1 {
overflow-y: auto;
max-height: 500px;
overflow-x: auto;
max-width: 100%;
}
&lt;/style>
&lt;div class="code-collapse1">
&lt;div class="highlight">&lt;div style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">
&lt;table style="border-spacing:0;padding:0;margin:0;border:0;">&lt;tr>&lt;td style="vertical-align:top;padding:0;margin:0;border:0;">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>antlr4 -package com.chnherb.sql -listener .&lt;span style="color:#c41a16">\x&lt;/span>xx.g4
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;/div>&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h3 id="定义词法规则文件">定义词法规则文件&lt;/h3>
&lt;p>CommonLexerRules.g4&lt;/p>
&lt;style>
.highlight {
overflow-y: auto;
max-height: 500px;
overflow-x: auto;
max-width: 130%;
}
.td-content .highlight {
margin-top: 0.5rem;
margin-bottom: 0.5rem;
}
&lt;/style>
&lt;details class="code-collapse">
&lt;summary>Expand/Collapse Code Block&lt;/summary>
&lt;div class="highlight">&lt;div style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">
&lt;table style="border-spacing:0;padding:0;margin:0;border:0;">&lt;tr>&lt;td style="vertical-align:top;padding:0;margin:0;border:0;">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 1
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 2
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 3
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 4
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 5
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 6
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 7
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 8
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 9
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">10
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">11
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">12
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">13
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">14
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">15
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">16
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">17
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">18
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">19
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-plain" data-lang="plain">&lt;span style="display:flex;">&lt;span>// 定义词法规则
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>lexer grammar CommonLexerRules;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>//////// 定义词法
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>// 匹配ID
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ID : [a-zA-Z]+ ;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>// 匹配INT
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>INT : [0-9]+ ;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>// 匹配换行符
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>NEWLINE: &amp;#39;\n&amp;#39;(&amp;#39;\r&amp;#39;?);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>// 跳过空格、跳格、换行符
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>WS : [ \t\n\r]+ -&amp;gt; skip;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>//////// 运算符
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>DIV:&amp;#39;/&amp;#39;;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>MUL:&amp;#39;*&amp;#39;;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ADD:&amp;#39;+&amp;#39;;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>SUB:&amp;#39;-&amp;#39;;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>EQU:&amp;#39;=&amp;#39;;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;/details>
&lt;br/>
&lt;h3 id="定义语法规则文件">定义语法规则文件&lt;/h3>
&lt;p>LibExpr.g4&lt;/p>
&lt;style>
.highlight {
overflow-y: auto;
max-height: 500px;
overflow-x: auto;
max-width: 130%;
}
.td-content .highlight {
margin-top: 0.5rem;
margin-bottom: 0.5rem;
}
&lt;/style>
&lt;details class="code-collapse">
&lt;summary>Expand/Collapse Code Block&lt;/summary>
&lt;div class="highlight">&lt;div style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">
&lt;table style="border-spacing:0;padding:0;margin:0;border:0;">&lt;tr>&lt;td style="vertical-align:top;padding:0;margin:0;border:0;">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 1
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 2
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 3
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 4
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 5
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 6
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 7
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 8
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 9
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">10
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">11
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">12
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">13
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">14
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">15
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">16
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">17
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">18
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">19
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">20
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">21
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">22
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">23
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-plain" data-lang="plain">&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>// 定于语法规则
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>grammar LibExpr;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>// 导入词法规则
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>import CommonLexerRules;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>// 词法根
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>prog:stat+ EOF?;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>// 定义声明
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>stat:expr (NEWLINE)? # printExpr
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> | ID &amp;#39;=&amp;#39; expr (NEWLINE)? # assign
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> | NEWLINE # blank
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>// 定义表达式
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>expr:expr op=(&amp;#39;*&amp;#39;|&amp;#39;/&amp;#39;) expr # MulDiv
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> |expr op=(&amp;#39;+&amp;#39;|&amp;#39;-&amp;#39;) expr # AddSub
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> |&amp;#39;(&amp;#39; expr &amp;#39;)&amp;#39; # Parens
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> |ID # Id
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> |INT # Int
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;/details>
&lt;br/>
&lt;h3 id="编译生成文件">编译生成文件&lt;/h3>
&lt;style>
.td-content .highlight {
margin-top: 0.5rem;
margin-bottom: 0.5rem;
}
.code-collapse1 {
overflow-y: auto;
max-height: 500px;
overflow-x: auto;
max-width: 100%;
}
&lt;/style>
&lt;div class="code-collapse1">
&lt;div class="highlight">&lt;div style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">
&lt;table style="border-spacing:0;padding:0;margin:0;border:0;">&lt;tr>&lt;td style="vertical-align:top;padding:0;margin:0;border:0;">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 1
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 2
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 3
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 4
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 5
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 6
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 7
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 8
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 9
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">10
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">11
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">12
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-xml" data-lang="xml">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000">&amp;lt;dependencies&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">&amp;lt;dependency&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">&amp;lt;groupId&amp;gt;&lt;/span>org.antlr&lt;span style="color:#000">&amp;lt;/groupId&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">&amp;lt;artifactId&amp;gt;&lt;/span>antlr4&lt;span style="color:#000">&amp;lt;/artifactId&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">&amp;lt;version&amp;gt;&lt;/span>4.9.3&lt;span style="color:#000">&amp;lt;/version&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">&amp;lt;/dependency&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">&amp;lt;dependency&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">&amp;lt;groupId&amp;gt;&lt;/span>org.antlr&lt;span style="color:#000">&amp;lt;/groupId&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">&amp;lt;artifactId&amp;gt;&lt;/span>antlr4-runtime&lt;span style="color:#000">&amp;lt;/artifactId&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">&amp;lt;version&amp;gt;&lt;/span>4.9.3&lt;span style="color:#000">&amp;lt;/version&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">&amp;lt;/dependency&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000">&amp;lt;/dependencies&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;p>执行命令：
&lt;style>
.td-content .highlight {
margin-top: 0.5rem;
margin-bottom: 0.5rem;
}
.code-collapse1 {
overflow-y: auto;
max-height: 500px;
overflow-x: auto;
max-width: 100%;
}
&lt;/style>
&lt;div class="code-collapse1">
&lt;div class="highlight">&lt;div style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">
&lt;table style="border-spacing:0;padding:0;margin:0;border:0;">&lt;tr>&lt;td style="vertical-align:top;padding:0;margin:0;border:0;">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>mvn generate-sources
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;/div>&lt;/p>
&lt;h3 id="编写示例代码">编写示例代码&lt;/h3>
&lt;p>示例文本：&lt;/p>
&lt;style>
.td-content .highlight {
margin-top: 0.5rem;
margin-bottom: 0.5rem;
}
.code-collapse1 {
overflow-y: auto;
max-height: 500px;
overflow-x: auto;
max-width: 100%;
}
&lt;/style>
&lt;div class="code-collapse1">
&lt;div class="highlight">&lt;div style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">
&lt;table style="border-spacing:0;padding:0;margin:0;border:0;">&lt;tr>&lt;td style="vertical-align:top;padding:0;margin:0;border:0;">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">1
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">2
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">3
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">4
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">5
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-plain" data-lang="plain">&lt;span style="display:flex;">&lt;span>1+2
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>1+2*3
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>1+2*3-4
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>1+2*3-4+20/5
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>(1+2)*3
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;p>逻辑代码：
&lt;style>
.highlight {
overflow-y: auto;
max-height: 500px;
overflow-x: auto;
max-width: 130%;
}
.td-content .highlight {
margin-top: 0.5rem;
margin-bottom: 0.5rem;
}
&lt;/style>
&lt;details class="code-collapse">
&lt;summary>Expand/Collapse Code Block&lt;/summary>
&lt;div class="highlight">&lt;div style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">
&lt;table style="border-spacing:0;padding:0;margin:0;border:0;">&lt;tr>&lt;td style="vertical-align:top;padding:0;margin:0;border:0;">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 1
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 2
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 3
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 4
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 5
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 6
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 7
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 8
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 9
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 10
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 11
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 12
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 13
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 14
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 15
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 16
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 17
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 18
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 19
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 20
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 21
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 22
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 23
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 24
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 25
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 26
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 27
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 28
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 29
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 30
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 31
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 32
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 33
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 34
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 35
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 36
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 37
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 38
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 39
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 40
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 41
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 42
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 43
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 44
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 45
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 46
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 47
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 48
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 49
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 50
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 51
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 52
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 53
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 54
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 55
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 56
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 57
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 58
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 59
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 60
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 61
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 62
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 63
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 64
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 65
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 66
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 67
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 68
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 69
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 70
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 71
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 72
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 73
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 74
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 75
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 76
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 77
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 78
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 79
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 80
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 81
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 82
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 83
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 84
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 85
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 86
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 87
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 88
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 89
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 90
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 91
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 92
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 93
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 94
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 95
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 96
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 97
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 98
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 99
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">100
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">101
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">102
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">103
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a90d91">package&lt;/span> &lt;span style="color:#000">com.chnherb.sql&lt;/span>&lt;span style="color:#000">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a90d91">import&lt;/span> &lt;span style="color:#000">java.util.HashMap&lt;/span>&lt;span style="color:#000">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a90d91">import&lt;/span> &lt;span style="color:#000">java.util.Map&lt;/span>&lt;span style="color:#000">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#177500">/**
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#177500"> * 重写访问器规则，实现数据计算功能
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#177500"> * 目标：
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#177500"> * 1+2 =&amp;gt; 1+2=3
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#177500"> * 1+2*4 =&amp;gt; 1+2*4=9
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#177500"> * 1+2*4-5 =&amp;gt; 1+2*4-5=4
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#177500"> * 1+2*4-5+20/5 =&amp;gt; 1+2*4-5+20/5=8
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#177500"> * (1+2)*4 =&amp;gt; (1+2)*4=12
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#177500"> */&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a90d91">public&lt;/span> &lt;span style="color:#a90d91">class&lt;/span> &lt;span style="color:#3f6e75">LibExprVisitorImpl&lt;/span> &lt;span style="color:#a90d91">extends&lt;/span> &lt;span style="color:#000">LibExprBaseVisitor&lt;/span>&lt;span style="color:#000">&amp;lt;&lt;/span>&lt;span style="color:#000">Integer&lt;/span>&lt;span style="color:#000">&amp;gt;&lt;/span> &lt;span style="color:#000">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#177500">// 定义数据
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#177500">&lt;/span> &lt;span style="color:#000">Map&lt;/span>&lt;span style="color:#000">&amp;lt;&lt;/span>&lt;span style="color:#000">String&lt;/span>&lt;span style="color:#000">,&lt;/span>&lt;span style="color:#000">Integer&lt;/span>&lt;span style="color:#000">&amp;gt;&lt;/span> &lt;span style="color:#000">data&lt;/span> &lt;span style="color:#000">=&lt;/span> &lt;span style="color:#a90d91">new&lt;/span> &lt;span style="color:#000">HashMap&lt;/span>&lt;span style="color:#000">&amp;lt;&lt;/span>&lt;span style="color:#000">String&lt;/span>&lt;span style="color:#000">,&lt;/span>&lt;span style="color:#000">Integer&lt;/span>&lt;span style="color:#000">&amp;gt;();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#177500">// expr (NEWLINE)? # printExpr
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#177500">&lt;/span> &lt;span style="color:#000">@Override&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a90d91">public&lt;/span> &lt;span style="color:#000">Integer&lt;/span> &lt;span style="color:#000">visitPrintExpr&lt;/span>&lt;span style="color:#000">(&lt;/span>&lt;span style="color:#000">LibExprParser&lt;/span>&lt;span style="color:#000">.&lt;/span>&lt;span style="color:#836c28">PrintExprContext&lt;/span> &lt;span style="color:#000">ctx&lt;/span>&lt;span style="color:#000">)&lt;/span> &lt;span style="color:#000">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">System&lt;/span>&lt;span style="color:#000">.&lt;/span>&lt;span style="color:#836c28">out&lt;/span>&lt;span style="color:#000">.&lt;/span>&lt;span style="color:#836c28">println&lt;/span>&lt;span style="color:#000">(&lt;/span>&lt;span style="color:#000">ctx&lt;/span>&lt;span style="color:#000">.&lt;/span>&lt;span style="color:#836c28">expr&lt;/span>&lt;span style="color:#000">().&lt;/span>&lt;span style="color:#836c28">getText&lt;/span>&lt;span style="color:#000">()+&lt;/span>&lt;span style="color:#c41a16">&amp;#34;=&amp;#34;&lt;/span>&lt;span style="color:#000">+&lt;/span>&lt;span style="color:#000">visit&lt;/span>&lt;span style="color:#000">(&lt;/span>&lt;span style="color:#000">ctx&lt;/span>&lt;span style="color:#000">.&lt;/span>&lt;span style="color:#836c28">expr&lt;/span>&lt;span style="color:#000">()));&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a90d91">return&lt;/span> &lt;span style="color:#000">visit&lt;/span>&lt;span style="color:#000">(&lt;/span>&lt;span style="color:#000">ctx&lt;/span>&lt;span style="color:#000">.&lt;/span>&lt;span style="color:#836c28">expr&lt;/span>&lt;span style="color:#000">());&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#177500">// ID &amp;#39;=&amp;#39; expr (NEWLINE)? # assign
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#177500">&lt;/span> &lt;span style="color:#000">@Override&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a90d91">public&lt;/span> &lt;span style="color:#000">Integer&lt;/span> &lt;span style="color:#000">visitAssign&lt;/span>&lt;span style="color:#000">(&lt;/span>&lt;span style="color:#000">LibExprParser&lt;/span>&lt;span style="color:#000">.&lt;/span>&lt;span style="color:#836c28">AssignContext&lt;/span> &lt;span style="color:#000">ctx&lt;/span>&lt;span style="color:#000">)&lt;/span> &lt;span style="color:#000">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#177500">// 获取id
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#177500">&lt;/span> &lt;span style="color:#000">String&lt;/span> &lt;span style="color:#000">id&lt;/span> &lt;span style="color:#000">=&lt;/span> &lt;span style="color:#000">ctx&lt;/span>&lt;span style="color:#000">.&lt;/span>&lt;span style="color:#836c28">ID&lt;/span>&lt;span style="color:#000">().&lt;/span>&lt;span style="color:#836c28">getText&lt;/span>&lt;span style="color:#000">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#177500">// // 获取value
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#177500">&lt;/span> &lt;span style="color:#a90d91">int&lt;/span> &lt;span style="color:#000">value&lt;/span> &lt;span style="color:#000">=&lt;/span> &lt;span style="color:#000">Integer&lt;/span>&lt;span style="color:#000">.&lt;/span>&lt;span style="color:#836c28">valueOf&lt;/span>&lt;span style="color:#000">(&lt;/span>&lt;span style="color:#000">visit&lt;/span>&lt;span style="color:#000">(&lt;/span>&lt;span style="color:#000">ctx&lt;/span>&lt;span style="color:#000">.&lt;/span>&lt;span style="color:#836c28">expr&lt;/span>&lt;span style="color:#000">()));&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#177500">// 缓存ID数据
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#177500">&lt;/span> &lt;span style="color:#000">data&lt;/span>&lt;span style="color:#000">.&lt;/span>&lt;span style="color:#836c28">put&lt;/span>&lt;span style="color:#000">(&lt;/span>&lt;span style="color:#000">id&lt;/span>&lt;span style="color:#000">,&lt;/span>&lt;span style="color:#000">value&lt;/span>&lt;span style="color:#000">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#177500">// 打印日志
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#177500">&lt;/span> &lt;span style="color:#000">System&lt;/span>&lt;span style="color:#000">.&lt;/span>&lt;span style="color:#836c28">out&lt;/span>&lt;span style="color:#000">.&lt;/span>&lt;span style="color:#836c28">println&lt;/span>&lt;span style="color:#000">(&lt;/span>&lt;span style="color:#000">id&lt;/span>&lt;span style="color:#000">+&lt;/span>&lt;span style="color:#c41a16">&amp;#34;=&amp;#34;&lt;/span>&lt;span style="color:#000">+&lt;/span>&lt;span style="color:#000">value&lt;/span>&lt;span style="color:#000">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a90d91">return&lt;/span> &lt;span style="color:#000">value&lt;/span>&lt;span style="color:#000">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#177500">// NEWLINE # blank
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#177500">&lt;/span> &lt;span style="color:#000">@Override&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a90d91">public&lt;/span> &lt;span style="color:#000">Integer&lt;/span> &lt;span style="color:#000">visitBlank&lt;/span>&lt;span style="color:#000">(&lt;/span>&lt;span style="color:#000">LibExprParser&lt;/span>&lt;span style="color:#000">.&lt;/span>&lt;span style="color:#836c28">BlankContext&lt;/span> &lt;span style="color:#000">ctx&lt;/span>&lt;span style="color:#000">)&lt;/span> &lt;span style="color:#000">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a90d91">return&lt;/span> &lt;span style="color:#000">0&lt;/span>&lt;span style="color:#000">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#177500">// expr op=(&amp;#39;*&amp;#39;|&amp;#39;/&amp;#39;) expr # MulDiv
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#177500">&lt;/span> &lt;span style="color:#000">@Override&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a90d91">public&lt;/span> &lt;span style="color:#000">Integer&lt;/span> &lt;span style="color:#000">visitMulDiv&lt;/span>&lt;span style="color:#000">(&lt;/span>&lt;span style="color:#000">LibExprParser&lt;/span>&lt;span style="color:#000">.&lt;/span>&lt;span style="color:#836c28">MulDivContext&lt;/span> &lt;span style="color:#000">ctx&lt;/span>&lt;span style="color:#000">)&lt;/span> &lt;span style="color:#000">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#177500">// 左侧数字
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#177500">&lt;/span> &lt;span style="color:#a90d91">int&lt;/span> &lt;span style="color:#000">left&lt;/span> &lt;span style="color:#000">=&lt;/span> &lt;span style="color:#000">Integer&lt;/span>&lt;span style="color:#000">.&lt;/span>&lt;span style="color:#836c28">valueOf&lt;/span>&lt;span style="color:#000">(&lt;/span>&lt;span style="color:#000">visit&lt;/span>&lt;span style="color:#000">(&lt;/span>&lt;span style="color:#000">ctx&lt;/span>&lt;span style="color:#000">.&lt;/span>&lt;span style="color:#836c28">expr&lt;/span>&lt;span style="color:#000">(&lt;/span>&lt;span style="color:#000">0&lt;/span>&lt;span style="color:#000">)));&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#177500">// 右侧数字
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#177500">&lt;/span> &lt;span style="color:#a90d91">int&lt;/span> &lt;span style="color:#000">right&lt;/span> &lt;span style="color:#000">=&lt;/span> &lt;span style="color:#000">Integer&lt;/span>&lt;span style="color:#000">.&lt;/span>&lt;span style="color:#836c28">valueOf&lt;/span>&lt;span style="color:#000">(&lt;/span>&lt;span style="color:#000">visit&lt;/span>&lt;span style="color:#000">(&lt;/span>&lt;span style="color:#000">ctx&lt;/span>&lt;span style="color:#000">.&lt;/span>&lt;span style="color:#836c28">expr&lt;/span>&lt;span style="color:#000">(&lt;/span>&lt;span style="color:#000">1&lt;/span>&lt;span style="color:#000">)));&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#177500">// 操作符号
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#177500">&lt;/span> &lt;span style="color:#a90d91">int&lt;/span> &lt;span style="color:#000">opType&lt;/span> &lt;span style="color:#000">=&lt;/span> &lt;span style="color:#000">ctx&lt;/span>&lt;span style="color:#000">.&lt;/span>&lt;span style="color:#836c28">op&lt;/span>&lt;span style="color:#000">.&lt;/span>&lt;span style="color:#836c28">getType&lt;/span>&lt;span style="color:#000">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#177500">// 调试
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#177500">&lt;/span> &lt;span style="color:#177500">// System.out.println(&amp;#34;visitMulDiv&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt; left:&amp;#34;+left+&amp;#34;,opType:&amp;#34;+opType+&amp;#34;,right:&amp;#34;+right);
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#177500">&lt;/span> &lt;span style="color:#177500">// 判断是否为乘法
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#177500">&lt;/span> &lt;span style="color:#a90d91">if&lt;/span>&lt;span style="color:#000">(&lt;/span>&lt;span style="color:#000">LibExprParser&lt;/span>&lt;span style="color:#000">.&lt;/span>&lt;span style="color:#836c28">MUL&lt;/span>&lt;span style="color:#000">==&lt;/span>&lt;span style="color:#000">opType&lt;/span>&lt;span style="color:#000">){&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a90d91">return&lt;/span> &lt;span style="color:#000">left&lt;/span>&lt;span style="color:#000">*&lt;/span>&lt;span style="color:#000">right&lt;/span>&lt;span style="color:#000">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#177500">// 判断是否为除法
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#177500">&lt;/span> &lt;span style="color:#a90d91">return&lt;/span> &lt;span style="color:#000">left&lt;/span>&lt;span style="color:#000">/&lt;/span>&lt;span style="color:#000">right&lt;/span>&lt;span style="color:#000">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#177500">// expr op=(&amp;#39;+&amp;#39;|&amp;#39;-&amp;#39;) expr # AddSub
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#177500">&lt;/span> &lt;span style="color:#000">@Override&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a90d91">public&lt;/span> &lt;span style="color:#000">Integer&lt;/span> &lt;span style="color:#000">visitAddSub&lt;/span>&lt;span style="color:#000">(&lt;/span>&lt;span style="color:#000">LibExprParser&lt;/span>&lt;span style="color:#000">.&lt;/span>&lt;span style="color:#836c28">AddSubContext&lt;/span> &lt;span style="color:#000">ctx&lt;/span>&lt;span style="color:#000">)&lt;/span> &lt;span style="color:#000">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#177500">// 获取值和符号
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#177500">&lt;/span> &lt;span style="color:#177500">// 左侧数字
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#177500">&lt;/span> &lt;span style="color:#a90d91">int&lt;/span> &lt;span style="color:#000">left&lt;/span> &lt;span style="color:#000">=&lt;/span> &lt;span style="color:#000">Integer&lt;/span>&lt;span style="color:#000">.&lt;/span>&lt;span style="color:#836c28">valueOf&lt;/span>&lt;span style="color:#000">(&lt;/span>&lt;span style="color:#000">visit&lt;/span>&lt;span style="color:#000">(&lt;/span>&lt;span style="color:#000">ctx&lt;/span>&lt;span style="color:#000">.&lt;/span>&lt;span style="color:#836c28">expr&lt;/span>&lt;span style="color:#000">(&lt;/span>&lt;span style="color:#000">0&lt;/span>&lt;span style="color:#000">)));&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#177500">// 右侧数字
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#177500">&lt;/span> &lt;span style="color:#a90d91">int&lt;/span> &lt;span style="color:#000">right&lt;/span> &lt;span style="color:#000">=&lt;/span> &lt;span style="color:#000">Integer&lt;/span>&lt;span style="color:#000">.&lt;/span>&lt;span style="color:#836c28">valueOf&lt;/span>&lt;span style="color:#000">(&lt;/span>&lt;span style="color:#000">visit&lt;/span>&lt;span style="color:#000">(&lt;/span>&lt;span style="color:#000">ctx&lt;/span>&lt;span style="color:#000">.&lt;/span>&lt;span style="color:#836c28">expr&lt;/span>&lt;span style="color:#000">(&lt;/span>&lt;span style="color:#000">1&lt;/span>&lt;span style="color:#000">)));&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#177500">// 操作符号
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#177500">&lt;/span> &lt;span style="color:#a90d91">int&lt;/span> &lt;span style="color:#000">opType&lt;/span> &lt;span style="color:#000">=&lt;/span> &lt;span style="color:#000">ctx&lt;/span>&lt;span style="color:#000">.&lt;/span>&lt;span style="color:#836c28">op&lt;/span>&lt;span style="color:#000">.&lt;/span>&lt;span style="color:#836c28">getType&lt;/span>&lt;span style="color:#000">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#177500">// 调试
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#177500">&lt;/span> &lt;span style="color:#177500">// System.out.println(&amp;#34;visitAddSub&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt; left:&amp;#34;+left+&amp;#34;,opType:&amp;#34;+opType+&amp;#34;,right:&amp;#34;+right);
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#177500">&lt;/span> &lt;span style="color:#177500">// 判断是否为加法
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#177500">&lt;/span> &lt;span style="color:#a90d91">if&lt;/span>&lt;span style="color:#000">(&lt;/span>&lt;span style="color:#000">LibExprParser&lt;/span>&lt;span style="color:#000">.&lt;/span>&lt;span style="color:#836c28">ADD&lt;/span>&lt;span style="color:#000">==&lt;/span>&lt;span style="color:#000">opType&lt;/span>&lt;span style="color:#000">){&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a90d91">return&lt;/span> &lt;span style="color:#000">left&lt;/span>&lt;span style="color:#000">+&lt;/span>&lt;span style="color:#000">right&lt;/span>&lt;span style="color:#000">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#177500">// 判断是否为减法
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#177500">&lt;/span> &lt;span style="color:#a90d91">return&lt;/span> &lt;span style="color:#000">left&lt;/span>&lt;span style="color:#000">-&lt;/span>&lt;span style="color:#000">right&lt;/span>&lt;span style="color:#000">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#177500">// &amp;#39;(&amp;#39; expr &amp;#39;)&amp;#39; # Parens
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#177500">&lt;/span> &lt;span style="color:#000">@Override&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a90d91">public&lt;/span> &lt;span style="color:#000">Integer&lt;/span> &lt;span style="color:#000">visitParens&lt;/span>&lt;span style="color:#000">(&lt;/span>&lt;span style="color:#000">LibExprParser&lt;/span>&lt;span style="color:#000">.&lt;/span>&lt;span style="color:#836c28">ParensContext&lt;/span> &lt;span style="color:#000">ctx&lt;/span>&lt;span style="color:#000">)&lt;/span> &lt;span style="color:#000">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#177500">// 递归下调
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#177500">&lt;/span> &lt;span style="color:#a90d91">return&lt;/span> &lt;span style="color:#000">visit&lt;/span>&lt;span style="color:#000">(&lt;/span>&lt;span style="color:#000">ctx&lt;/span>&lt;span style="color:#000">.&lt;/span>&lt;span style="color:#836c28">expr&lt;/span>&lt;span style="color:#000">());&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#177500">// ID # Id
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#177500">&lt;/span> &lt;span style="color:#000">@Override&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a90d91">public&lt;/span> &lt;span style="color:#000">Integer&lt;/span> &lt;span style="color:#000">visitId&lt;/span>&lt;span style="color:#000">(&lt;/span>&lt;span style="color:#000">LibExprParser&lt;/span>&lt;span style="color:#000">.&lt;/span>&lt;span style="color:#836c28">IdContext&lt;/span> &lt;span style="color:#000">ctx&lt;/span>&lt;span style="color:#000">)&lt;/span> &lt;span style="color:#000">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#177500">// 获取id
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#177500">&lt;/span> &lt;span style="color:#000">String&lt;/span> &lt;span style="color:#000">id&lt;/span> &lt;span style="color:#000">=&lt;/span> &lt;span style="color:#000">ctx&lt;/span>&lt;span style="color:#000">.&lt;/span>&lt;span style="color:#836c28">ID&lt;/span>&lt;span style="color:#000">().&lt;/span>&lt;span style="color:#836c28">getText&lt;/span>&lt;span style="color:#000">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#177500">// 判断ID是否被定义
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#177500">&lt;/span> &lt;span style="color:#a90d91">if&lt;/span>&lt;span style="color:#000">(&lt;/span>&lt;span style="color:#000">data&lt;/span>&lt;span style="color:#000">.&lt;/span>&lt;span style="color:#836c28">containsKey&lt;/span>&lt;span style="color:#000">(&lt;/span>&lt;span style="color:#000">id&lt;/span>&lt;span style="color:#000">)){&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#177500">// System.out.println(&amp;#34;visitId&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt; id:&amp;#34;+id+&amp;#34;,value:&amp;#34;+data.get(id));
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#177500">&lt;/span> &lt;span style="color:#a90d91">return&lt;/span> &lt;span style="color:#000">data&lt;/span>&lt;span style="color:#000">.&lt;/span>&lt;span style="color:#836c28">get&lt;/span>&lt;span style="color:#000">(&lt;/span>&lt;span style="color:#000">id&lt;/span>&lt;span style="color:#000">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a90d91">return&lt;/span> &lt;span style="color:#000">0&lt;/span>&lt;span style="color:#000">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#177500">// INT # Int
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#177500">&lt;/span> &lt;span style="color:#000">@Override&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a90d91">public&lt;/span> &lt;span style="color:#000">Integer&lt;/span> &lt;span style="color:#000">visitInt&lt;/span>&lt;span style="color:#000">(&lt;/span>&lt;span style="color:#000">LibExprParser&lt;/span>&lt;span style="color:#000">.&lt;/span>&lt;span style="color:#836c28">IntContext&lt;/span> &lt;span style="color:#000">ctx&lt;/span>&lt;span style="color:#000">)&lt;/span> &lt;span style="color:#000">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#177500">// System.out.println(&amp;#34;visitInt&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt; int:&amp;#34;+ctx.INT().getText());
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#177500">&lt;/span> &lt;span style="color:#a90d91">return&lt;/span> &lt;span style="color:#000">Integer&lt;/span>&lt;span style="color:#000">.&lt;/span>&lt;span style="color:#836c28">valueOf&lt;/span>&lt;span style="color:#000">(&lt;/span>&lt;span style="color:#000">ctx&lt;/span>&lt;span style="color:#000">.&lt;/span>&lt;span style="color:#836c28">INT&lt;/span>&lt;span style="color:#000">().&lt;/span>&lt;span style="color:#836c28">getText&lt;/span>&lt;span style="color:#000">());&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;/details>
&lt;br/>&lt;/p>
&lt;p>Main函数：&lt;/p>
&lt;style>
.highlight {
overflow-y: auto;
max-height: 500px;
overflow-x: auto;
max-width: 130%;
}
.td-content .highlight {
margin-top: 0.5rem;
margin-bottom: 0.5rem;
}
&lt;/style>
&lt;details class="code-collapse">
&lt;summary>Expand/Collapse Code Block&lt;/summary>
&lt;div class="highlight">&lt;div style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">
&lt;table style="border-spacing:0;padding:0;margin:0;border:0;">&lt;tr>&lt;td style="vertical-align:top;padding:0;margin:0;border:0;">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 1
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 2
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 3
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 4
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 5
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 6
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 7
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 8
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 9
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">10
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">11
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">12
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">13
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">14
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">15
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">16
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">17
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">18
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">19
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">20
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">21
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">22
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">23
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">24
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">25
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">26
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">27
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">28
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">29
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">30
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">31
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">32
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">33
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">34
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">35
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">36
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">37
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">38
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">39
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">40
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">41
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">42
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">43
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">44
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">45
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">46
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">47
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">48
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">49
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">50
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">51
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">52
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">53
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">54
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a90d91">package&lt;/span> &lt;span style="color:#000">com.chnherb.sql&lt;/span>&lt;span style="color:#000">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a90d91">import&lt;/span> &lt;span style="color:#000">org.antlr.v4.runtime.tree.ParseTree&lt;/span>&lt;span style="color:#000">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a90d91">import&lt;/span> &lt;span style="color:#000">java.io.FileNotFoundException&lt;/span>&lt;span style="color:#000">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a90d91">import&lt;/span> &lt;span style="color:#000">java.io.IOException&lt;/span>&lt;span style="color:#000">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a90d91">import&lt;/span> &lt;span style="color:#000">org.antlr.v4.runtime.*&lt;/span>&lt;span style="color:#000">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#177500">/**
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#177500"> * 打印语法树
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#177500"> */&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a90d91">public&lt;/span> &lt;span style="color:#a90d91">class&lt;/span> &lt;span style="color:#3f6e75">TestLibExprPrint&lt;/span> &lt;span style="color:#000">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#177500">// 打印语法树 input -&amp;gt; lexer -&amp;gt; tokens -&amp;gt; parser -&amp;gt; tree -&amp;gt; print
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#177500">&lt;/span> &lt;span style="color:#a90d91">public&lt;/span> &lt;span style="color:#a90d91">static&lt;/span> &lt;span style="color:#a90d91">void&lt;/span> &lt;span style="color:#000">main&lt;/span>&lt;span style="color:#000">(&lt;/span>&lt;span style="color:#000">String&lt;/span> &lt;span style="color:#000">args&lt;/span>&lt;span style="color:#000">[]){&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">printTree&lt;/span>&lt;span style="color:#000">(&lt;/span>&lt;span style="color:#c41a16">&amp;#34;./testCase.txt&amp;#34;&lt;/span>&lt;span style="color:#000">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#177500">/**
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#177500"> * 打印语法树 input -&amp;gt; lexer -&amp;gt; token -&amp;gt; parser -&amp;gt; tree
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#177500"> * @param fileName
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#177500"> */&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a90d91">private&lt;/span> &lt;span style="color:#a90d91">static&lt;/span> &lt;span style="color:#a90d91">void&lt;/span> &lt;span style="color:#000">printTree&lt;/span>&lt;span style="color:#000">(&lt;/span>&lt;span style="color:#000">String&lt;/span> &lt;span style="color:#000">fileName&lt;/span>&lt;span style="color:#000">){&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#177500">// 定义输入流
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#177500">&lt;/span> &lt;span style="color:#000">ANTLRInputStream&lt;/span> &lt;span style="color:#000">input&lt;/span> &lt;span style="color:#000">=&lt;/span> &lt;span style="color:#a90d91">null&lt;/span>&lt;span style="color:#000">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#177500">// 判断文件名是否为空,若不为空，则读取文件内容，若为空，则读取输入流
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#177500">&lt;/span> &lt;span style="color:#a90d91">if&lt;/span>&lt;span style="color:#000">(&lt;/span>&lt;span style="color:#000">fileName&lt;/span>&lt;span style="color:#000">!=&lt;/span>&lt;span style="color:#a90d91">null&lt;/span>&lt;span style="color:#000">){&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a90d91">try&lt;/span>&lt;span style="color:#000">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">input&lt;/span> &lt;span style="color:#000">=&lt;/span> &lt;span style="color:#a90d91">new&lt;/span> &lt;span style="color:#000">ANTLRFileStream&lt;/span>&lt;span style="color:#000">(&lt;/span>&lt;span style="color:#000">fileName&lt;/span>&lt;span style="color:#000">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">}&lt;/span>&lt;span style="color:#a90d91">catch&lt;/span>&lt;span style="color:#000">(&lt;/span>&lt;span style="color:#000">FileNotFoundException&lt;/span> &lt;span style="color:#000">fnfe&lt;/span>&lt;span style="color:#000">){&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">System&lt;/span>&lt;span style="color:#000">.&lt;/span>&lt;span style="color:#836c28">out&lt;/span>&lt;span style="color:#000">.&lt;/span>&lt;span style="color:#836c28">println&lt;/span>&lt;span style="color:#000">(&lt;/span>&lt;span style="color:#c41a16">&amp;#34;文件不存在，请检查后重试！&amp;#34;&lt;/span>&lt;span style="color:#000">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">}&lt;/span>&lt;span style="color:#a90d91">catch&lt;/span>&lt;span style="color:#000">(&lt;/span>&lt;span style="color:#000">IOException&lt;/span> &lt;span style="color:#000">ioe&lt;/span>&lt;span style="color:#000">){&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">System&lt;/span>&lt;span style="color:#000">.&lt;/span>&lt;span style="color:#836c28">out&lt;/span>&lt;span style="color:#000">.&lt;/span>&lt;span style="color:#836c28">println&lt;/span>&lt;span style="color:#000">(&lt;/span>&lt;span style="color:#c41a16">&amp;#34;文件读取异常，请检查后重试！&amp;#34;&lt;/span>&lt;span style="color:#000">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">}&lt;/span>&lt;span style="color:#a90d91">else&lt;/span>&lt;span style="color:#000">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a90d91">try&lt;/span>&lt;span style="color:#000">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">input&lt;/span> &lt;span style="color:#000">=&lt;/span> &lt;span style="color:#a90d91">new&lt;/span> &lt;span style="color:#000">ANTLRInputStream&lt;/span>&lt;span style="color:#000">(&lt;/span>&lt;span style="color:#000">System&lt;/span>&lt;span style="color:#000">.&lt;/span>&lt;span style="color:#836c28">in&lt;/span>&lt;span style="color:#000">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">}&lt;/span>&lt;span style="color:#a90d91">catch&lt;/span>&lt;span style="color:#000">(&lt;/span>&lt;span style="color:#000">FileNotFoundException&lt;/span> &lt;span style="color:#000">fnfe&lt;/span>&lt;span style="color:#000">){&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">System&lt;/span>&lt;span style="color:#000">.&lt;/span>&lt;span style="color:#836c28">out&lt;/span>&lt;span style="color:#000">.&lt;/span>&lt;span style="color:#836c28">println&lt;/span>&lt;span style="color:#000">(&lt;/span>&lt;span style="color:#c41a16">&amp;#34;文件不存在，请检查后重试！&amp;#34;&lt;/span>&lt;span style="color:#000">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">}&lt;/span>&lt;span style="color:#a90d91">catch&lt;/span>&lt;span style="color:#000">(&lt;/span>&lt;span style="color:#000">IOException&lt;/span> &lt;span style="color:#000">ioe&lt;/span>&lt;span style="color:#000">){&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">System&lt;/span>&lt;span style="color:#000">.&lt;/span>&lt;span style="color:#836c28">out&lt;/span>&lt;span style="color:#000">.&lt;/span>&lt;span style="color:#836c28">println&lt;/span>&lt;span style="color:#000">(&lt;/span>&lt;span style="color:#c41a16">&amp;#34;文件读取异常，请检查后重试！&amp;#34;&lt;/span>&lt;span style="color:#000">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#177500">// 定义词法规则分析器
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#177500">&lt;/span> &lt;span style="color:#000">LibExprLexer&lt;/span> &lt;span style="color:#000">lexer&lt;/span> &lt;span style="color:#000">=&lt;/span> &lt;span style="color:#a90d91">new&lt;/span> &lt;span style="color:#000">LibExprLexer&lt;/span>&lt;span style="color:#000">(&lt;/span>&lt;span style="color:#000">input&lt;/span>&lt;span style="color:#000">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#177500">// 生成通用字符流
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#177500">&lt;/span> &lt;span style="color:#000">CommonTokenStream&lt;/span> &lt;span style="color:#000">tokens&lt;/span> &lt;span style="color:#000">=&lt;/span> &lt;span style="color:#a90d91">new&lt;/span> &lt;span style="color:#000">CommonTokenStream&lt;/span>&lt;span style="color:#000">(&lt;/span>&lt;span style="color:#000">lexer&lt;/span>&lt;span style="color:#000">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#177500">// 语法解析
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#177500">&lt;/span> &lt;span style="color:#000">LibExprParser&lt;/span> &lt;span style="color:#000">parser&lt;/span> &lt;span style="color:#000">=&lt;/span> &lt;span style="color:#a90d91">new&lt;/span> &lt;span style="color:#000">LibExprParser&lt;/span>&lt;span style="color:#000">(&lt;/span>&lt;span style="color:#000">tokens&lt;/span>&lt;span style="color:#000">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#177500">// 生成语法树
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#177500">&lt;/span> &lt;span style="color:#000">ParseTree&lt;/span> &lt;span style="color:#000">tree&lt;/span> &lt;span style="color:#000">=&lt;/span> &lt;span style="color:#000">parser&lt;/span>&lt;span style="color:#000">.&lt;/span>&lt;span style="color:#836c28">prog&lt;/span>&lt;span style="color:#000">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#177500">// 打印语法树
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#177500">&lt;/span> &lt;span style="color:#177500">// System.out.println(tree.toStringTree(parser));
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#177500">&lt;/span> &lt;span style="color:#177500">// 生命访问器
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#177500">&lt;/span> &lt;span style="color:#000">LibExprVisitorImpl&lt;/span> &lt;span style="color:#000">visitor&lt;/span> &lt;span style="color:#000">=&lt;/span> &lt;span style="color:#a90d91">new&lt;/span> &lt;span style="color:#000">LibExprVisitorImpl&lt;/span>&lt;span style="color:#000">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">visitor&lt;/span>&lt;span style="color:#000">.&lt;/span>&lt;span style="color:#836c28">visit&lt;/span>&lt;span style="color:#000">(&lt;/span>&lt;span style="color:#000">tree&lt;/span>&lt;span style="color:#000">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;/details>
&lt;br/>
&lt;h2 id="解析csv文件">解析CSV文件&lt;/h2>
&lt;h3 id="裁剪g4文件">裁剪g4文件&lt;/h3>
&lt;p>定义SelectBase.g4文件。直接参考Presto源码，g4文件并不需要从零开发，只需要基于Presto的g4文件裁剪即可。&lt;/p>
&lt;p>核心规则为: SELECT  selectItem (',' selectItem)*  (FROM relation (',' relation)*)?&lt;/p>
&lt;p>查询数据表被抽象成了relation。&lt;/p>
&lt;p>裁剪后的内容如下：&lt;/p>
&lt;style>
.highlight {
overflow-y: auto;
max-height: 500px;
overflow-x: auto;
max-width: 130%;
}
.td-content .highlight {
margin-top: 0.5rem;
margin-bottom: 0.5rem;
}
&lt;/style>
&lt;details class="code-collapse">
&lt;summary>Expand/Collapse Code Block&lt;/summary>
&lt;div class="highlight">&lt;div style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">
&lt;table style="border-spacing:0;padding:0;margin:0;border:0;">&lt;tr>&lt;td style="vertical-align:top;padding:0;margin:0;border:0;">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 1
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 2
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 3
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 4
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 5
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 6
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 7
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 8
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 9
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 10
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 11
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 12
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 13
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 14
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 15
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 16
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 17
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 18
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 19
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 20
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 21
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 22
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 23
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 24
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 25
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 26
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 27
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 28
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 29
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 30
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 31
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 32
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 33
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 34
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 35
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 36
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 37
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 38
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 39
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 40
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 41
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 42
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 43
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 44
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 45
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 46
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 47
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 48
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 49
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 50
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 51
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 52
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 53
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 54
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 55
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 56
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 57
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 58
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 59
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 60
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 61
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 62
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 63
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 64
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 65
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 66
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 67
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 68
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 69
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 70
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 71
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 72
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 73
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 74
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 75
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 76
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 77
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 78
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 79
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 80
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 81
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 82
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 83
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 84
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 85
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 86
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 87
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 88
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 89
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 90
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 91
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 92
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 93
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 94
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 95
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 96
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 97
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 98
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 99
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">100
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">101
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">102
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">103
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">104
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-plain" data-lang="plain">&lt;span style="display:flex;">&lt;span>grammar SqlBase;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>tokens {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> DELIMITER
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>singleStatement
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> : statement EOF
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>statement
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> : query #statementDefault
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>query
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> : queryNoWith
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>queryNoWith:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> queryTerm
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>queryTerm
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> : queryPrimary #queryTermDefault
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>queryPrimary
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> : querySpecification #queryPrimaryDefault
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>querySpecification
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> : SELECT selectItem (&amp;#39;,&amp;#39; selectItem)*
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (FROM relation (&amp;#39;,&amp;#39; relation)*)?
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>selectItem
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> : expression #selectSingle
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>relation
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> : sampledRelation #relationDefault
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>expression
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> : booleanExpression
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>booleanExpression
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> : valueExpression #predicated
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>valueExpression
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> : primaryExpression #valueExpressionDefault
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>primaryExpression
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> : identifier #columnReference
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sampledRelation
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> : aliasedRelation
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>aliasedRelation
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> : relationPrimary
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>relationPrimary
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> : qualifiedName #tableName
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>qualifiedName
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> : identifier (&amp;#39;.&amp;#39; identifier)*
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>identifier
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> : IDENTIFIER #unquotedIdentifier
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>SELECT: &amp;#39;SELECT&amp;#39;;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>FROM: &amp;#39;FROM&amp;#39;;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>fragment DIGIT
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> : [0-9]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>fragment LETTER
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> : [A-Z]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>IDENTIFIER
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> : (LETTER | &amp;#39;_&amp;#39;) (LETTER | DIGIT | &amp;#39;_&amp;#39; | &amp;#39;@&amp;#39; | &amp;#39;:&amp;#39;)*
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>WS
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> : [ \r\n\t]+ -&amp;gt; channel(HIDDEN)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>// Catch-all for anything we can&amp;#39;t recognize.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>// We use this to be able to ignore and recover all the text
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>// when splitting statements with DelimiterLexer
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>UNRECOGNIZED
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> : .
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;/details>
&lt;br/>
&lt;h3 id="生成代码">生成代码&lt;/h3>
&lt;style>
.td-content .highlight {
margin-top: 0.5rem;
margin-bottom: 0.5rem;
}
.code-collapse1 {
overflow-y: auto;
max-height: 500px;
overflow-x: auto;
max-width: 100%;
}
&lt;/style>
&lt;div class="code-collapse1">
&lt;div class="highlight">&lt;div style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">
&lt;table style="border-spacing:0;padding:0;margin:0;border:0;">&lt;tr>&lt;td style="vertical-align:top;padding:0;margin:0;border:0;">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>antlr4 -package com.chnherb.csv -no-listener -visitor .&lt;span style="color:#c41a16">\S&lt;/span>qlBase.g4
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;h3 id="语法树节点">语法树节点&lt;/h3>
&lt;p>&lt;img src="../imgs/sql_intro_230310_1.png" alt="sql_intro_230310_1.png">&lt;/p>
&lt;h3 id="解析类">解析类&lt;/h3>
&lt;p>基于visitor模式实现解析类AstBuilder，以visitQuerySpecification为例：&lt;/p>
&lt;style>
.highlight {
overflow-y: auto;
max-height: 500px;
overflow-x: auto;
max-width: 130%;
}
.td-content .highlight {
margin-top: 0.5rem;
margin-bottom: 0.5rem;
}
&lt;/style>
&lt;details class="code-collapse">
&lt;summary>Expand/Collapse Code Block&lt;/summary>
&lt;div class="highlight">&lt;div style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">
&lt;table style="border-spacing:0;padding:0;margin:0;border:0;">&lt;tr>&lt;td style="vertical-align:top;padding:0;margin:0;border:0;">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 1
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 2
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 3
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 4
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 5
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 6
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 7
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 8
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 9
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">10
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">11
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">12
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">13
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">14
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">15
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">16
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">17
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">18
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">19
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">20
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000">@Override&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a90d91">public&lt;/span> &lt;span style="color:#000">Node&lt;/span> &lt;span style="color:#000">visitQuerySpecification&lt;/span>&lt;span style="color:#000">(&lt;/span>&lt;span style="color:#000">SqlBaseParser&lt;/span>&lt;span style="color:#000">.&lt;/span>&lt;span style="color:#836c28">QuerySpecificationContext&lt;/span> &lt;span style="color:#000">context&lt;/span>&lt;span style="color:#000">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">Optional&lt;/span>&lt;span style="color:#000">&amp;lt;&lt;/span>&lt;span style="color:#000">Relation&lt;/span>&lt;span style="color:#000">&amp;gt;&lt;/span> &lt;span style="color:#000">from&lt;/span> &lt;span style="color:#000">=&lt;/span> &lt;span style="color:#000">Optional&lt;/span>&lt;span style="color:#000">.&lt;/span>&lt;span style="color:#836c28">empty&lt;/span>&lt;span style="color:#000">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">List&lt;/span>&lt;span style="color:#000">&amp;lt;&lt;/span>&lt;span style="color:#000">SelectItem&lt;/span>&lt;span style="color:#000">&amp;gt;&lt;/span> &lt;span style="color:#000">selectItems&lt;/span> &lt;span style="color:#000">=&lt;/span> &lt;span style="color:#000">visit&lt;/span>&lt;span style="color:#000">(&lt;/span>&lt;span style="color:#000">context&lt;/span>&lt;span style="color:#000">.&lt;/span>&lt;span style="color:#836c28">selectItem&lt;/span>&lt;span style="color:#000">(),&lt;/span> &lt;span style="color:#000">SelectItem&lt;/span>&lt;span style="color:#000">.&lt;/span>&lt;span style="color:#836c28">class&lt;/span>&lt;span style="color:#000">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">List&lt;/span>&lt;span style="color:#000">&amp;lt;&lt;/span>&lt;span style="color:#000">Relation&lt;/span>&lt;span style="color:#000">&amp;gt;&lt;/span> &lt;span style="color:#000">relations&lt;/span> &lt;span style="color:#000">=&lt;/span> &lt;span style="color:#000">visit&lt;/span>&lt;span style="color:#000">(&lt;/span>&lt;span style="color:#000">context&lt;/span>&lt;span style="color:#000">.&lt;/span>&lt;span style="color:#836c28">relation&lt;/span>&lt;span style="color:#000">(),&lt;/span> &lt;span style="color:#000">Relation&lt;/span>&lt;span style="color:#000">.&lt;/span>&lt;span style="color:#836c28">class&lt;/span>&lt;span style="color:#000">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a90d91">if&lt;/span> &lt;span style="color:#000">(!&lt;/span>&lt;span style="color:#000">relations&lt;/span>&lt;span style="color:#000">.&lt;/span>&lt;span style="color:#836c28">isEmpty&lt;/span>&lt;span style="color:#000">())&lt;/span> &lt;span style="color:#000">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#177500">// synthesize implicit join nodes
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#177500">&lt;/span> &lt;span style="color:#000">Iterator&lt;/span>&lt;span style="color:#000">&amp;lt;&lt;/span>&lt;span style="color:#000">Relation&lt;/span>&lt;span style="color:#000">&amp;gt;&lt;/span> &lt;span style="color:#000">iterator&lt;/span> &lt;span style="color:#000">=&lt;/span> &lt;span style="color:#000">relations&lt;/span>&lt;span style="color:#000">.&lt;/span>&lt;span style="color:#836c28">iterator&lt;/span>&lt;span style="color:#000">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">Relation&lt;/span> &lt;span style="color:#000">relation&lt;/span> &lt;span style="color:#000">=&lt;/span> &lt;span style="color:#000">iterator&lt;/span>&lt;span style="color:#000">.&lt;/span>&lt;span style="color:#836c28">next&lt;/span>&lt;span style="color:#000">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">from&lt;/span> &lt;span style="color:#000">=&lt;/span> &lt;span style="color:#000">Optional&lt;/span>&lt;span style="color:#000">.&lt;/span>&lt;span style="color:#836c28">of&lt;/span>&lt;span style="color:#000">(&lt;/span>&lt;span style="color:#000">relation&lt;/span>&lt;span style="color:#000">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a90d91">return&lt;/span> &lt;span style="color:#a90d91">new&lt;/span> &lt;span style="color:#000">QuerySpecification&lt;/span>&lt;span style="color:#000">(&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">getLocation&lt;/span>&lt;span style="color:#000">(&lt;/span>&lt;span style="color:#000">context&lt;/span>&lt;span style="color:#000">),&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a90d91">new&lt;/span> &lt;span style="color:#000">Select&lt;/span>&lt;span style="color:#000">(&lt;/span>&lt;span style="color:#000">getLocation&lt;/span>&lt;span style="color:#000">(&lt;/span>&lt;span style="color:#000">context&lt;/span>&lt;span style="color:#000">.&lt;/span>&lt;span style="color:#836c28">SELECT&lt;/span>&lt;span style="color:#000">()),&lt;/span> &lt;span style="color:#a90d91">false&lt;/span>&lt;span style="color:#000">,&lt;/span> &lt;span style="color:#000">selectItems&lt;/span>&lt;span style="color:#000">),&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">from&lt;/span>&lt;span style="color:#000">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;/details>
&lt;br/>
&lt;p>解析出查询的数据源和具体字段，封装到QuerySpecification对象中。&lt;/p>
&lt;h3 id="statement查询数据">Statement查询数据&lt;/h3>
&lt;p>将用户输入的语句解析成ParseTree，对其遍历生成Statement对象。核心代码如下：&lt;/p>
&lt;style>
.td-content .highlight {
margin-top: 0.5rem;
margin-bottom: 0.5rem;
}
.code-collapse1 {
overflow-y: auto;
max-height: 500px;
overflow-x: auto;
max-width: 100%;
}
&lt;/style>
&lt;div class="code-collapse1">
&lt;div class="highlight">&lt;div style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">
&lt;table style="border-spacing:0;padding:0;margin:0;border:0;">&lt;tr>&lt;td style="vertical-align:top;padding:0;margin:0;border:0;">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">1
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000">SqlParser&lt;/span> &lt;span style="color:#000">sqlParser&lt;/span> &lt;span style="color:#000">=&lt;/span> &lt;span style="color:#a90d91">new&lt;/span> &lt;span style="color:#000">SqlParser&lt;/span>&lt;span style="color:#000">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000">Statement&lt;/span> &lt;span style="color:#000">statement&lt;/span> &lt;span style="color:#000">=&lt;/span> &lt;span style="color:#000">sqlParser&lt;/span>&lt;span style="color:#000">.&lt;/span>&lt;span style="color:#836c28">createStatement&lt;/span>&lt;span style="color:#000">(&lt;/span>&lt;span style="color:#000">sql&lt;/span>&lt;span style="color:#000">);&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;p>Statement对象使用：&lt;/p>
&lt;ul>
&lt;li>Query类型的Statement有QueryBody属性。&lt;/li>
&lt;li>QuerySpecification类型的QueryBody有select属性和from属性。
&lt;ul>
&lt;li>从from属性中获取待查询的目标表Table。这里约定表名和csv文件名一致。&lt;/li>
&lt;li>从select属性中获取待查询的目标字段SelectItem。这里约定csv首行为title行。
流程如下：&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;ol>
&lt;li>获取查询的数据表以及字段。&lt;/li>
&lt;li>通过数据表名称定为到数据文件，并读取数据文件数据。&lt;/li>
&lt;li>格式化输出字段名称到命令行。&lt;/li>
&lt;li>格式化输出字段内容到命令行。&lt;/li>
&lt;/ol>
&lt;h3 id="编写代码">编写代码&lt;/h3>
&lt;style>
.highlight {
overflow-y: auto;
max-height: 500px;
overflow-x: auto;
max-width: 130%;
}
.td-content .highlight {
margin-top: 0.5rem;
margin-bottom: 0.5rem;
}
&lt;/style>
&lt;details class="code-collapse">
&lt;summary>Expand/Collapse Code Block&lt;/summary>
&lt;div class="highlight">&lt;div style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">
&lt;table style="border-spacing:0;padding:0;margin:0;border:0;">&lt;tr>&lt;td style="vertical-align:top;padding:0;margin:0;border:0;">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 1
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 2
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 3
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 4
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 5
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 6
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 7
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 8
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 9
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">10
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">11
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">12
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">13
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">14
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">15
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">16
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">17
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">18
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">19
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">20
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">21
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">22
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">23
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">24
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">25
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">26
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">27
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">28
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">29
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">30
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">31
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">32
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">33
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">34
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">35
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">36
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">37
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">38
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">39
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">40
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">41
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#177500">/**
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#177500"> * 获取待查询的表名和字段名称
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#177500"> */&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000">QuerySpecification&lt;/span> &lt;span style="color:#000">specification&lt;/span> &lt;span style="color:#000">=&lt;/span> &lt;span style="color:#000">(&lt;/span>&lt;span style="color:#000">QuerySpecification&lt;/span>&lt;span style="color:#000">)&lt;/span> &lt;span style="color:#000">query&lt;/span>&lt;span style="color:#000">.&lt;/span>&lt;span style="color:#836c28">getQueryBody&lt;/span>&lt;span style="color:#000">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000">Table&lt;/span> &lt;span style="color:#000">table&lt;/span>&lt;span style="color:#000">=&lt;/span> &lt;span style="color:#000">(&lt;/span>&lt;span style="color:#000">Table&lt;/span>&lt;span style="color:#000">)&lt;/span> &lt;span style="color:#000">specification&lt;/span>&lt;span style="color:#000">.&lt;/span>&lt;span style="color:#836c28">getFrom&lt;/span>&lt;span style="color:#000">().&lt;/span>&lt;span style="color:#836c28">get&lt;/span>&lt;span style="color:#000">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000">List&lt;/span>&lt;span style="color:#000">&amp;lt;&lt;/span>&lt;span style="color:#000">SelectItem&lt;/span>&lt;span style="color:#000">&amp;gt;&lt;/span> &lt;span style="color:#000">selectItems&lt;/span> &lt;span style="color:#000">=&lt;/span> &lt;span style="color:#000">specification&lt;/span>&lt;span style="color:#000">.&lt;/span>&lt;span style="color:#836c28">getSelect&lt;/span>&lt;span style="color:#000">().&lt;/span>&lt;span style="color:#836c28">getSelectItems&lt;/span>&lt;span style="color:#000">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000">List&lt;/span>&lt;span style="color:#000">&amp;lt;&lt;/span>&lt;span style="color:#000">String&lt;/span>&lt;span style="color:#000">&amp;gt;&lt;/span> &lt;span style="color:#000">fieldNames&lt;/span> &lt;span style="color:#000">=&lt;/span> &lt;span style="color:#000">Lists&lt;/span>&lt;span style="color:#000">.&lt;/span>&lt;span style="color:#836c28">newArrayList&lt;/span>&lt;span style="color:#000">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a90d91">for&lt;/span>&lt;span style="color:#000">(&lt;/span>&lt;span style="color:#000">SelectItem&lt;/span> &lt;span style="color:#000">item&lt;/span>&lt;span style="color:#000">:&lt;/span>&lt;span style="color:#000">selectItems&lt;/span>&lt;span style="color:#000">){&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">SingleColumn&lt;/span> &lt;span style="color:#000">column&lt;/span> &lt;span style="color:#000">=&lt;/span> &lt;span style="color:#000">(&lt;/span>&lt;span style="color:#000">SingleColumn&lt;/span>&lt;span style="color:#000">)&lt;/span> &lt;span style="color:#000">item&lt;/span>&lt;span style="color:#000">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">fieldNames&lt;/span>&lt;span style="color:#000">.&lt;/span>&lt;span style="color:#836c28">add&lt;/span>&lt;span style="color:#000">(((&lt;/span>&lt;span style="color:#000">Identifier&lt;/span>&lt;span style="color:#000">)&lt;/span>&lt;span style="color:#000">column&lt;/span>&lt;span style="color:#000">.&lt;/span>&lt;span style="color:#836c28">getExpression&lt;/span>&lt;span style="color:#000">()).&lt;/span>&lt;span style="color:#836c28">getValue&lt;/span>&lt;span style="color:#000">());&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#177500">/**
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#177500"> * 基于表名确定查询的数据源文件
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#177500"> */&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000">String&lt;/span> &lt;span style="color:#000">fileLoc&lt;/span> &lt;span style="color:#000">=&lt;/span> &lt;span style="color:#000">String&lt;/span>&lt;span style="color:#000">.&lt;/span>&lt;span style="color:#836c28">format&lt;/span>&lt;span style="color:#000">(&lt;/span>&lt;span style="color:#c41a16">&amp;#34;./data/%s.csv&amp;#34;&lt;/span>&lt;span style="color:#000">,&lt;/span>&lt;span style="color:#000">table&lt;/span>&lt;span style="color:#000">.&lt;/span>&lt;span style="color:#836c28">getName&lt;/span>&lt;span style="color:#000">());&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#177500">/**
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#177500"> * 从csv文件中读取指定的字段
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#177500"> */&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000">Reader&lt;/span> &lt;span style="color:#000">in&lt;/span> &lt;span style="color:#000">=&lt;/span> &lt;span style="color:#a90d91">new&lt;/span> &lt;span style="color:#000">FileReader&lt;/span>&lt;span style="color:#000">(&lt;/span>&lt;span style="color:#000">fileLoc&lt;/span>&lt;span style="color:#000">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000">Iterable&lt;/span>&lt;span style="color:#000">&amp;lt;&lt;/span>&lt;span style="color:#000">CSVRecord&lt;/span>&lt;span style="color:#000">&amp;gt;&lt;/span> &lt;span style="color:#000">records&lt;/span> &lt;span style="color:#000">=&lt;/span> &lt;span style="color:#000">CSVFormat&lt;/span>&lt;span style="color:#000">.&lt;/span>&lt;span style="color:#836c28">RFC4180&lt;/span>&lt;span style="color:#000">.&lt;/span>&lt;span style="color:#836c28">withFirstRecordAsHeader&lt;/span>&lt;span style="color:#000">().&lt;/span>&lt;span style="color:#836c28">parse&lt;/span>&lt;span style="color:#000">(&lt;/span>&lt;span style="color:#000">in&lt;/span>&lt;span style="color:#000">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000">List&lt;/span>&lt;span style="color:#000">&amp;lt;&lt;/span>&lt;span style="color:#000">Row&lt;/span>&lt;span style="color:#000">&amp;gt;&lt;/span> &lt;span style="color:#000">rowList&lt;/span> &lt;span style="color:#000">=&lt;/span> &lt;span style="color:#000">Lists&lt;/span>&lt;span style="color:#000">.&lt;/span>&lt;span style="color:#836c28">newArrayList&lt;/span>&lt;span style="color:#000">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a90d91">for&lt;/span>&lt;span style="color:#000">(&lt;/span>&lt;span style="color:#000">CSVRecord&lt;/span> &lt;span style="color:#000">record&lt;/span>&lt;span style="color:#000">:&lt;/span>&lt;span style="color:#000">records&lt;/span>&lt;span style="color:#000">){&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">Row&lt;/span> &lt;span style="color:#000">row&lt;/span> &lt;span style="color:#000">=&lt;/span> &lt;span style="color:#a90d91">new&lt;/span> &lt;span style="color:#000">Row&lt;/span>&lt;span style="color:#000">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a90d91">for&lt;/span>&lt;span style="color:#000">(&lt;/span>&lt;span style="color:#000">String&lt;/span> &lt;span style="color:#000">field&lt;/span>&lt;span style="color:#000">:&lt;/span>&lt;span style="color:#000">fieldNames&lt;/span>&lt;span style="color:#000">){&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">row&lt;/span>&lt;span style="color:#000">.&lt;/span>&lt;span style="color:#836c28">addColumn&lt;/span>&lt;span style="color:#000">(&lt;/span>&lt;span style="color:#000">record&lt;/span>&lt;span style="color:#000">.&lt;/span>&lt;span style="color:#836c28">get&lt;/span>&lt;span style="color:#000">(&lt;/span>&lt;span style="color:#000">field&lt;/span>&lt;span style="color:#000">));&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">rowList&lt;/span>&lt;span style="color:#000">.&lt;/span>&lt;span style="color:#836c28">add&lt;/span>&lt;span style="color:#000">(&lt;/span>&lt;span style="color:#000">row&lt;/span>&lt;span style="color:#000">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#177500">/**
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#177500"> * 格式化输出到控制台
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#177500"> */&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a90d91">int&lt;/span> &lt;span style="color:#000">width&lt;/span>&lt;span style="color:#000">=&lt;/span>&lt;span style="color:#000">30&lt;/span>&lt;span style="color:#000">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000">String&lt;/span> &lt;span style="color:#000">format&lt;/span> &lt;span style="color:#000">=&lt;/span> &lt;span style="color:#000">fieldNames&lt;/span>&lt;span style="color:#000">.&lt;/span>&lt;span style="color:#836c28">stream&lt;/span>&lt;span style="color:#000">().&lt;/span>&lt;span style="color:#836c28">map&lt;/span>&lt;span style="color:#000">(&lt;/span>&lt;span style="color:#000">s&lt;/span>&lt;span style="color:#000">-&amp;gt;&lt;/span> &lt;span style="color:#c41a16">&amp;#34;%-&amp;#34;&lt;/span>&lt;span style="color:#000">+&lt;/span>&lt;span style="color:#000">width&lt;/span>&lt;span style="color:#000">+&lt;/span>&lt;span style="color:#c41a16">&amp;#34;s&amp;#34;&lt;/span>&lt;span style="color:#000">).&lt;/span>&lt;span style="color:#836c28">collect&lt;/span>&lt;span style="color:#000">(&lt;/span>&lt;span style="color:#000">Collectors&lt;/span>&lt;span style="color:#000">.&lt;/span>&lt;span style="color:#836c28">joining&lt;/span>&lt;span style="color:#000">(&lt;/span>&lt;span style="color:#c41a16">&amp;#34;|&amp;#34;&lt;/span>&lt;span style="color:#000">));&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000">System&lt;/span>&lt;span style="color:#000">.&lt;/span>&lt;span style="color:#836c28">out&lt;/span>&lt;span style="color:#000">.&lt;/span>&lt;span style="color:#836c28">println&lt;/span>&lt;span style="color:#000">(&lt;/span> &lt;span style="color:#c41a16">&amp;#34;|&amp;#34;&lt;/span>&lt;span style="color:#000">+&lt;/span>&lt;span style="color:#000">String&lt;/span>&lt;span style="color:#000">.&lt;/span>&lt;span style="color:#836c28">format&lt;/span>&lt;span style="color:#000">(&lt;/span>&lt;span style="color:#000">format&lt;/span>&lt;span style="color:#000">,&lt;/span> &lt;span style="color:#000">fieldNames&lt;/span>&lt;span style="color:#000">.&lt;/span>&lt;span style="color:#836c28">toArray&lt;/span>&lt;span style="color:#000">())+&lt;/span>&lt;span style="color:#c41a16">&amp;#34;|&amp;#34;&lt;/span>&lt;span style="color:#000">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a90d91">int&lt;/span> &lt;span style="color:#000">flagCnt&lt;/span> &lt;span style="color:#000">=&lt;/span> &lt;span style="color:#000">width&lt;/span>&lt;span style="color:#000">*&lt;/span>&lt;span style="color:#000">fieldNames&lt;/span>&lt;span style="color:#000">.&lt;/span>&lt;span style="color:#836c28">size&lt;/span>&lt;span style="color:#000">()+&lt;/span>&lt;span style="color:#000">fieldNames&lt;/span>&lt;span style="color:#000">.&lt;/span>&lt;span style="color:#836c28">size&lt;/span>&lt;span style="color:#000">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000">String&lt;/span> &lt;span style="color:#000">rowDelimiter&lt;/span> &lt;span style="color:#000">=&lt;/span> &lt;span style="color:#000">String&lt;/span>&lt;span style="color:#000">.&lt;/span>&lt;span style="color:#836c28">join&lt;/span>&lt;span style="color:#000">(&lt;/span>&lt;span style="color:#c41a16">&amp;#34;&amp;#34;&lt;/span>&lt;span style="color:#000">,&lt;/span> &lt;span style="color:#000">Collections&lt;/span>&lt;span style="color:#000">.&lt;/span>&lt;span style="color:#836c28">nCopies&lt;/span>&lt;span style="color:#000">(&lt;/span>&lt;span style="color:#000">flagCnt&lt;/span>&lt;span style="color:#000">,&lt;/span> &lt;span style="color:#c41a16">&amp;#34;-&amp;#34;&lt;/span>&lt;span style="color:#000">));&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000">System&lt;/span>&lt;span style="color:#000">.&lt;/span>&lt;span style="color:#836c28">out&lt;/span>&lt;span style="color:#000">.&lt;/span>&lt;span style="color:#836c28">println&lt;/span>&lt;span style="color:#000">(&lt;/span>&lt;span style="color:#000">rowDelimiter&lt;/span>&lt;span style="color:#000">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a90d91">for&lt;/span>&lt;span style="color:#000">(&lt;/span>&lt;span style="color:#000">Row&lt;/span> &lt;span style="color:#000">row&lt;/span>&lt;span style="color:#000">:&lt;/span>&lt;span style="color:#000">rowList&lt;/span>&lt;span style="color:#000">){&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">System&lt;/span>&lt;span style="color:#000">.&lt;/span>&lt;span style="color:#836c28">out&lt;/span>&lt;span style="color:#000">.&lt;/span>&lt;span style="color:#836c28">println&lt;/span>&lt;span style="color:#000">(&lt;/span> &lt;span style="color:#c41a16">&amp;#34;|&amp;#34;&lt;/span>&lt;span style="color:#000">+&lt;/span>&lt;span style="color:#000">String&lt;/span>&lt;span style="color:#000">.&lt;/span>&lt;span style="color:#836c28">format&lt;/span>&lt;span style="color:#000">(&lt;/span>&lt;span style="color:#000">format&lt;/span>&lt;span style="color:#000">,&lt;/span> &lt;span style="color:#000">row&lt;/span>&lt;span style="color:#000">.&lt;/span>&lt;span style="color:#836c28">getColumnList&lt;/span>&lt;span style="color:#000">().&lt;/span>&lt;span style="color:#836c28">toArray&lt;/span>&lt;span style="color:#000">())+&lt;/span>&lt;span style="color:#c41a16">&amp;#34;|&amp;#34;&lt;/span>&lt;span style="color:#000">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;/details>
&lt;br/>
&lt;h1 id="calcite">Calcite&lt;/h1>
&lt;h2 id="简介">简介&lt;/h2>
&lt;p>与ANTLR不同，Apache Calcite大大简化了SQL的解析流程，不需要定义接口、生成代码。&lt;/p>
&lt;p>数据库包含的常用功能：&lt;/p>
&lt;ul>
&lt;li>query language&lt;/li>
&lt;li>query optimization&lt;/li>
&lt;li>query execution&lt;/li>
&lt;li>data management&lt;/li>
&lt;li>data storage
Calcite 设计之初主要关注前三者，将后面两个数据管理和数据存储交给计算/存储引擎。专注于上层通用的模块，控制系统的复杂性。&lt;/li>
&lt;/ul>
&lt;p>同时，Calcite也复用了一些组件，如使用 JavaCC 来将SQL语句转为Java代码，进而转化成AST。另外为了支持灵活的元数据功能，Calcite需要支持运行时编译Java代码，但默认的JavaC太重，使用了轻量开源的 Janino。&lt;/p>
&lt;p>常用的大数据组件都有集成 Calcite，Hive就是自己做了SQL解析，只使用了Calcite的查询优化功能。而像Flink从解析到优化都直接使用了Calcite。&lt;/p>
&lt;h2 id="主要模块">主要模块&lt;/h2>
&lt;ul>
&lt;li>JDBC Client：支持 JDBC Client 的应用&lt;/li>
&lt;li>SQL Parser and Validator：用来SQL解析和校验&lt;/li>
&lt;li>Expressions Builder：支持SQL解析和校验的框架对接&lt;/li>
&lt;li>Operator Expressions：处理关系表达式&lt;/li>
&lt;li>Metadata Provider：支持外部自定义元数据&lt;/li>
&lt;li>Pluggable Rules：定义优化规则&lt;/li>
&lt;li>Query Optimizer：（核心模块）专注于查询优化&lt;/li>
&lt;/ul>
&lt;h2 id="解析sql">解析SQL&lt;/h2>
&lt;h3 id="pom依赖">pom依赖&lt;/h3>
&lt;style>
.td-content .highlight {
margin-top: 0.5rem;
margin-bottom: 0.5rem;
}
.code-collapse1 {
overflow-y: auto;
max-height: 500px;
overflow-x: auto;
max-width: 100%;
}
&lt;/style>
&lt;div class="code-collapse1">
&lt;div class="highlight">&lt;div style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">
&lt;table style="border-spacing:0;padding:0;margin:0;border:0;">&lt;tr>&lt;td style="vertical-align:top;padding:0;margin:0;border:0;">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">1
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">2
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">3
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">4
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">5
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">6
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">7
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-xml" data-lang="xml">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000">&amp;lt;dependencies&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">&amp;lt;dependency&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">&amp;lt;groupId&amp;gt;&lt;/span>org.smartloli&lt;span style="color:#000">&amp;lt;/groupId&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">&amp;lt;artifactId&amp;gt;&lt;/span>jsql-client&lt;span style="color:#000">&amp;lt;/artifactId&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">&amp;lt;version&amp;gt;&lt;/span>1.0.0&lt;span style="color:#000">&amp;lt;/version&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">&amp;lt;/dependency&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000">&amp;lt;/dependencies&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;h3 id="实现代码">实现代码&lt;/h3>
&lt;style>
.highlight {
overflow-y: auto;
max-height: 500px;
overflow-x: auto;
max-width: 130%;
}
.td-content .highlight {
margin-top: 0.5rem;
margin-bottom: 0.5rem;
}
&lt;/style>
&lt;details class="code-collapse">
&lt;summary>Expand/Collapse Code Block&lt;/summary>
&lt;div class="highlight">&lt;div style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">
&lt;table style="border-spacing:0;padding:0;margin:0;border:0;">&lt;tr>&lt;td style="vertical-align:top;padding:0;margin:0;border:0;">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 1
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 2
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 3
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 4
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 5
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 6
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 7
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 8
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 9
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">10
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">11
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">12
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">13
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">14
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">15
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">16
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">17
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">18
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">19
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">20
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">21
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">22
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">23
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">24
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a90d91">package&lt;/span> &lt;span style="color:#000">com.chnherb.sql&lt;/span>&lt;span style="color:#000">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a90d91">import&lt;/span> &lt;span style="color:#000">com.alibaba.fastjson.JSON&lt;/span>&lt;span style="color:#000">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a90d91">import&lt;/span> &lt;span style="color:#000">com.alibaba.fastjson.JSONArray&lt;/span>&lt;span style="color:#000">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a90d91">import&lt;/span> &lt;span style="color:#000">com.alibaba.fastjson.JSONObject&lt;/span>&lt;span style="color:#000">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a90d91">import&lt;/span> &lt;span style="color:#000">org.smartloli.util.JSqlUtils&lt;/span>&lt;span style="color:#000">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a90d91">public&lt;/span> &lt;span style="color:#a90d91">class&lt;/span> &lt;span style="color:#3f6e75">JSqlClient&lt;/span> &lt;span style="color:#000">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a90d91">public&lt;/span> &lt;span style="color:#a90d91">static&lt;/span> &lt;span style="color:#a90d91">void&lt;/span> &lt;span style="color:#000">main&lt;/span>&lt;span style="color:#000">(&lt;/span>&lt;span style="color:#000">String&lt;/span>&lt;span style="color:#000">[]&lt;/span> &lt;span style="color:#000">args&lt;/span>&lt;span style="color:#000">)&lt;/span> &lt;span style="color:#000">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">JSONObject&lt;/span> &lt;span style="color:#000">tabSchema&lt;/span> &lt;span style="color:#000">=&lt;/span> &lt;span style="color:#a90d91">new&lt;/span> &lt;span style="color:#000">JSONObject&lt;/span>&lt;span style="color:#000">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">tabSchema&lt;/span>&lt;span style="color:#000">.&lt;/span>&lt;span style="color:#836c28">put&lt;/span>&lt;span style="color:#000">(&lt;/span>&lt;span style="color:#c41a16">&amp;#34;id&amp;#34;&lt;/span>&lt;span style="color:#000">,&lt;/span>&lt;span style="color:#c41a16">&amp;#34;integer&amp;#34;&lt;/span>&lt;span style="color:#000">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">tabSchema&lt;/span>&lt;span style="color:#000">.&lt;/span>&lt;span style="color:#836c28">put&lt;/span>&lt;span style="color:#000">(&lt;/span>&lt;span style="color:#c41a16">&amp;#34;name&amp;#34;&lt;/span>&lt;span style="color:#000">,&lt;/span>&lt;span style="color:#c41a16">&amp;#34;varchar&amp;#34;&lt;/span>&lt;span style="color:#000">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">JSONArray&lt;/span> &lt;span style="color:#000">datasets&lt;/span> &lt;span style="color:#000">=&lt;/span> &lt;span style="color:#000">JSON&lt;/span>&lt;span style="color:#000">.&lt;/span>&lt;span style="color:#836c28">parseArray&lt;/span>&lt;span style="color:#000">(&lt;/span>&lt;span style="color:#c41a16">&amp;#34;[{\&amp;#34;id\&amp;#34;:1,\&amp;#34;name\&amp;#34;:\&amp;#34;aaa\&amp;#34;,\&amp;#34;age\&amp;#34;:20},{\&amp;#34;id\&amp;#34;:2,\&amp;#34;name\&amp;#34;:\&amp;#34;bbb\&amp;#34;,\&amp;#34;age\&amp;#34;:21},{\&amp;#34;id\&amp;#34;:3,\&amp;#34;name\&amp;#34;:\&amp;#34;ccc\&amp;#34;,\&amp;#34;age\&amp;#34;:22}]&amp;#34;&lt;/span>&lt;span style="color:#000">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">String&lt;/span> &lt;span style="color:#000">tabName&lt;/span> &lt;span style="color:#000">=&lt;/span> &lt;span style="color:#c41a16">&amp;#34;userinfo&amp;#34;&lt;/span>&lt;span style="color:#000">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">String&lt;/span> &lt;span style="color:#000">sql&lt;/span> &lt;span style="color:#000">=&lt;/span> &lt;span style="color:#c41a16">&amp;#34;select count(*) as cnt from \&amp;#34;userinfo\&amp;#34;&amp;#34;&lt;/span>&lt;span style="color:#000">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a90d91">try&lt;/span>&lt;span style="color:#000">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">String&lt;/span> &lt;span style="color:#000">result&lt;/span> &lt;span style="color:#000">=&lt;/span> &lt;span style="color:#000">JSqlUtils&lt;/span>&lt;span style="color:#000">.&lt;/span>&lt;span style="color:#836c28">query&lt;/span>&lt;span style="color:#000">(&lt;/span>&lt;span style="color:#000">tabSchema&lt;/span>&lt;span style="color:#000">,&lt;/span>&lt;span style="color:#000">tabName&lt;/span>&lt;span style="color:#000">,&lt;/span>&lt;span style="color:#000">datasets&lt;/span>&lt;span style="color:#000">,&lt;/span>&lt;span style="color:#000">sql&lt;/span>&lt;span style="color:#000">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">System&lt;/span>&lt;span style="color:#000">.&lt;/span>&lt;span style="color:#836c28">out&lt;/span>&lt;span style="color:#000">.&lt;/span>&lt;span style="color:#836c28">println&lt;/span>&lt;span style="color:#000">(&lt;/span>&lt;span style="color:#c41a16">&amp;#34;result: &amp;#34;&lt;/span>&lt;span style="color:#000">+&lt;/span>&lt;span style="color:#000">result&lt;/span>&lt;span style="color:#000">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">}&lt;/span>&lt;span style="color:#a90d91">catch&lt;/span> &lt;span style="color:#000">(&lt;/span>&lt;span style="color:#000">Exception&lt;/span> &lt;span style="color:#000">e&lt;/span>&lt;span style="color:#000">){&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">e&lt;/span>&lt;span style="color:#000">.&lt;/span>&lt;span style="color:#836c28">printStackTrace&lt;/span>&lt;span style="color:#000">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;/details>
&lt;br/>
&lt;h1 id="reference">Reference&lt;/h1>
&lt;p>&lt;a href="https://github.com/antlr/antlr4">https://github.com/antlr/antlr4&lt;/a>&lt;/p>
&lt;p>&lt;a href="https://github.com/antlr/grammars-v4">https://github.com/antlr/grammars-v4&lt;/a>&lt;/p>
&lt;p>&lt;a href="https://github.com/apache/calcite">https://github.com/apache/calcite&lt;/a>&lt;/p>
&lt;p>&lt;a href="https://github.com/smartloli/EFAK">https://github.com/smartloli/EFAK&lt;/a>&lt;/p>
&lt;p>&lt;a href="https://prestodb.io/docs/current/">https://prestodb.io/docs/current/&lt;/a>&lt;/p>
&lt;p>&lt;a href="https://github.com/prestodb/presto">https://github.com/prestodb/presto&lt;/a>&lt;/p>
&lt;p>&lt;a href="https://mp.weixin.qq.com/s/oYsCmTg4OVlIuB9a8Eu1Vw">探究Presto SQL引擎(1)-巧用Antlr&lt;/a>&lt;/p>
&lt;p>&lt;a href="https://mp.weixin.qq.com/s/2FH4WuO1FMbxqiv4RUvdrA">如何实现一个SQL解析器&lt;/a>&lt;/p></description></item><item><title>Docs: 02.Join操作</title><link>/docs/30.%E6%95%B0%E6%8D%AE%E5%BA%93/SQL%E5%BC%95%E6%93%8E/02.Join%E6%93%8D%E4%BD%9C/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/docs/30.%E6%95%B0%E6%8D%AE%E5%BA%93/SQL%E5%BC%95%E6%93%8E/02.Join%E6%93%8D%E4%BD%9C/</guid><description>
&lt;h1 id="背景">背景&lt;/h1>
&lt;p>业务开发使用数据库时，通常规定不允许使用过多的表Join，如阿里巴巴开发手册中：&lt;/p>
&lt;blockquote>
&lt;p>【强制】超过三个表禁止Join。需要Join的字段，数据类型必须绝对一致；多表关联查询时，保证被关联的字段需要有索引。说明：即使双表Join也要注意表索引、SQL性能。&lt;/p>
&lt;/blockquote>
&lt;p>大数据数仓中，既有星型结构和雪花结构，但最终交付业务使用的大多是宽表。&lt;/p>
&lt;h1 id="join基本原理">Join基本原理&lt;/h1>
&lt;h2 id="join分类">Join分类&lt;/h2>
&lt;p>Join分为如下几类：&lt;/p>
&lt;ul>
&lt;li>Cross Join&lt;/li>
&lt;li>Inner Join&lt;/li>
&lt;li>Outer Join
&lt;ul>
&lt;li>full join&lt;/li>
&lt;li>left join&lt;/li>
&lt;li>right join&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h3 id="cross-join">Cross Join&lt;/h3>
&lt;p>交叉连接，返回连接的两个表所有数据行的&lt;strong>笛卡尔积&lt;/strong>，一般不加条件限制。使用：&lt;/p>
&lt;style>
.td-content .highlight {
margin-top: 0.5rem;
margin-bottom: 0.5rem;
}
.code-collapse1 {
overflow-y: auto;
max-height: 500px;
overflow-x: auto;
max-width: 100%;
}
&lt;/style>
&lt;div class="code-collapse1">
&lt;div class="highlight">&lt;div style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">
&lt;table style="border-spacing:0;padding:0;margin:0;border:0;">&lt;tr>&lt;td style="vertical-align:top;padding:0;margin:0;border:0;">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">1
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-sql" data-lang="sql">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a90d91">SELECT&lt;/span>  &lt;span style="color:#000">*&lt;/span>  &lt;span style="color:#a90d91">FROM&lt;/span>  &lt;span style="color:#000">tableA&lt;/span>, &lt;span style="color:#000">tableB&lt;/span> &lt;span style="color:#000">#&lt;/span> &lt;span style="color:#000">等价&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a90d91">SELECT&lt;/span>  &lt;span style="color:#000">*&lt;/span>  &lt;span style="color:#a90d91">FROM&lt;/span>  &lt;span style="color:#000">tableA&lt;/span> &lt;span style="color:#a90d91">CROSS&lt;/span> &lt;span style="color:#a90d91">JOIN&lt;/span> &lt;span style="color:#000">tableB&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;h3 id="inner-join">Inner Join&lt;/h3>
&lt;p>Inner join 获取两张表的交集，是内联查询，不是产生笛卡尔集，结合ON子句使用，直接基于join condition做连接，生成的join集合就是最终的输出结果，产生的中间数据更小。&lt;/p>
&lt;h3 id="outer-join">Outer Join&lt;/h3>
&lt;p>Outer join 获取两张表的并集，是内联查询。&lt;/p>
&lt;ul>
&lt;li>full join：产生A和B的并集&lt;/li>
&lt;li>left join：产生表A的完全集，而B表中匹配的则有值，没有匹配的则以NULL值取代。&lt;/li>
&lt;li>right join：产生表B的完全集，而A表中匹配的则有值，没有匹配的则以NULL值取代。&lt;/li>
&lt;/ul>
&lt;h2 id="关联算法">关联算法&lt;/h2>
&lt;blockquote>
&lt;p>Join关联算法可参考本博客：&lt;a href="https://chnherb.github.io/docs/30.%E5%AD%98%E5%82%A8/%E5%88%86%E5%B8%83%E5%BC%8F%E6%95%B0%E6%8D%AE%E5%BA%93%E7%90%86%E8%AE%BA%E6%A6%82%E8%BF%B0/#%E5%85%B3%E8%81%94%E7%AE%97%E6%B3%95">https://chnherb.github.io/docs/30.%E5%AD%98%E5%82%A8/%E5%88%86%E5%B8%83%E5%BC%8F%E6%95%B0%E6%8D%AE%E5%BA%93%E7%90%86%E8%AE%BA%E6%A6%82%E8%BF%B0/#%E5%85%B3%E8%81%94%E7%AE%97%E6%B3%95&lt;/a>&lt;/p>
&lt;/blockquote>
&lt;p>常见的关联算法有三大类，分别是&lt;/p>
&lt;ul>
&lt;li>嵌套循环（Nested Loop Join）&lt;/li>
&lt;li>排序归并（Sort-Merge Join）&lt;/li>
&lt;li>哈希（Hash Join）&lt;/li>
&lt;/ul>
&lt;h1 id="join工程化理论">Join工程化理论&lt;/h1>
&lt;h2 id="火山模型">火山模型&lt;/h2>
&lt;p>SQL语法支持的操作类型非常丰富：查询表(TableScan)、过滤数据(Filter)、排序(Order)、限制(Limit)、字段进行运算(Project)、 聚合(Group)、关联(Join)等。为了实现上述的能力，需要一个具备并行化能力且可扩展的架构。&lt;/p>
&lt;p>1994年Goetz Graefe在论文《Volcano-An Extensible and Parallel Query Evaluation System》提出了一个架构设计思想，这就是大名鼎鼎的火山模型，也称为迭代模型。火山模型包含了文件系统和查询处理两个部分。&lt;/p>
&lt;p>&lt;img src="../imgs/sql_join_230311_1.png" alt="sql_join_230311_1.png">&lt;/p>
&lt;p>来源于《Balancing vectorized execution with bandwidth-optimized storage》&lt;/p>
&lt;h3 id="职责分离">职责分离&lt;/h3>
&lt;p>将不同操作独立成一个的Operator，Operator采用open-next-close的迭代器模式。如一般的SQL语句对应到Scan、Select、Project三个Operator，数据交互通过next()函数实现。&lt;/p>
&lt;p>Presto中的Operator：&lt;/p>
&lt;ul>
&lt;li>SourceOperator
&lt;ul>
&lt;li>TableScanSourceOperator&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>OrderOperator&lt;/li>
&lt;li>LimitOperator&lt;/li>
&lt;li>TaskOutputOperator&lt;/li>
&lt;/ul>
&lt;h3 id="动态组装">动态组装&lt;/h3>
&lt;p>Operator基于SQL语句的解析实现动态组装，多个Operator形成一个管道(pipeline)。&lt;/p>
&lt;p>Presto在火山模型的基础上，吸收了其它思想做了如下优化：&lt;/p>
&lt;ul>
&lt;li>Operator数据处理优化成一次一个Page，而不是一次行(也称为tuple)。&lt;/li>
&lt;li>Page的存储采用列式结构。即相同的列封装到一个Block中。
&lt;strong>批量处理&lt;/strong>结合&lt;strong>列式存储&lt;/strong>奠定了&lt;strong>向量化计算&lt;/strong>的基础**，&lt;strong>也是&lt;/strong>数据库领域的优化方向**。 &lt;/li>
&lt;/ul>
&lt;h2 id="批量处理和列式存储">批量处理和列式存储&lt;/h2>
&lt;p>Presto源码中，随处可见 Page 和 Block。&lt;/p>
&lt;p>通常 OLAP 场景不需要读取所有字段，于是衍生了列式存储，如下结构：&lt;/p>
&lt;p>&lt;img src="../imgs/sql_join_230311_2.png" alt="sql_join_230311_2.png">&lt;/p>
&lt;p>将数据封装成Page在各个Operator中流转，一方面避免了对象的序列化和反序列化成本，另一方面相比行（tuple）的方式降低了函数调用的开销。类似集装箱运货降低运输成本的思想。&lt;/p>
&lt;p>示例代码：&lt;/p>
&lt;style>
.highlight {
overflow-y: auto;
max-height: 500px;
overflow-x: auto;
max-width: 130%;
}
.td-content .highlight {
margin-top: 0.5rem;
margin-bottom: 0.5rem;
}
&lt;/style>
&lt;details class="code-collapse">
&lt;summary>Expand/Collapse Code Block&lt;/summary>
&lt;div class="highlight">&lt;div style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">
&lt;table style="border-spacing:0;padding:0;margin:0;border:0;">&lt;tr>&lt;td style="vertical-align:top;padding:0;margin:0;border:0;">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 1
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 2
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 3
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 4
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 5
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 6
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 7
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 8
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 9
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">10
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">11
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">12
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">13
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">14
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">15
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">16
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">17
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">18
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">19
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">20
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">21
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">22
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">23
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">24
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">25
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">26
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">27
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">28
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">29
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">30
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">31
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">32
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">33
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">34
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">35
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">36
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">37
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">38
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">39
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">40
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">41
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">42
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">43
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">44
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">45
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">46
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">47
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">48
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">49
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">50
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">51
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">52
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">53
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">54
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">55
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">56
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">57
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">58
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">59
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">60
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">61
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">62
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">63
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">64
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">65
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">66
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">67
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">68
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">69
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">70
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">71
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">72
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">73
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">74
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">75
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">76
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">77
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">78
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">79
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">80
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">81
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">82
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">83
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">84
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">85
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">86
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">87
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">88
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a90d91">import&lt;/span> &lt;span style="color:#000">com.facebook.presto.common.Page&lt;/span>&lt;span style="color:#000">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a90d91">import&lt;/span> &lt;span style="color:#000">com.facebook.presto.common.PageBuilder&lt;/span>&lt;span style="color:#000">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a90d91">import&lt;/span> &lt;span style="color:#000">com.facebook.presto.common.block.Block&lt;/span>&lt;span style="color:#000">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a90d91">import&lt;/span> &lt;span style="color:#000">com.facebook.presto.common.block.BlockBuilder&lt;/span>&lt;span style="color:#000">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a90d91">import&lt;/span> &lt;span style="color:#000">com.facebook.presto.common.type.BigintType&lt;/span>&lt;span style="color:#000">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a90d91">import&lt;/span> &lt;span style="color:#000">com.facebook.presto.common.type.Type&lt;/span>&lt;span style="color:#000">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a90d91">import&lt;/span> &lt;span style="color:#000">com.facebook.presto.common.type.VarcharType&lt;/span>&lt;span style="color:#000">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a90d91">import&lt;/span> &lt;span style="color:#000">com.google.common.collect.Lists&lt;/span>&lt;span style="color:#000">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a90d91">import&lt;/span> &lt;span style="color:#000">io.airlift.slice.Slice&lt;/span>&lt;span style="color:#000">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a90d91">import&lt;/span> &lt;span style="color:#000">java.util.List&lt;/span>&lt;span style="color:#000">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a90d91">import static&lt;/span> &lt;span style="color:#000">io.airlift.slice.Slices.utf8Slice&lt;/span>&lt;span style="color:#000">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a90d91">public&lt;/span> &lt;span style="color:#a90d91">class&lt;/span> &lt;span style="color:#3f6e75">PageBlockDemo&lt;/span> &lt;span style="color:#000">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a90d91">private&lt;/span> &lt;span style="color:#a90d91">static&lt;/span> &lt;span style="color:#000">Page&lt;/span> &lt;span style="color:#000">buildPage&lt;/span>&lt;span style="color:#000">(&lt;/span>&lt;span style="color:#000">List&lt;/span>&lt;span style="color:#000">&amp;lt;&lt;/span>&lt;span style="color:#000">Type&lt;/span>&lt;span style="color:#000">&amp;gt;&lt;/span> &lt;span style="color:#000">types&lt;/span>&lt;span style="color:#000">,&lt;/span>&lt;span style="color:#000">List&lt;/span>&lt;span style="color:#000">&amp;lt;&lt;/span>&lt;span style="color:#000">Object&lt;/span>&lt;span style="color:#000">[]&amp;gt;&lt;/span> &lt;span style="color:#000">dataSet&lt;/span>&lt;span style="color:#000">){&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">PageBuilder&lt;/span> &lt;span style="color:#000">pageBuilder&lt;/span> &lt;span style="color:#000">=&lt;/span> &lt;span style="color:#a90d91">new&lt;/span> &lt;span style="color:#000">PageBuilder&lt;/span>&lt;span style="color:#000">(&lt;/span>&lt;span style="color:#000">types&lt;/span>&lt;span style="color:#000">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#177500">// 封装成Page
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#177500">&lt;/span> &lt;span style="color:#a90d91">for&lt;/span>&lt;span style="color:#000">(&lt;/span>&lt;span style="color:#000">Object&lt;/span>&lt;span style="color:#000">[]&lt;/span> &lt;span style="color:#000">row&lt;/span>&lt;span style="color:#000">:&lt;/span>&lt;span style="color:#000">dataSet&lt;/span>&lt;span style="color:#000">){&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#177500">// 完成一行
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#177500">&lt;/span> &lt;span style="color:#000">pageBuilder&lt;/span>&lt;span style="color:#000">.&lt;/span>&lt;span style="color:#836c28">declarePosition&lt;/span>&lt;span style="color:#000">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a90d91">for&lt;/span> &lt;span style="color:#000">(&lt;/span>&lt;span style="color:#a90d91">int&lt;/span> &lt;span style="color:#000">column&lt;/span> &lt;span style="color:#000">=&lt;/span> &lt;span style="color:#000">0&lt;/span>&lt;span style="color:#000">;&lt;/span> &lt;span style="color:#000">column&lt;/span> &lt;span style="color:#000">&amp;lt;&lt;/span> &lt;span style="color:#000">types&lt;/span>&lt;span style="color:#000">.&lt;/span>&lt;span style="color:#836c28">size&lt;/span>&lt;span style="color:#000">();&lt;/span> &lt;span style="color:#000">column&lt;/span>&lt;span style="color:#000">++)&lt;/span> &lt;span style="color:#000">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">BlockBuilder&lt;/span> &lt;span style="color:#000">out&lt;/span> &lt;span style="color:#000">=&lt;/span> &lt;span style="color:#000">pageBuilder&lt;/span>&lt;span style="color:#000">.&lt;/span>&lt;span style="color:#836c28">getBlockBuilder&lt;/span>&lt;span style="color:#000">(&lt;/span>&lt;span style="color:#000">column&lt;/span>&lt;span style="color:#000">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">Object&lt;/span> &lt;span style="color:#000">colVal&lt;/span> &lt;span style="color:#000">=&lt;/span> &lt;span style="color:#000">row&lt;/span>&lt;span style="color:#000">[&lt;/span>&lt;span style="color:#000">column&lt;/span>&lt;span style="color:#000">];&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a90d91">if&lt;/span>&lt;span style="color:#000">(&lt;/span>&lt;span style="color:#000">colVal&lt;/span> &lt;span style="color:#000">==&lt;/span> &lt;span style="color:#a90d91">null&lt;/span>&lt;span style="color:#000">){&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">out&lt;/span>&lt;span style="color:#000">.&lt;/span>&lt;span style="color:#836c28">appendNull&lt;/span>&lt;span style="color:#000">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">}&lt;/span>&lt;span style="color:#a90d91">else&lt;/span>&lt;span style="color:#000">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">Type&lt;/span> &lt;span style="color:#000">type&lt;/span> &lt;span style="color:#000">=&lt;/span> &lt;span style="color:#000">types&lt;/span>&lt;span style="color:#000">.&lt;/span>&lt;span style="color:#836c28">get&lt;/span>&lt;span style="color:#000">(&lt;/span>&lt;span style="color:#000">column&lt;/span>&lt;span style="color:#000">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">Class&lt;/span>&lt;span style="color:#000">&amp;lt;?&amp;gt;&lt;/span> &lt;span style="color:#000">javaType&lt;/span> &lt;span style="color:#000">=&lt;/span> &lt;span style="color:#000">type&lt;/span>&lt;span style="color:#000">.&lt;/span>&lt;span style="color:#836c28">getJavaType&lt;/span>&lt;span style="color:#000">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a90d91">if&lt;/span>&lt;span style="color:#000">(&lt;/span>&lt;span style="color:#000">javaType&lt;/span> &lt;span style="color:#000">==&lt;/span> &lt;span style="color:#a90d91">long&lt;/span>&lt;span style="color:#000">.&lt;/span>&lt;span style="color:#836c28">class&lt;/span>&lt;span style="color:#000">){&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">type&lt;/span>&lt;span style="color:#000">.&lt;/span>&lt;span style="color:#836c28">writeLong&lt;/span>&lt;span style="color:#000">(&lt;/span>&lt;span style="color:#000">out&lt;/span>&lt;span style="color:#000">,(&lt;/span>&lt;span style="color:#a90d91">long&lt;/span>&lt;span style="color:#000">)&lt;/span>&lt;span style="color:#000">colVal&lt;/span>&lt;span style="color:#000">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">}&lt;/span>&lt;span style="color:#a90d91">else&lt;/span> &lt;span style="color:#a90d91">if&lt;/span>&lt;span style="color:#000">(&lt;/span>&lt;span style="color:#000">javaType&lt;/span> &lt;span style="color:#000">==&lt;/span> &lt;span style="color:#000">Slice&lt;/span>&lt;span style="color:#000">.&lt;/span>&lt;span style="color:#836c28">class&lt;/span>&lt;span style="color:#000">){&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">type&lt;/span>&lt;span style="color:#000">.&lt;/span>&lt;span style="color:#836c28">writeSlice&lt;/span>&lt;span style="color:#000">(&lt;/span>&lt;span style="color:#000">out&lt;/span>&lt;span style="color:#000">,&lt;/span> &lt;span style="color:#000">utf8Slice&lt;/span>&lt;span style="color:#000">((&lt;/span>&lt;span style="color:#000">String&lt;/span>&lt;span style="color:#000">)&lt;/span>&lt;span style="color:#000">colVal&lt;/span>&lt;span style="color:#000">));&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">}&lt;/span>&lt;span style="color:#a90d91">else&lt;/span>&lt;span style="color:#000">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a90d91">throw&lt;/span> &lt;span style="color:#a90d91">new&lt;/span> &lt;span style="color:#000">UnsupportedOperationException&lt;/span>&lt;span style="color:#000">(&lt;/span>&lt;span style="color:#c41a16">&amp;#34;not implemented&amp;#34;&lt;/span>&lt;span style="color:#000">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#177500">// 生成Page
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#177500">&lt;/span> &lt;span style="color:#000">Page&lt;/span> &lt;span style="color:#000">page&lt;/span> &lt;span style="color:#000">=&lt;/span> &lt;span style="color:#000">pageBuilder&lt;/span>&lt;span style="color:#000">.&lt;/span>&lt;span style="color:#836c28">build&lt;/span>&lt;span style="color:#000">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">pageBuilder&lt;/span>&lt;span style="color:#000">.&lt;/span>&lt;span style="color:#836c28">reset&lt;/span>&lt;span style="color:#000">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a90d91">return&lt;/span> &lt;span style="color:#000">page&lt;/span>&lt;span style="color:#000">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a90d91">private&lt;/span> &lt;span style="color:#a90d91">static&lt;/span> &lt;span style="color:#a90d91">void&lt;/span> &lt;span style="color:#000">readColumn&lt;/span>&lt;span style="color:#000">(&lt;/span>&lt;span style="color:#000">List&lt;/span>&lt;span style="color:#000">&amp;lt;&lt;/span>&lt;span style="color:#000">Type&lt;/span>&lt;span style="color:#000">&amp;gt;&lt;/span> &lt;span style="color:#000">types&lt;/span>&lt;span style="color:#000">,&lt;/span>&lt;span style="color:#000">Page&lt;/span> &lt;span style="color:#000">page&lt;/span>&lt;span style="color:#000">){&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#177500">// 从Page中读取列
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#177500">&lt;/span> &lt;span style="color:#a90d91">for&lt;/span>&lt;span style="color:#000">(&lt;/span>&lt;span style="color:#a90d91">int&lt;/span> &lt;span style="color:#000">column&lt;/span>&lt;span style="color:#000">=&lt;/span>&lt;span style="color:#000">0&lt;/span>&lt;span style="color:#000">;&lt;/span>&lt;span style="color:#000">column&lt;/span>&lt;span style="color:#000">&amp;lt;&lt;/span>&lt;span style="color:#000">types&lt;/span>&lt;span style="color:#000">.&lt;/span>&lt;span style="color:#836c28">size&lt;/span>&lt;span style="color:#000">();&lt;/span>&lt;span style="color:#000">column&lt;/span>&lt;span style="color:#000">++){&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">Block&lt;/span> &lt;span style="color:#000">block&lt;/span> &lt;span style="color:#000">=&lt;/span> &lt;span style="color:#000">page&lt;/span>&lt;span style="color:#000">.&lt;/span>&lt;span style="color:#836c28">getBlock&lt;/span>&lt;span style="color:#000">(&lt;/span>&lt;span style="color:#000">column&lt;/span>&lt;span style="color:#000">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">Type&lt;/span> &lt;span style="color:#000">type&lt;/span> &lt;span style="color:#000">=&lt;/span> &lt;span style="color:#000">types&lt;/span>&lt;span style="color:#000">.&lt;/span>&lt;span style="color:#836c28">get&lt;/span>&lt;span style="color:#000">(&lt;/span>&lt;span style="color:#000">column&lt;/span>&lt;span style="color:#000">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">Class&lt;/span>&lt;span style="color:#000">&amp;lt;?&amp;gt;&lt;/span> &lt;span style="color:#000">javaType&lt;/span> &lt;span style="color:#000">=&lt;/span> &lt;span style="color:#000">type&lt;/span>&lt;span style="color:#000">.&lt;/span>&lt;span style="color:#836c28">getJavaType&lt;/span>&lt;span style="color:#000">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">System&lt;/span>&lt;span style="color:#000">.&lt;/span>&lt;span style="color:#836c28">out&lt;/span>&lt;span style="color:#000">.&lt;/span>&lt;span style="color:#836c28">print&lt;/span>&lt;span style="color:#000">(&lt;/span>&lt;span style="color:#c41a16">&amp;#34;column[&amp;#34;&lt;/span>&lt;span style="color:#000">+&lt;/span>&lt;span style="color:#000">type&lt;/span>&lt;span style="color:#000">.&lt;/span>&lt;span style="color:#836c28">getDisplayName&lt;/span>&lt;span style="color:#000">()+&lt;/span>&lt;span style="color:#c41a16">&amp;#34;]&amp;gt;&amp;gt;&amp;#34;&lt;/span>&lt;span style="color:#000">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">List&lt;/span>&lt;span style="color:#000">&amp;lt;&lt;/span>&lt;span style="color:#000">Object&lt;/span>&lt;span style="color:#000">&amp;gt;&lt;/span> &lt;span style="color:#000">colList&lt;/span> &lt;span style="color:#000">=&lt;/span> &lt;span style="color:#000">Lists&lt;/span>&lt;span style="color:#000">.&lt;/span>&lt;span style="color:#836c28">newArrayList&lt;/span>&lt;span style="color:#000">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a90d91">for&lt;/span>&lt;span style="color:#000">(&lt;/span>&lt;span style="color:#a90d91">int&lt;/span> &lt;span style="color:#000">pos&lt;/span>&lt;span style="color:#000">=&lt;/span>&lt;span style="color:#000">0&lt;/span>&lt;span style="color:#000">;&lt;/span>&lt;span style="color:#000">pos&lt;/span>&lt;span style="color:#000">&amp;lt;&lt;/span>&lt;span style="color:#000">block&lt;/span>&lt;span style="color:#000">.&lt;/span>&lt;span style="color:#836c28">getPositionCount&lt;/span>&lt;span style="color:#000">();&lt;/span>&lt;span style="color:#000">pos&lt;/span>&lt;span style="color:#000">++){&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a90d91">if&lt;/span>&lt;span style="color:#000">(&lt;/span>&lt;span style="color:#000">javaType&lt;/span> &lt;span style="color:#000">==&lt;/span> &lt;span style="color:#a90d91">long&lt;/span>&lt;span style="color:#000">.&lt;/span>&lt;span style="color:#836c28">class&lt;/span>&lt;span style="color:#000">){&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">colList&lt;/span>&lt;span style="color:#000">.&lt;/span>&lt;span style="color:#836c28">add&lt;/span>&lt;span style="color:#000">(&lt;/span>&lt;span style="color:#000">block&lt;/span>&lt;span style="color:#000">.&lt;/span>&lt;span style="color:#836c28">getLong&lt;/span>&lt;span style="color:#000">(&lt;/span>&lt;span style="color:#000">pos&lt;/span>&lt;span style="color:#000">));&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">}&lt;/span>&lt;span style="color:#a90d91">else&lt;/span> &lt;span style="color:#a90d91">if&lt;/span>&lt;span style="color:#000">(&lt;/span>&lt;span style="color:#000">javaType&lt;/span> &lt;span style="color:#000">==&lt;/span> &lt;span style="color:#000">Slice&lt;/span>&lt;span style="color:#000">.&lt;/span>&lt;span style="color:#836c28">class&lt;/span>&lt;span style="color:#000">){&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">colList&lt;/span>&lt;span style="color:#000">.&lt;/span>&lt;span style="color:#836c28">add&lt;/span>&lt;span style="color:#000">(&lt;/span>&lt;span style="color:#000">block&lt;/span>&lt;span style="color:#000">.&lt;/span>&lt;span style="color:#836c28">getSlice&lt;/span>&lt;span style="color:#000">(&lt;/span>&lt;span style="color:#000">pos&lt;/span>&lt;span style="color:#000">,&lt;/span>&lt;span style="color:#000">0&lt;/span>&lt;span style="color:#000">,&lt;/span>&lt;span style="color:#000">block&lt;/span>&lt;span style="color:#000">.&lt;/span>&lt;span style="color:#836c28">getSliceLength&lt;/span>&lt;span style="color:#000">(&lt;/span>&lt;span style="color:#000">pos&lt;/span>&lt;span style="color:#000">)).&lt;/span>&lt;span style="color:#836c28">toStringUtf8&lt;/span>&lt;span style="color:#000">());&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">}&lt;/span>&lt;span style="color:#a90d91">else&lt;/span>&lt;span style="color:#000">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a90d91">throw&lt;/span> &lt;span style="color:#a90d91">new&lt;/span> &lt;span style="color:#000">UnsupportedOperationException&lt;/span>&lt;span style="color:#000">(&lt;/span>&lt;span style="color:#c41a16">&amp;#34;not implemented&amp;#34;&lt;/span>&lt;span style="color:#000">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">System&lt;/span>&lt;span style="color:#000">.&lt;/span>&lt;span style="color:#836c28">out&lt;/span>&lt;span style="color:#000">.&lt;/span>&lt;span style="color:#836c28">println&lt;/span>&lt;span style="color:#000">(&lt;/span>&lt;span style="color:#000">colList&lt;/span>&lt;span style="color:#000">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a90d91">public&lt;/span> &lt;span style="color:#a90d91">static&lt;/span> &lt;span style="color:#a90d91">void&lt;/span> &lt;span style="color:#000">main&lt;/span>&lt;span style="color:#000">(&lt;/span>&lt;span style="color:#000">String&lt;/span>&lt;span style="color:#000">[]&lt;/span> &lt;span style="color:#000">args&lt;/span>&lt;span style="color:#000">)&lt;/span> &lt;span style="color:#000">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#177500">/**
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#177500"> * 假设有两个字段，一个字段类型为int, 一个字段类型为varchar
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#177500"> */&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">List&lt;/span>&lt;span style="color:#000">&amp;lt;&lt;/span>&lt;span style="color:#000">Type&lt;/span>&lt;span style="color:#000">&amp;gt;&lt;/span> &lt;span style="color:#000">types&lt;/span> &lt;span style="color:#000">=&lt;/span> &lt;span style="color:#000">Lists&lt;/span>&lt;span style="color:#000">.&lt;/span>&lt;span style="color:#836c28">newArrayList&lt;/span>&lt;span style="color:#000">(&lt;/span>&lt;span style="color:#000">BigintType&lt;/span>&lt;span style="color:#000">.&lt;/span>&lt;span style="color:#836c28">BIGINT&lt;/span>&lt;span style="color:#000">,&lt;/span> &lt;span style="color:#000">VarcharType&lt;/span>&lt;span style="color:#000">.&lt;/span>&lt;span style="color:#836c28">VARCHAR&lt;/span>&lt;span style="color:#000">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#177500">// 按行存储
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#177500">&lt;/span> &lt;span style="color:#000">List&lt;/span>&lt;span style="color:#000">&amp;lt;&lt;/span>&lt;span style="color:#000">Object&lt;/span>&lt;span style="color:#000">[]&amp;gt;&lt;/span> &lt;span style="color:#000">dataSet&lt;/span> &lt;span style="color:#000">=&lt;/span> &lt;span style="color:#000">Lists&lt;/span>&lt;span style="color:#000">.&lt;/span>&lt;span style="color:#836c28">newArrayList&lt;/span>&lt;span style="color:#000">(&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a90d91">new&lt;/span> &lt;span style="color:#000">Object&lt;/span>&lt;span style="color:#000">[]{&lt;/span>&lt;span style="color:#000">1L&lt;/span>&lt;span style="color:#000">,&lt;/span>&lt;span style="color:#c41a16">&amp;#34;aa&amp;#34;&lt;/span>&lt;span style="color:#000">},&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a90d91">new&lt;/span> &lt;span style="color:#000">Object&lt;/span>&lt;span style="color:#000">[]{&lt;/span>&lt;span style="color:#000">2L&lt;/span>&lt;span style="color:#000">,&lt;/span>&lt;span style="color:#c41a16">&amp;#34;ba&amp;#34;&lt;/span>&lt;span style="color:#000">},&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a90d91">new&lt;/span> &lt;span style="color:#000">Object&lt;/span>&lt;span style="color:#000">[]{&lt;/span>&lt;span style="color:#000">3L&lt;/span>&lt;span style="color:#000">,&lt;/span>&lt;span style="color:#c41a16">&amp;#34;cc&amp;#34;&lt;/span>&lt;span style="color:#000">},&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a90d91">new&lt;/span> &lt;span style="color:#000">Object&lt;/span>&lt;span style="color:#000">[]{&lt;/span>&lt;span style="color:#000">4L&lt;/span>&lt;span style="color:#000">,&lt;/span>&lt;span style="color:#c41a16">&amp;#34;dd&amp;#34;&lt;/span>&lt;span style="color:#000">});&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">Page&lt;/span> &lt;span style="color:#000">page&lt;/span> &lt;span style="color:#000">=&lt;/span> &lt;span style="color:#000">buildPage&lt;/span>&lt;span style="color:#000">(&lt;/span>&lt;span style="color:#000">types&lt;/span>&lt;span style="color:#000">,&lt;/span> &lt;span style="color:#000">dataSet&lt;/span>&lt;span style="color:#000">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">readColumn&lt;/span>&lt;span style="color:#000">(&lt;/span>&lt;span style="color:#000">types&lt;/span>&lt;span style="color:#000">,&lt;/span>&lt;span style="color:#000">page&lt;/span>&lt;span style="color:#000">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#177500">// 运行结果：
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#177500">//column[bigint]&amp;gt;&amp;gt;[1, 2, 3, 4]
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#177500">//column[varchar]&amp;gt;&amp;gt;[aa, ba, cc, dd]
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;/details>
&lt;br/>
&lt;h1 id="join工程化实践">Join工程化实践&lt;/h1>
&lt;h2 id="基本流程">基本流程&lt;/h2>
&lt;ul>
&lt;li>Parser:  借助ANTLR的能力即可实现SQL语法的检测。&lt;/li>
&lt;li>Binding: 基于SQL语句生成AST，利用元数据检测字段和表的映射关系以及Join条件的字段类型。&lt;/li>
&lt;li>Planner: 基于AST生成查询计划。 &lt;/li>
&lt;li>Executor: 基于查询计划生成对应的Operator并执行。&lt;/li>
&lt;/ul>
&lt;h2 id="落地事项">落地事项&lt;/h2>
&lt;ul>
&lt;li>支持所有的Join语义&lt;/li>
&lt;li>分布式能力&lt;/li>
&lt;li>性能优化&lt;/li>
&lt;li>多表Join的顺序选择&lt;/li>
&lt;li>大表与小表Join&lt;/li>
&lt;li>Semi Join优化&lt;/li>
&lt;li>Join算法倾斜&lt;/li>
&lt;/ul>
&lt;h2 id="示例-nested-loop-join">示例：Nested Loop Join&lt;/h2>
&lt;p>以 Nested Loop Join 算法为例，Presto是拆解为两个阶段：&lt;/p>
&lt;ul>
&lt;li>组合阶段&lt;/li>
&lt;li>过滤阶段
实现JoinOperator时，只需负责两个表数据的笛卡尔积组合即可。核心代码如下：&lt;/li>
&lt;/ul>
&lt;style>
.highlight {
overflow-y: auto;
max-height: 500px;
overflow-x: auto;
max-width: 130%;
}
.td-content .highlight {
margin-top: 0.5rem;
margin-bottom: 0.5rem;
}
&lt;/style>
&lt;details class="code-collapse">
&lt;summary>Expand/Collapse Code Block&lt;/summary>
&lt;div class="highlight">&lt;div style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">
&lt;table style="border-spacing:0;padding:0;margin:0;border:0;">&lt;tr>&lt;td style="vertical-align:top;padding:0;margin:0;border:0;">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 1
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 2
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 3
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 4
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 5
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 6
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 7
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 8
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 9
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">10
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">11
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">12
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">13
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">14
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">15
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">16
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">17
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">18
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">19
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">20
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">21
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">22
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">23
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">24
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">25
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">26
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">27
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">28
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">29
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">30
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">31
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">32
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">33
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">34
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">35
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">36
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">37
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#177500">// NestedLoopPageBuilder中实现两个Page计算笛卡尔积的处理逻辑，
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#177500">// 这里RunLengthEncodedBlock用于一个元素复制，典型地笛卡尔积计算中需要将一列元素从1行复制成多行。
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#177500">&lt;/span>&lt;span style="color:#000">@Override&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a90d91">public&lt;/span> &lt;span style="color:#000">Page&lt;/span> &lt;span style="color:#000">next&lt;/span>&lt;span style="color:#000">()&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a90d91">if&lt;/span> &lt;span style="color:#000">(!&lt;/span>&lt;span style="color:#000">hasNext&lt;/span>&lt;span style="color:#000">())&lt;/span> &lt;span style="color:#000">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a90d91">throw&lt;/span> &lt;span style="color:#a90d91">new&lt;/span> &lt;span style="color:#000">NoSuchElementException&lt;/span>&lt;span style="color:#000">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a90d91">if&lt;/span> &lt;span style="color:#000">(&lt;/span>&lt;span style="color:#000">noColumnShortcutResult&lt;/span> &lt;span style="color:#000">&amp;gt;=&lt;/span> &lt;span style="color:#000">0&lt;/span>&lt;span style="color:#000">)&lt;/span> &lt;span style="color:#000">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">rowIndex&lt;/span> &lt;span style="color:#000">=&lt;/span> &lt;span style="color:#000">maxRowIndex&lt;/span>&lt;span style="color:#000">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a90d91">return&lt;/span> &lt;span style="color:#a90d91">new&lt;/span> &lt;span style="color:#000">Page&lt;/span>&lt;span style="color:#000">(&lt;/span>&lt;span style="color:#000">noColumnShortcutResult&lt;/span>&lt;span style="color:#000">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">rowIndex&lt;/span>&lt;span style="color:#000">++;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#177500">// Create an array of blocks for all columns in both pages.
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#177500">&lt;/span> &lt;span style="color:#000">Block&lt;/span>&lt;span style="color:#000">[]&lt;/span> &lt;span style="color:#000">blocks&lt;/span> &lt;span style="color:#000">=&lt;/span> &lt;span style="color:#a90d91">new&lt;/span> &lt;span style="color:#000">Block&lt;/span>&lt;span style="color:#000">[&lt;/span>&lt;span style="color:#000">numberOfProbeColumns&lt;/span> &lt;span style="color:#000">+&lt;/span> &lt;span style="color:#000">numberOfBuildColumns&lt;/span>&lt;span style="color:#000">];&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#177500">// Make sure we always put the probe data on the left and build data on the right.
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#177500">&lt;/span> &lt;span style="color:#a90d91">int&lt;/span> &lt;span style="color:#000">indexForRleBlocks&lt;/span> &lt;span style="color:#000">=&lt;/span> &lt;span style="color:#000">buildPageLarger&lt;/span> &lt;span style="color:#000">?&lt;/span> &lt;span style="color:#000">0&lt;/span> &lt;span style="color:#000">:&lt;/span> &lt;span style="color:#000">numberOfProbeColumns&lt;/span>&lt;span style="color:#000">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a90d91">int&lt;/span> &lt;span style="color:#000">indexForPageBlocks&lt;/span> &lt;span style="color:#000">=&lt;/span> &lt;span style="color:#000">buildPageLarger&lt;/span> &lt;span style="color:#000">?&lt;/span> &lt;span style="color:#000">numberOfProbeColumns&lt;/span> &lt;span style="color:#000">:&lt;/span> &lt;span style="color:#000">0&lt;/span>&lt;span style="color:#000">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#177500">// For the page with less rows, create RLE blocks and add them to the blocks array
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#177500">&lt;/span> &lt;span style="color:#a90d91">for&lt;/span> &lt;span style="color:#000">(&lt;/span>&lt;span style="color:#a90d91">int&lt;/span> &lt;span style="color:#000">i&lt;/span> &lt;span style="color:#000">=&lt;/span> &lt;span style="color:#000">0&lt;/span>&lt;span style="color:#000">;&lt;/span> &lt;span style="color:#000">i&lt;/span> &lt;span style="color:#000">&amp;lt;&lt;/span> &lt;span style="color:#000">smallPage&lt;/span>&lt;span style="color:#000">.&lt;/span>&lt;span style="color:#836c28">getChannelCount&lt;/span>&lt;span style="color:#000">();&lt;/span> &lt;span style="color:#000">i&lt;/span>&lt;span style="color:#000">++)&lt;/span> &lt;span style="color:#000">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">Block&lt;/span> &lt;span style="color:#000">block&lt;/span> &lt;span style="color:#000">=&lt;/span> &lt;span style="color:#000">smallPage&lt;/span>&lt;span style="color:#000">.&lt;/span>&lt;span style="color:#836c28">getBlock&lt;/span>&lt;span style="color:#000">(&lt;/span>&lt;span style="color:#000">i&lt;/span>&lt;span style="color:#000">).&lt;/span>&lt;span style="color:#836c28">getSingleValueBlock&lt;/span>&lt;span style="color:#000">(&lt;/span>&lt;span style="color:#000">rowIndex&lt;/span>&lt;span style="color:#000">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">blocks&lt;/span>&lt;span style="color:#000">[&lt;/span>&lt;span style="color:#000">indexForRleBlocks&lt;/span>&lt;span style="color:#000">]&lt;/span> &lt;span style="color:#000">=&lt;/span> &lt;span style="color:#a90d91">new&lt;/span> &lt;span style="color:#000">RunLengthEncodedBlock&lt;/span>&lt;span style="color:#000">(&lt;/span>&lt;span style="color:#000">block&lt;/span>&lt;span style="color:#000">,&lt;/span> &lt;span style="color:#000">largePage&lt;/span>&lt;span style="color:#000">.&lt;/span>&lt;span style="color:#836c28">getPositionCount&lt;/span>&lt;span style="color:#000">());&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">indexForRleBlocks&lt;/span>&lt;span style="color:#000">++;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#177500">// Put the page with more rows in the blocks array
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#177500">&lt;/span> &lt;span style="color:#a90d91">for&lt;/span> &lt;span style="color:#000">(&lt;/span>&lt;span style="color:#a90d91">int&lt;/span> &lt;span style="color:#000">i&lt;/span> &lt;span style="color:#000">=&lt;/span> &lt;span style="color:#000">0&lt;/span>&lt;span style="color:#000">;&lt;/span> &lt;span style="color:#000">i&lt;/span> &lt;span style="color:#000">&amp;lt;&lt;/span> &lt;span style="color:#000">largePage&lt;/span>&lt;span style="color:#000">.&lt;/span>&lt;span style="color:#836c28">getChannelCount&lt;/span>&lt;span style="color:#000">();&lt;/span> &lt;span style="color:#000">i&lt;/span>&lt;span style="color:#000">++)&lt;/span> &lt;span style="color:#000">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">blocks&lt;/span>&lt;span style="color:#000">[&lt;/span>&lt;span style="color:#000">indexForPageBlocks&lt;/span> &lt;span style="color:#000">+&lt;/span> &lt;span style="color:#000">i&lt;/span>&lt;span style="color:#000">]&lt;/span> &lt;span style="color:#000">=&lt;/span> &lt;span style="color:#000">largePage&lt;/span>&lt;span style="color:#000">.&lt;/span>&lt;span style="color:#836c28">getBlock&lt;/span>&lt;span style="color:#000">(&lt;/span>&lt;span style="color:#000">i&lt;/span>&lt;span style="color:#000">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a90d91">return&lt;/span> &lt;span style="color:#a90d91">new&lt;/span> &lt;span style="color:#000">Page&lt;/span>&lt;span style="color:#000">(&lt;/span>&lt;span style="color:#000">largePage&lt;/span>&lt;span style="color:#000">.&lt;/span>&lt;span style="color:#836c28">getPositionCount&lt;/span>&lt;span style="color:#000">(),&lt;/span> &lt;span style="color:#000">blocks&lt;/span>&lt;span style="color:#000">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;/details>
&lt;br/></description></item><item><title>Docs: 03.统计计数</title><link>/docs/30.%E6%95%B0%E6%8D%AE%E5%BA%93/SQL%E5%BC%95%E6%93%8E/03.%E7%BB%9F%E8%AE%A1%E8%AE%A1%E6%95%B0/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/docs/30.%E6%95%B0%E6%8D%AE%E5%BA%93/SQL%E5%BC%95%E6%93%8E/03.%E7%BB%9F%E8%AE%A1%E8%AE%A1%E6%95%B0/</guid><description>
&lt;h1 id="背景">背景&lt;/h1>
&lt;p>统计计数是一个非常常见场景。除了通常的计数，统计不重复元素个数的需求也非常常见，这种统计称为&lt;strong>基数统计&lt;/strong>。分布式SQL引擎，计数的实现原理值得深入研究，特别是基数统计。关于普通计数和基数计数，最典型的例子莫过于PV/UV。&lt;/p>
&lt;h1 id="主要方法">主要方法&lt;/h1>
&lt;p>在SQL语法里面，基数统计对应到count(distinct  field)或者aprox_distinct()。通常做精确计数统计需要用到Set这种数据结构。Set不仅可以获得数量信息，还能不重不漏地获取每一个元素。&lt;/p>
&lt;p>Set内部有两种实现实现原理：Hash和Tree。&lt;/p>
&lt;p>在海量数据的前提下，Hash和Tree有一个致命的问题：内存消耗，而且随着数据量级的增长，内存消耗也是线性增长。&lt;/p>
&lt;p>面对Set内存消耗的问题，通常有两种思路：&lt;/p>
&lt;ul>
&lt;li>选取其他内存占用更小的数据结构，例如bitmap；&lt;/li>
&lt;li>放弃精确，从数学上寻求近似解，典型的算法有Linear Count和HyperLogLog。&lt;/li>
&lt;/ul>
&lt;h2 id="bitmap">Bitmap&lt;/h2>
&lt;p>在数据库领域Bitmap并不是新事物，一般用作索引，称为位图索引。所谓位图索引，就是用一个bit位向量来记录某个字段值是否存在于对应的记录。它有一个前置条件：记录要有永久的编号，类似于从1开始的自增主键。&lt;/p>
&lt;h3 id="位图向量的构建">位图向量的构建&lt;/h3>
&lt;p>对于数据表的一个字段，如果记录数为n且字段的取值基数为m，那么会得到一个m*n的位图。&lt;/p>
&lt;p>多个字段即得到多个这样的位图。&lt;/p>
&lt;h3 id="位图向量的应用">位图向量的应用&lt;/h3>
&lt;p>单个条件：&lt;/p>
&lt;p>直接取该字段m*n的位图，统计其中 1 的个数。&lt;/p>
&lt;p>多个条件：&lt;/p>
&lt;p>取对应多个字段的位图，多个向量进行交集运算，然后统计 1 的个数。&lt;/p>
&lt;h3 id="优缺点">优缺点&lt;/h3>
&lt;p>优点：&lt;/p>
&lt;ul>
&lt;li>
&lt;p>节省内存（数据分布密集压缩空间更大）&lt;/p>
&lt;/li>
&lt;li>
&lt;p>二进制位操作，执行效率高
缺点：&lt;/p>
&lt;/li>
&lt;li>
&lt;p>非数值型字段，需要额外转换处理&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h2 id="linear-count">Linear Count&lt;/h2>
&lt;p>Linear Count简称LC算法（利用数学的概率和统计学知识）。 &lt;/p>
&lt;p>算法描述如下：&lt;/p>
&lt;ul>
&lt;li>初始化：给定m个房间，房间存储数字，初始化为0。&lt;/li>
&lt;li>迭代执行：对于要进行基数统计的集合，用一个哈希函数处理集合中的每一个元素。通过哈希函数处理后，元素就可以放置到一个房间中。&lt;/li>
&lt;li>收尾：统计m个房间中空房间的数量U。&lt;/li>
&lt;li>结论：集合中不重复元素的个数估计值可以通过如下公式计算：n=-m*log(U/m)。
随着m和n的增大，m大约为n的十分之一。&lt;/li>
&lt;/ul>
&lt;h2 id="hyperloglog">HyperLogLog&lt;/h2>
&lt;p>HyperLogLog简称HLL算法，它有如下的特点：&lt;/p>
&lt;ol>
&lt;li>可以实现由极小的内存开销统计出巨量的数据。在 Redis中实现的HyperLogLog，只需要12K内存就能统计2^64个数据。&lt;/li>
&lt;li>可以方便实现分布式扩展。(对算法在业务系统中落地非常关键)&lt;/li>
&lt;/ol>
&lt;h2 id="基础理论">基础理论&lt;/h2>
&lt;h3 id="伯努利实验">伯努利实验&lt;/h3>
&lt;p>如抛硬币，随着次数地增多，对应的值也就越趋近一个值。这样将统计问题转换成概率论中参数估计的问题。&lt;/p>
&lt;h3 id="调和平均数">调和平均数&lt;/h3>
&lt;p>概率中的极值问题导致最后得到的值不稳定。对于极值的处理策略是多实验几轮，通过平均值来消除极值的影响。&lt;/p>
&lt;p>数学上其实有许多的平均数计算方式：算术平均数、几何平均数、平方平均数。选用调和平均数主要是消除极值的影响。&lt;/p>
&lt;h1 id="核心流程">核心流程&lt;/h1>
&lt;p>MapReduce的核心流程：&lt;/p>
&lt;ul>
&lt;li>Input&lt;/li>
&lt;li>Splitting&lt;/li>
&lt;li>Mapping&lt;/li>
&lt;li>Shuffling&lt;/li>
&lt;li>Reducing&lt;/li>
&lt;li>Final result
Presto核心流程也是类似的，先分组聚合，然后汇总聚合。&lt;/li>
&lt;/ul>
&lt;h1 id="方案实现">方案实现&lt;/h1>
&lt;h2 id="count-distinct">&lt;strong>count distinct&lt;/strong>&lt;/h2>
&lt;p>以id为主key, 对数据进行hash分发，进行部分聚合，最终整体聚合。依然是map-reduce的思路，只不过数据按id进行了分发。&lt;/p>
&lt;h2 id="aprox-distinct">&lt;strong>aprox_distinct&lt;/strong>&lt;/h2>
&lt;p>免去了基于id的hash分发策略，减少了一个stage。以Presto为例，基础框架airlift中封装了HyperLogLog算法的实现，采用的函数是MurMurHash3算法，生成64位散列值。前6位用于计算当前散列值所在分组m。实现过程中还有一个很有意思的细节：基于待统计的数据量，实现中同时采用了Linear Count算法和HyperLogLog算法。&lt;/p>
&lt;h1 id="小结">小结&lt;/h1>
&lt;p>基数统计是一个非常消耗内存的操作，特别是在分布式系统背景下，不仅消耗内存，而且涉及大量网络数据传输。&lt;/p>
&lt;p>分析对应的业务场景，如果可以提供近似值而非精确值，能大幅度降低系统消耗和响应时间，提升用户体验。或者在设计产品时，对于一些场景的计数，可以优先提供近似估计，如果确实需要精确计数，在管理好响应时间预期下，再提供查询精确值的接口。&lt;/p></description></item><item><title>Docs: Presto简介</title><link>/docs/30.%E6%95%B0%E6%8D%AE%E5%BA%93/SQL%E5%BC%95%E6%93%8E/Presto%E7%AE%80%E4%BB%8B/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/docs/30.%E6%95%B0%E6%8D%AE%E5%BA%93/SQL%E5%BC%95%E6%93%8E/Presto%E7%AE%80%E4%BB%8B/</guid><description>
&lt;h1 id="背景">背景&lt;/h1>
&lt;p>Facebook的数据仓库存储在少量大型Hadoop/HDFS集群，之前Facebook的科学家和分析师一直依靠Hive来做数据分析。但Hive使用MapReduce作为底层计算框架，是专为批处理设计的。随着数据越来越多，使用Hive进行一个简单的数据查询可能要花费几分到几小时，显然不能满足交互式查询的需求。Facebook也调研了其他比Hive更快的工具，但它们要么在功能有所限制要么就太简单，以至于无法操作Facebook庞大的数据仓库。&lt;/p>
&lt;p>2012年开始试用的一些外部项目都不合适，Facebook决定自己开发，即Presto。目前该项目已经在超过1000名Facebook雇员中使用，运行超过30000个查询，每日数据在1PB级别。Facebook称Presto的性能比Hive要好10倍以上。2013年Facebook正式宣布开源Presto。&lt;/p>
&lt;h1 id="简介">简介&lt;/h1>
&lt;p>Presto是由facebook 开源的分布式的MPP(Massive Parallel Processing)架构的SQL查询引擎。基于全内存计算(部分算子数据也可通过session 配置spill到本地磁盘)，并且采用流式pipeline的方式处理数据使其能够节省内存的同时，更快的响应查询。&lt;/p>
&lt;h2 id="特点">特点&lt;/h2>
&lt;ul>
&lt;li>
&lt;p>多数据源
Presto可以支持MySQL、PostgreSQL、cassandra、Hive、Kafka等多种数据源查询。也可以帮助从其驻留位置查询数据，例如Hive，Cassandra，专有数据存储或关系数据库。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>支持SQL
Presto支持部分标准SQL对数据进行查询，并提供SQL shell进行SQL查询。但不支持存储过程，不适合大表Join操作，因为Presto是基于内存的，多张大表关联可能给内存带来压力。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>扩展性
Presto有很好的扩展向，可以自定义开发特定数据源的Connector，使用SQL分析指定Connector中的数据。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>混合计算
在Presto中可以根据业务需要使用特定类型的Connector来读取不同数据源的数据，进行join关联计算、合并查询。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>基于内存计算，高性能
基于内存计算的，减少磁盘IO，计算更快。性能是Hive的10倍以上，能够处理PB级别的数据，但并不是把PB级别的数据一次性加载到内存中计算，而是根据处理方式，例如聚合场景，边读取数据、聚合、再清空内存，循环往复。如果使用Join查询，那么就会产生大量的中间数据，速度会变慢。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>流水线
由于Presto是基于PipeLine进行设计的，因此在进行海量数据处理过程中，终端用户不用等到所有的数据都处理完成才能看到结果，而是可以向自来水管一样，一旦计算开始，就可以产生一部分结果数据，并且结果数据会一部分接一部分的返回到客户端。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>架构简单
包括一个coordinator和多个worker。&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h2 id="presto与hive比较">Presto与Hive比较&lt;/h2>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th style="text-align:left">&lt;/th>
&lt;th style="text-align:left">Presto&lt;/th>
&lt;th style="text-align:left">Hive&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td style="text-align:left">&lt;strong>查询语言&lt;/strong>&lt;/td>
&lt;td style="text-align:left">ANSI SQL&lt;/td>
&lt;td style="text-align:left">HiveQL&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:left">&lt;strong>速度&lt;/strong>&lt;/td>
&lt;td style="text-align:left">比Hive的速度快5-10倍&lt;/td>
&lt;td style="text-align:left">比Presto慢&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:left">&lt;strong>自定义代码插件&lt;/strong>&lt;/td>
&lt;td style="text-align:left">没有&lt;/td>
&lt;td style="text-align:left">允许用户插入自定义代码&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:left">&lt;strong>语法差异&lt;/strong>&lt;/td>
&lt;td style="text-align:left">有&lt;/td>
&lt;td style="text-align:left">有&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:left">&lt;strong>数据限制&lt;/strong>&lt;/td>
&lt;td style="text-align:left">可以处理有限的数据量&lt;/td>
&lt;td style="text-align:left">可以处理大批量数据&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:left">&lt;strong>长时间运行的查询&lt;/strong>&lt;/td>
&lt;td style="text-align:left">超过48小时就会终止&lt;/td>
&lt;td style="text-align:left">可以查询长期运行的查询&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h2 id="presto与spark-sql比较">Presto与Spark SQL比较&lt;/h2>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th style="text-align:left">&lt;/th>
&lt;th style="text-align:left">Presto&lt;/th>
&lt;th style="text-align:left">HiveSpark SQL&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td style="text-align:left">&lt;strong>重点&lt;/strong>&lt;/td>
&lt;td style="text-align:left">强调查询，支持BI报表&lt;/td>
&lt;td style="text-align:left">强调计算，数据的ETL加工&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:left">&lt;strong>架构&lt;/strong>&lt;/td>
&lt;td style="text-align:left">MMP主从架构，简单，一个协调器多个Worker&lt;/td>
&lt;td style="text-align:left">MMP主从架构，复杂，很多层，RDD的弹性构建，为作业进行资源管理和协商等&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:left">&lt;strong>内存存储&lt;/strong>&lt;/td>
&lt;td style="text-align:left">基于内存，不够就OOM&lt;/td>
&lt;td style="text-align:left">内存+落磁盘&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:left">&lt;strong>资源申请&lt;/strong>&lt;/td>
&lt;td style="text-align:left">预先申请CPU/内存，coordinator和worker一直运行&lt;/td>
&lt;td style="text-align:left">实时申请资源，需要多少资源申请多少&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:left">&lt;strong>数据处理&lt;/strong>&lt;/td>
&lt;td style="text-align:left">批处理管道处理模式，完成就可以将其发送到下一个任务，大大减少各种查询的端到端响应时间&lt;/td>
&lt;td style="text-align:left">数据需要在进入下一阶段之前完全处理&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:left">&lt;strong>优化措施&lt;/strong>&lt;/td>
&lt;td style="text-align:left">基于成本的优化器(CBO)，速度更快&lt;/td>
&lt;td style="text-align:left">基于规则的优化(RBO)，复杂查询上执行更好的操作，速度更慢&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:left">&lt;strong>运行时间&lt;/strong>&lt;/td>
&lt;td style="text-align:left">作为服务一直运行，更容易利用缓存&lt;/td>
&lt;td style="text-align:left">一个任务，作业分发和启动都需要时间&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h1 id="架构">架构&lt;/h1>
&lt;p>&lt;img src="../imgs/pres_intro_230312_1.png" alt="pres_intro_230312_1.png">&lt;/p>
&lt;p>Presto查询引擎是一个Master-Slave的架构，组成部分：&lt;/p>
&lt;ul>
&lt;li>一个Coordinator节点&lt;/li>
&lt;li>一个Discovery Server节点（通常内嵌于Coordinator节点中）&lt;/li>
&lt;li>多个Worker节点组成
Coordinator负责解析SQL语句、生成执行计划、分发执行任务给Worker节点执行。&lt;/li>
&lt;/ul>
&lt;p>Worker节点负责实际执行查询任务。Worker节点启动后向Discovery Server服务注册，Coordinator从Discovery Server获得可以正常工作的Worker节点。如果配置了Hive Connector，需要配置一个Hive MetaStore服务为Presto提供Hive元信息，Worker节点与HDFS交互读取数据。&lt;/p>
&lt;h2 id="coordinator">Coordinator&lt;/h2>
&lt;p>协调器（Coordinator）是整个系统的中心节点，负责接收客户端请求、解析查询语句、编译执行计划、并发控制、任务调度、结果合并等。具体来说，协调器的职责包括以下几个方面：&lt;/p>
&lt;ol>
&lt;li>接收并解析查询请求：协调器负责接收客户端发送的SQL查询请求，并对请求进行解析，获取查询的元数据、查询语句等信息。&lt;/li>
&lt;li>编译执行计划：协调器根据查询语句、元数据等信息生成查询的执行计划，包括任务划分、任务依赖关系等。&lt;/li>
&lt;li>并发控制和任务调度：协调器负责控制查询的并发度和任务调度，根据查询的执行计划将任务分配给不同的工作节点执行。在任务分配时，协调器会考虑数据本地性、节点负载均衡等因素，尽可能地提高查询效率。&lt;/li>
&lt;li>监控和管理任务执行：协调器负责监控任务的执行情况，并根据任务执行情况进行调度和管理。如果某个任务失败或超时，协调器会重新分配任务或者取消查询。&lt;/li>
&lt;li>结果合并和返回：协调器负责将各个任务的执行结果进行合并，并将结果返回给客户端。&lt;/li>
&lt;/ol>
&lt;h2 id="worker">Worker&lt;/h2>
&lt;p>Worker是Presto集群中的工作节点，它们负责执行协调器分配的任务，处理查询请求并生成结果。Worker的主要职责包括以下几个方面：&lt;/p>
&lt;ol>
&lt;li>接收并处理任务：Worker从协调器接收任务，根据任务的要求从存储系统中获取数据并执行计算操作。&lt;/li>
&lt;li>执行计算任务：Worker将接收到的任务分解为小任务，并利用多个CPU核心和内存执行计算任务。在执行任务时，Worker会将数据读取到内存中，并使用Presto定义的内存数据结构进行计算。&lt;/li>
&lt;li>返回结果：Worker完成任务后，将结果返回给协调器，协调器会对结果进行汇总，最终生成查询结果并返回给客户端。&lt;/li>
&lt;li>资源管理：Worker需要负责管理自己的资源，包括CPU、内存和磁盘等。Worker需要监控自己的资源使用情况，以确保任务能够正确执行并不会消耗过多的资源。&lt;/li>
&lt;li>处理异常：如果任务执行过程中出现异常，Worker需要能够及时捕获并上报给协调器，同时清理异常的状态。
Worker是Presto集群中的核心节点，它们负责处理查询请求、执行计算任务并返回结果。Worker需要高效地利用资源并保证任务执行的正确性，从而提高Presto集群的性能和可靠性。&lt;/li>
&lt;/ol>
&lt;h1 id="模型">模型&lt;/h1>
&lt;h2 id="connector">Connector&lt;/h2>
&lt;p>Connector是一种抽象的数据源接口，用于连接不同的数据源，例如Hive、MySQL、PostgreSQL、Cassandra等。每个Connector实现了一组标准的接口，包括Metadata、Split、PageSource和RecordSet等，以便与Presto核心系统进行交互和协作。&lt;/p>
&lt;p>每种Connector都实现了Presto中标准的SPI接口，只要实现了Presto中标准的SPI接口，就可以轻易实现适合自己需求的Connector。&lt;/p>
&lt;ol>
&lt;li>Metadata接口：用于提供数据源的元数据信息，例如表和列的结构、数据类型、分区信息等。Metadata接口还提供了一些用于查询和筛选数据的方法，例如getTables、getColumns、getPartitionKeys、getPartitions等。&lt;/li>
&lt;li>Split接口：用于将数据源划分成多个数据块（Split），每个Split包含一部分数据和相关的元数据信息。Split接口提供了一些用于生成和管理Split的方法，例如getSplits、getSplit、isRemotelyAccessible等。&lt;/li>
&lt;li>PageSource接口：用于读取Split中的数据，并返回一个或多个数据页（Page）。PageSource接口提供了一些用于读取数据和处理异常的方法，例如getReader、getPosition、isFinished等。&lt;/li>
&lt;li>RecordSet接口：用于将数据页（Page）转换为行记录（Record），并提供一些用于访问和处理记录的方法，例如getColumnTypes、nextBatch、getRowCount等。
通过Connector接口，Presto可以访问和处理不同的数据源，支持跨数据源的查询和联合查询。Connector还提供了一些可插拔的机制，例如分区发现、列注释、列别名等，以提高查询性能和效率。&lt;/li>
&lt;/ol>
&lt;h2 id="catalog">Catalog&lt;/h2>
&lt;p>Catalog是一个抽象的概念，表示数据源的集合，可以是一个数据库、一个Hive实例、一个S3存储桶等等。Catalog包含了一组Schema（模式），每个Schema表示一个数据库或者命名空间，包含了一组Table（表），每个Table表示一个数据表。Catalog不存储数据，它仅仅是数据源的描述信息，例如表的结构、分区信息等。Presto的Catalog提供了一些用于管理和查询数据源的方法，例如创建和删除Catalog、列出Catalog、切换Catalog、列出Schema、切换Schema、列出Table、描述Table等。&lt;/p>
&lt;p>Presto中的Catalog，相当于数据库的一个实例。在Presto的配置文件中，以.properties结尾，每个properties就对应了Presto中的一个Catalog。&lt;/p>
&lt;h2 id="schema">Schema&lt;/h2>
&lt;p>Schema是一个抽象的概念，表示数据库或者命名空间，用于组织和管理表。每个Schema包含了一组Table（表），每个Table表示一个数据表。Schema的作用类似于关系型数据库中的数据库，可以帮助用户组织和管理表，并提供更好的隔离和权限控制。一个Catalog中可以有多个Schema。&lt;/p>
&lt;h2 id="table">Table&lt;/h2>
&lt;p>Table表示一个数据表，包含了表的结构和数据。每个Table属于一个特定的Schema（数据库或命名空间），可以由Catalog（数据源）中的Schema映射而来，也可以由用户在Presto中创建。&lt;/p>
&lt;p>Presto支持的Table类型包括：&lt;/p>
&lt;ol>
&lt;li>Native Table：在Presto中创建的Table，通常是一些基于文件、Hive、关系型数据库等数据源的虚拟表。&lt;/li>
&lt;li>External Table：在Presto中定义的对外部数据源的引用，例如S3存储桶、HDFS文件系统等。&lt;/li>
&lt;li>System Table：Presto内置的一些元数据表，用于获取关于集群、任务、查询等运行时信息。
Presto的Table可以使用SQL语句进行查询、过滤、聚合等操作，支持标准的SQL查询语法，例如SELECT、FROM、WHERE、GROUP BY、HAVING、JOIN等关键字。Presto还支持复杂的查询操作，例如嵌套查询、子查询、多级连接、窗口函数等。&lt;/li>
&lt;/ol>
&lt;p>Presto的Table可以使用各种文件格式存储数据，包括文本文件（CSV、JSON、XML等）、列式存储（Parquet、ORC等）、序列化存储（Avro、Thrift等）等。Presto还支持对Table进行分区和桶（bucket）操作，以便于提高查询性能和优化数据访问。&lt;/p>
&lt;h1 id="执行过程">执行过程&lt;/h1>
&lt;h2 id="主要概念">主要概念&lt;/h2>
&lt;h3 id="page">Page&lt;/h3>
&lt;p>Presto中最小数据处理单元是一个Page对象，Page通常是列存储格式的，包含若干行数据。通过Page将数据从一个节点传递到另一个节点。&lt;/p>
&lt;p>Page对象的数据结构如下图所示。一个Page对象包含多个Block对象，每个Block对象是一个字节数组，存储一个字段的若干行。多个Block横切的一行是真实的一行数据。一个Page最大1MB，最多16*1024行数据。&lt;/p>
&lt;p>&lt;img src="../imgs/pres_intro_230312_2.png" alt="pres_intro_230312_2.png">&lt;/p>
&lt;h3 id="stage">Stage&lt;/h3>
&lt;p>Stage是Presto查询计划中的一个执行阶段，可以看作是一个有向无环图(DAG)中的一个节点。每个Stage都是由一个或多个Task组成，每个Task处理一个或多个Split。Stage的主要职责是将查询计划划分为多个阶段并协调Task之间的数据传输和计算。&lt;/p>
&lt;h3 id="task">Task&lt;/h3>
&lt;p>Task是Stage的子节点，是Presto中的计算任务单元。每个Task都处理一个或多个Split，它们可以在不同的Worker上运行，以利用并行计算来加速查询。Task通过Page进行数据交换，将输入数据处理为输出数据，并将输出传递给下一个Task或Stage。&lt;/p>
&lt;h3 id="remotetask">RemoteTask&lt;/h3>
&lt;p>表示在分布式计算中的一个计算任务。与Task的功能类似，但它在集群中的另一个节点上执行计算。Presto通过协调器将数据分发到所有的节点，然后在每个节点上运行RemoteTask，最后将计算结果聚合到协调器上。&lt;/p>
&lt;h3 id="split">Split&lt;/h3>
&lt;p>Split是数据的最小单元，表示数据在存储系统中的一个分片。Presto将查询分解成多个Split，并将它们分配给不同的Task来处理。Split可以是文件、表、分区或其他数据集合。&lt;/p>
&lt;h3 id="sqlstageexecution">SqlStageExecution&lt;/h3>
&lt;p>表示查询执行的阶段的对象，它负责将查询拆分为多个Task，并跟踪这些Task的状态和结果。当SqlStageExecution对象创建时，它会通过ConnectorManager获取查询数据源的元数据信息，然后将查询分解为多个Stage。&lt;/p>
&lt;h3 id="operator">Operator&lt;/h3>
&lt;p>每个Operator表示查询计算的一个操作，它执行特定的计算逻辑。在一个Task中，可能包含多个Operator，这些Operator可以共享输入数据，从而减少数据传输和复制的开销。当一个Operator完成计算时，它将结果写入输出Page。&lt;/p>
&lt;h2 id="查询计划">查询计划&lt;/h2>
&lt;p>查询计划是指将查询语句转换为一系列查询操作和数据流的执行计划。查询计划由Presto的优化器生成，根据查询的语义和查询数据的结构选择最优的执行计划。&lt;/p>
&lt;p>Presto查询计划的主要组成部分如下：&lt;/p>
&lt;ol>
&lt;li>Source：Source表示查询数据的来源，可以是表、视图、函数等。在查询计划中，每个Source都对应一个SourceNode。&lt;/li>
&lt;li>Filter：Filter表示查询条件，它通常用于过滤出符合查询条件的数据。在查询计划中，Filter通常表示为一个FilterNode。&lt;/li>
&lt;li>Project：Project表示查询的投影操作，它用于选择查询中需要的列。在查询计划中，Project通常表示为一个ProjectNode。&lt;/li>
&lt;li>Join：Join表示查询中的连接操作，它将两个或多个数据源合并在一起。在查询计划中，Join通常表示为一个JoinNode。&lt;/li>
&lt;li>Group By：Group By表示查询中的聚合操作，它将数据按照指定的列进行分组，并计算每个组的聚合值。在查询计划中，Group By通常表示为一个AggregationNode。&lt;/li>
&lt;li>Order By：OrderBy表示查询中的排序操作，它将查询结果按照指定的列进行排序。在查询计划中，OrderBy通常表示为一个SortNode。
在Presto中，查询计划是一个有向无环图（DAG），每个节点表示一个查询操作，每个边表示数据流的传递。在执行查询时，Presto将查询计划转换为一组Task，每个Task对应查询计划中的一个节点。Task可以在多个节点之间并行执行，以利用分布式系统中的多核和多节点资源，提高查询性能。&lt;/li>
&lt;/ol>
&lt;h2 id="执行流程">执行流程&lt;/h2>
&lt;ol>
&lt;li>解析和编译查询语句：Presto接收到一个查询请求后，首先会对查询语句进行语法分析和语义分析，并生成执行计划。&lt;/li>
&lt;li>执行查询计划：Presto的执行计划是一个有向无环图（DAG），其中包含了各个任务（Task）和它们之间的依赖关系。Presto会根据执行计划中的任务划分为不同的阶段（Stage），并按照阶段依赖关系的拓扑顺序执行任务。&lt;/li>
&lt;li>并行执行任务：Presto支持多节点、多线程的并行执行任务。在每个节点上，Presto会启动一个或多个Executor线程，每个Executor线程负责执行一个或多个任务。Presto还支持数据本地化（Data Locality）优化，尽可能地将任务分配给与数据在同一节点或同一机架的Executor线程。&lt;/li>
&lt;li>合并结果：当所有任务执行完毕后，Presto会将各个任务的结果进行合并，并返回给客户端。在合并结果时，Presto会进行优化，例如对于聚合查询（例如SUM、AVG、MAX等），Presto会在每个节点上进行局部聚合（Partial Aggregation），并在最后一个任务上进行全局聚合（Final Aggregation）。&lt;/li>
&lt;li>清理资源：Presto在执行查询后会释放占用的资源，包括内存、CPU、网络等。Presto还支持查询取消（Cancellation）和查询超时（Timeout）机制，以保证查询不会长时间占用集群资源。
在Presto中，数据是以Page的形式在节点之间传输。Page是Presto中的数据块，它是由一系列的行（Row）组成的，行中的每个字段都被序列化为一个字节数组。在任务执行过程中，Presto会将Page从一个节点传输到另一个节点，以便在不同节点之间共享数据。因为Page是Presto中最基本的数据单位，所以Presto的很多内部实现都是以Page为基础的。&lt;/li>
&lt;/ol>
&lt;p>Presto内存并行计算的过程可以概括为将查询分解为多个Stage，每个Stage包含多个Task，每个Task包含一个或多个Operator。Task会被分配给多个Worker并行执行，Worker之间通过网络传输数据和交换结果，最终返回给协调器的结果会被整合成最终的查询结果。在计算过程中，Presto使用内存中的Page传递数据，这种分布式计算模型可以有效提高计算性能和并发能力。&lt;/p>
&lt;h1 id="优化器">优化器&lt;/h1>
&lt;h2 id="优化策略">优化策略&lt;/h2>
&lt;p>优化器主要负责将查询计划转换为一组高效的执行计划，以便在分布式系统中高效地执行查询。Presto优化器的主要优化策略如下：&lt;/p>
&lt;ol>
&lt;li>查询重写：Presto优化器会对查询进行重写，以利用索引、分区和其他优化手段来加速查询。重写后的查询可以更好地利用存储系统和网络带宽资源，从而提高查询性能。&lt;/li>
&lt;li>消除冗余计算：Presto会分析查询计划，消除冗余计算，避免在计算过程中重复处理相同的数据。这样可以减少计算量和数据传输量，提高查询效率。&lt;/li>
&lt;li>选择合适的Join算法：Presto优化器会根据查询计划中Join的大小、数据分布和数据类型等因素，选择合适的Join算法，包括Broadcast Join、Hash Join和Sort Merge Join等。&lt;/li>
&lt;li>分区裁剪：对于分区表，Presto优化器会分析查询条件，并根据条件过滤掉不需要的分区，避免在查询过程中扫描所有分区，从而提高查询性能。&lt;/li>
&lt;li>并行查询：Presto优化器会将查询计划分解成多个Stage和Task，以利用分布式系统中的多核和多节点资源，并行执行查询，提高查询效率。&lt;/li>
&lt;li>动态编译：Presto优化器支持动态编译，即将查询计划转换为可执行的机器代码，并将其缓存起来，以便下次查询时可以直接使用，避免重复编译和优化，从而提高查询性能。
通过这些优化策略的应用，Presto可以实现高效、可扩展的分布式查询处理，适用于大规模数据集的查询分析场景。&lt;/li>
&lt;/ol>
&lt;h2 id="主要优化点">主要优化点&lt;/h2>
&lt;p>Presto作为一个交互式的查询引擎，如何实现低延时查询，一些传统的SQL优化原理，主要是下面几个方面：&lt;/p>
&lt;ol>
&lt;li>
&lt;p>分布式查询：Presto使用分布式架构进行查询，可以将查询任务分配到集群中的多个节点上并行执行，从而提高查询的并发性和速度。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>内存计算：Presto使用内存计算来处理数据，可以避免I/O瓶颈，提高计算速度。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>压缩和编码：Presto使用高效的压缩和编码算法，可以减少数据传输的开销，提高查询的速度。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>灵活的优化器：Presto具有灵活的查询优化器，可以自动优化查询计划以最大化查询性能。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>支持多种数据源：Presto可以查询多种数据源，包括Hadoop、Cassandra、MySQL等，可以无缝访问不同数据源的数据，提高查询效率。
具体有以下几个点：&lt;/p>
&lt;/li>
&lt;li>
&lt;p>完全基于内存的并行计算&lt;/p>
&lt;/li>
&lt;li>
&lt;p>流水线执行&lt;/p>
&lt;/li>
&lt;li>
&lt;p>本地化计算&lt;/p>
&lt;/li>
&lt;li>
&lt;p>动态编译执行计划&lt;/p>
&lt;/li>
&lt;li>
&lt;p>优化使用内存和数据结构&lt;/p>
&lt;/li>
&lt;li>
&lt;p>近似查询&lt;/p>
&lt;/li>
&lt;li>
&lt;p>GC控制&lt;/p>
&lt;/li>
&lt;/ol>
&lt;h2 id="流水线">流水线&lt;/h2>
&lt;h3 id="节点内部流水线计算">节点内部流水线计算&lt;/h3>
&lt;p>Presto的查询处理流程是通过一系列的节点内部流水线计算来实现的，以下是Presto节点内部流水线计算的基本过程：&lt;/p>
&lt;ol>
&lt;li>分割数据：Presto通过切分查询任务，将数据分割成多个小块，每个小块包含了一个或多个数据分片。这些小块可以在不同的节点上并行处理。&lt;/li>
&lt;li>执行扫描：每个节点都会读取一些数据分片，并执行扫描操作，例如过滤、排序和聚合等。这些操作通常使用流水线计算模型，每个操作的结果会被传递到下一个操作中进行处理。&lt;/li>
&lt;li>执行计算：扫描操作的结果会被传递到计算操作中，例如计算表达式、聚合函数和连接操作等。这些操作也通常使用流水线计算模型，每个操作的结果会被传递到下一个操作中进行处理。&lt;/li>
&lt;li>执行输出：最后，节点会将计算操作的结果输出到客户端或下一个节点中进行处理。输出操作通常包括将数据序列化、压缩和发送等。
Presto节点内部流水线计算是高效的，利用了现代计算机硬件的并行性和内存计算能力，可以有效地处理大规模数据集，提高查询性能。&lt;/li>
&lt;/ol>
&lt;h3 id="节点间流水线计算">节点间流水线计算&lt;/h3>
&lt;p>Presto是一个分布式查询引擎，可以将查询任务分配到集群中的多个节点上并行执行，节点之间的流水线计算是Presto实现分布式查询的核心。&lt;/p>
&lt;p>Presto的节点之间流水线计算的基本过程如下：&lt;/p>
&lt;ol>
&lt;li>数据分片：查询任务的数据会被分割成多个小块，并分配给集群中的不同节点。每个节点会处理自己负责的数据分片，然后将结果传递给下一个节点。&lt;/li>
&lt;li>执行扫描：每个节点会读取自己负责的数据分片，并执行扫描操作，例如过滤、排序和聚合等。这些操作通常使用流水线计算模型，每个操作的结果会被传递到下一个节点中进行处理。&lt;/li>
&lt;li>数据重分片：为了确保节点之间的负载均衡，Presto会对数据进行重新分片，以便将数据均匀地分配给集群中的不同节点。&lt;/li>
&lt;li>执行计算：重分片后，每个节点会执行计算操作，例如计算表达式、聚合函数和连接操作等。这些操作也通常使用流水线计算模型，每个操作的结果会被传递到下一个节点中进行处理。&lt;/li>
&lt;li>执行输出：最后，节点会将计算操作的结果输出到客户端或下一个节点中进行处理。输出操作通常包括将数据序列化、压缩和发送等。
Presto的节点之间流水线计算是分布式的，需要高效地处理节点之间的数据传输和通信，以实现高性能的查询。Presto使用了一系列高效的网络传输协议和数据格式，以最小化数据传输的开销，并通过智能的节点调度算法动态调整节点的负载，以确保查询的性能和可靠性。&lt;/li>
&lt;/ol>
&lt;h2 id="本地化计算">本地化计算&lt;/h2>
&lt;p>Presto的本地化计算指的是在一个节点上执行查询任务，而不需要将数据发送到其他节点进行处理。这种本地化计算可以有效地减少数据传输和通信的开销，提高查询的性能和效率。&lt;/p>
&lt;p>Presto的本地化计算主要有以下两种方式：&lt;/p>
&lt;ol>
&lt;li>全部本地化：当查询的数据全部位于一个节点上时，Presto会将查询任务分配到该节点进行处理，这种方式可以最大程度地减少数据传输和通信的开销，提高查询性能。&lt;/li>
&lt;li>部分本地化：当查询的数据分布在多个节点上时，Presto会将查询任务分成多个子任务，其中一部分子任务会分配到本地节点进行处理，另一部分子任务会发送到其他节点进行处理。这种方式可以在尽可能减少数据传输和通信开销的同时，充分利用集群中所有节点的计算资源，提高查询效率。
Presto的本地化计算需要具备一定的硬件和软件支持，例如高速网络和内存计算等。此外，Presto还提供了一系列高级优化功能，例如动态过滤、预读取和预聚合等，可以进一步提高本地化计算的性能和效率。&lt;/li>
&lt;/ol>
&lt;p>Presto在选择Source任务计算节点时，对于每一个Split，会按照以下策略选择一些minCandidates：&lt;/p>
&lt;ol>
&lt;li>
&lt;p>优先选择与Split同一个Host的Worker节点&lt;/p>
&lt;/li>
&lt;li>
&lt;p>如果节点不够优先选择与Split同一个Rack的Worker节点&lt;/p>
&lt;/li>
&lt;li>
&lt;p>如果节点还不够随机选择其他Rack的节点
对于所有Candidate节点，选择assignedSplits最少的节点。除此之外，会按照以下策略优先选择选择节点：&lt;/p>
&lt;/li>
&lt;li>
&lt;p>负载均衡：调度器会根据每个节点的负载情况来选择计算节点。负载越低的节点，越有可能被选为计算节点。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>资源利用率：调度器会计算每个节点的资源利用率，包括CPU、内存和磁盘等资源的使用情况。资源利用率越高的节点，越不可能被选为计算节点。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>数据位置：如果Split的数据位于某个节点上，那么该节点很可能会被选为计算节点，以避免不必要的数据传输。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>处理时间：调度器会根据Split的大小和节点的处理能力，计算每个节点处理该Split所需的时间。处理时间越短的节点，越有可能被选为计算节点。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>网络延迟和带宽：调度器会考虑网络延迟和数据传输带宽等因素，以确保数据传输和通信的效率和稳定性。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>容错能力：调度器还会考虑节点之间的负载均衡和容错能力等因素，以确保整个查询任务的性能和可靠性。例如，调度器可能会选择多个计算节点来处理同一个Split，以提高计算性能和容错能力。
Presto的调度器是动态的，会根据集群的负载和资源情况等因素实时调整计算节点的选择策略，以最大程度地提高查询的性能和效率。&lt;/p>
&lt;/li>
&lt;/ol>
&lt;h2 id="动态编译执行计划">动态编译执行计划&lt;/h2>
&lt;p>Presto会将执行计划中的ScanFilterAndProjectOperator和FilterAndProjectOperator动态编译为字节码（Bytecode），并交给JIT去编译为本地机器码（Native Code）。Presto也使用了Google Guava提供的LoadingCache缓存生成的Byte Code。Presto将生成的本地机器码加载到内存中，并使用它来执行操作符。&lt;/p>
&lt;p>Presto采用了延迟编译的策略，即只有在需要执行操作符时才会进行编译。这种策略可以减少不必要的编译开销，并提高查询的性能。&lt;/p>
&lt;h2 id="优化内存数据结构">优化内存数据结构&lt;/h2>
&lt;p>使用 Slice 进行内存操作，Slice使用Unsafe#copyMemory实现了高效的内存拷贝。Slice仓库：&lt;a href="https://github.com/airlift/slice">https://github.com/airlift/slice&lt;/a>。写性能提高20%-30%。（&lt;a href="https://engineering.fb.com/2014/04/10/core-data/scaling-the-facebook-data-warehouse-to-300-pb/">https://engineering.fb.com/2014/04/10/core-data/scaling-the-facebook-data-warehouse-to-300-pb/&lt;/a>）&lt;/p>
&lt;h2 id="近似查询算法">近似查询算法&lt;/h2>
&lt;p>为了加快avg、count distinct、percentile等聚合函数的查询速度，与BlinkDB合作引入了一些近似查询函数approx_avg、approx_distinct、approx_percentile。approx_distinct使用HyperLogLog Counting算法实现。&lt;/p>
&lt;h2 id="gc控制">GC控制&lt;/h2>
&lt;p>Presto团队在使用hotspot java7时发现了一个JIT的BUG，当代码缓存快要达到上限时，JIT可能会停止工作，从而无法将使用频率高的代码动态编译为native代码。&lt;/p>
&lt;p>Presto团队使用了一个比较Hack的方法去解决这个问题，增加一个线程在代码缓存达到70%以上时进行显式GC，使得已经加载的Class从perm中移除，避免JIT无法正常工作的BUG。&lt;/p>
&lt;h1 id="reference">Reference&lt;/h1>
&lt;p>&lt;a href="https://github.com/airlift/slice">https://github.com/airlift/slice&lt;/a>&lt;/p>
&lt;p>&lt;a href="https://engineering.fb.com/2014/04/10/core-data/scaling-the-facebook-data-warehouse-to-300-pb/">https://engineering.fb.com/2014/04/10/core-data/scaling-the-facebook-data-warehouse-to-300-pb/&lt;/a>&lt;/p>
&lt;p>&lt;a href="https://tech.meituan.com/2014/06/16/presto.html">Presto实现原理和美团的使用实践&lt;/a>&lt;/p></description></item></channel></rss>