<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Herbdocs – ES</title><link>/categories/ES/</link><description>Recent content in ES on Herbdocs</description><generator>Hugo -- gohugo.io</generator><atom:link href="/categories/ES/index.xml" rel="self" type="application/rss+xml"/><item><title>Docs: 深入理解ES-01简介</title><link>/docs/44.%E6%90%9C%E7%B4%A2/%E6%B7%B1%E5%85%A5%E7%90%86%E8%A7%A3ElasticSearch/%E6%B7%B1%E5%85%A5%E7%90%86%E8%A7%A3ES-01%E7%AE%80%E4%BB%8B/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/docs/44.%E6%90%9C%E7%B4%A2/%E6%B7%B1%E5%85%A5%E7%90%86%E8%A7%A3ElasticSearch/%E6%B7%B1%E5%85%A5%E7%90%86%E8%A7%A3ES-01%E7%AE%80%E4%BB%8B/</guid><description>
&lt;h2 id="apache-lucene简介">Apache Lucene简介&lt;/h2>
&lt;h3 id="熟悉lucene">熟悉Lucene&lt;/h3>
&lt;p>ES的创始人使用 Apache Lucene 而不是从头开发全文检索库？可能是因为 Lucene 的以下特点：成熟、高性能、可扩展、轻量级以及强大的功能。&lt;/p>
&lt;p>Lucene 内核可以创建为独立的 Java 库文件并且不依赖第三方代码，用户可以使用它提供的各种所见即所得的全文检索功能进行索引和搜索操作。&lt;/p>
&lt;p>Lucene的许多扩展提供了各种各样的功能，如多语言处理、拼写检查、高亮显示等。&lt;/p>
&lt;h3 id="lucene的总体架构">Lucene的总体架构&lt;/h3>
&lt;p>Lucene 的架构：&lt;/p>
&lt;p>文档（document）：索引和搜索的主要数据载体，它包含一个或多个字段，存放将要写入索引或将从索引搜索出来的数据。&lt;/p>
&lt;p>字段（field）：文档的一个片段，它包括两个部分：字段的名称和内容。&lt;/p>
&lt;p>词项（term）：搜索时的一个单位，代表文本中的某个词。&lt;/p>
&lt;p>词条（token）：词项在字段中的一次出现，包括词项的文本、开始和结束的位移以及类型。&lt;/p>
&lt;p>Lucene 将写入索引的所有信息组织成一种名为倒排索引（inverted index）的结构。该结构是一种将词项映射到文档的数据结构，其工作方式与传统的关系数据库不同，可以认为倒排索引时面向词项而不是面向文档的。&lt;/p>
&lt;p>索引中不仅保存词项和在文档中出现的次数，还会存储其他信息，如词向量（为单个字段创建的小索引，存储该字段中所有的词条）、各字段的原始信息、文档删除标记等。&lt;/p>
&lt;p>每个索引由多个段（segment）组成，每个段只会被创建一次但会被查询多次。索引期间，段经创建就不会再被修改。例如文档被删除后，删除信息被单独保存在一个文件中，而段本身并没有修改。&lt;/p>
&lt;p>多个段汇在一起叫做段合并（segments merge），要么强制执行要么由 Lucene 的内在机制决定在某个时刻执行，合并后段的数量更少但更大。段合并非常消耗IO且会清除掉不再使用的信息，如被删除的文档。对于容纳相同数据的索引，段的数量较少时，搜索速度更快。&lt;/p>
&lt;h3 id="分析你的数据">分析你的数据&lt;/h3>
&lt;p>查询串转换为用于搜索的词项的过程称为分析（analysis）&lt;/p>
&lt;p>文本分析由分析器来执行，而分析器由分词器（tokenizer）、过滤器（filter）和字符映射器组成（character mapper）。&lt;/p>
&lt;p>分词器将文本切割成词条，其中携带各种额外信息的词项，包括：词项在原始文本中的位置、词项的长度。分词器的工作成果成为词条流，因为这些词条一个一个推送给过滤器处理。&lt;/p>
&lt;p>过滤器的数额可选（0个、1个或多个），用于处理词条流中的词条。它可以移除、修改甚至创造新的词条。过滤器的一些例子：&lt;/p>
&lt;ul>
&lt;li>小写过滤器&lt;/li>
&lt;li>ASCII 过滤器：移除词条中所有非 ASCII 字符&lt;/li>
&lt;li>同义词过滤器&lt;/li>
&lt;li>多语言词干还原过滤器：词干还原，将词条的文本部分规约到其词根形式
&lt;strong>索引与查询&lt;/strong>&lt;/li>
&lt;/ul>
&lt;p>不同的字段可以不同的分析器，如 title 和 description。&lt;/p>
&lt;p>检索时如果使用了某个查询分析器（query parser），可以进行查询分析也可以不。如前缀查询（prefix query）不会被分析，而匹配查询（match query）会被分析。&lt;/p>
&lt;h3 id="lucene查询语言">Lucene查询语言&lt;/h3>
&lt;p>ES 提供的一些查询类型（query type）支持 Lucene 的查询解析语法。&lt;/p>
&lt;h4 id="理解基本概念">&lt;strong>理解基本概念&lt;/strong>&lt;/h4>
&lt;p>Lucene 中一个查询通常被分割为词项与操作符，词项可以是单个词也可以是一个短语。&lt;/p>
&lt;p>查询汇总也可以包含布尔操作符，用于连接多个词项，使之构成从句（clause）。有以下布尔操作符：&lt;/p>
&lt;ul>
&lt;li>AND&lt;/li>
&lt;li>OR&lt;/li>
&lt;li>NOT&lt;/li>
&lt;li>+：表示只有包含 + 操作符后面词项的文档才会被认为是与从句匹配&lt;/li>
&lt;li>-：表示与从句匹配的文档不能出现 - 操作符后的词项
当然还可以使用圆括号对从句进行分组，以构造更复杂的从句。&lt;/li>
&lt;/ul>
&lt;h4 id="在字段中查询">在字段中查询&lt;/h4>
&lt;p>Lucene 中所有数据都存储在字段（field）中，而字段又是文档的组成单位。对某个字段查询的语法：字段名称加上冒号以及将要在该字段中执行查询的从句。如：&lt;/p>
&lt;p>title 字段中包含词项 elasticsearch 的文档：&lt;/p>
&lt;p>title: elasticsearch&lt;/p>
&lt;p>title 字段中同时包含词项 elasticsearch 和短语 mastering book 的文档：&lt;/p>
&lt;p>title: (elasticsearch +&amp;quot;mastering book&amp;quot;)&lt;/p>
&lt;p>当然也可以写成下面这种形式：&lt;/p>
&lt;p>+tile:ealsticsearch +titile:&amp;quot;mastering book&amp;quot;&lt;/p>
&lt;h4 id="词项修饰符">词项修饰符&lt;/h4>
&lt;p>除了使用简单词项和从句的常规字段查询意外，Lucene 还允许用户使用修饰符（modifier）修改传入查询对象的词项。最常见的修饰符就是通配符（wildcard）。Lucene 支持两种通配符：? 和 *。（匹配任意一个字符 和 匹配多个字符）。&lt;/p>
&lt;blockquote>
&lt;p>注意：处于对性能的考虑，通配符不能作为词项的第一个字符出现&lt;/p>
&lt;/blockquote>
&lt;p>除通配符之外，Lucene 还支持模糊（fuzzy and proximity）查询，通过使用 ~ 字符以及一个紧随其后的整数值（表示近似词项与原始词项的最大编辑距离）。如 writer~2 包含匹配词项 writer 和 writers 的文档。&lt;/p>
&lt;p>当修饰符 ~ 用于短语时，也是同理。如 title:&amp;quot;mastering elasticsearch&amp;quot;~2，可以包含&amp;quot;mastering elasticsearch&amp;quot; 和 &amp;quot;mastering book elasticsearch&amp;quot;。&lt;/p>
&lt;p>使用 ^ 字符并赋以一个浮点数对词项加权（boosting），以提高该词项的重要程度。&lt;/p>
&lt;p>使用方括号和花括号来构建范围查询。如：price: [10.00 TO 15.00] 或 name: [Adam To Adria]。使用花括号则表示排除边界。&lt;/p>
&lt;h4 id="特殊字符处理">特殊字符处理&lt;/h4>
&lt;p>需要搜索某个特殊字符（包含+、-、&amp;amp;&amp;amp;、||、!、(、)、{}、[]、^、&amp;quot;、~、*、?、:、\、/），先试用反斜杠对这些特殊字符进行转义。&lt;/p>
&lt;h2 id="elasticsearch简介">ElasticSearch简介&lt;/h2>
&lt;p>ElasticSearch 是一个可用于构建搜索应用的成品软件。它最早是由 Shay Banon 创建并与2010年2月发布。之后的几年 ElasticSearch 迅速流行开来，成为商业解决方案之外且开源的一个重要选择，也是下载量最多的开源软件之一，每月下载量超过20万次。&lt;/p>
&lt;h3 id="基本概念">基本概念&lt;/h3>
&lt;h4 id="索引">索引&lt;/h4>
&lt;p>数据存储在一个或多个索引（index）中，类似 SQL 领域术语的数据库。&lt;/p>
&lt;blockquote>
&lt;p>注意：ElasticSearch 中的索引可能有一个或多个 Lucene 索引构成，具体细节有 ElasticSearch 的索引分片（shard）、复制（replica）机制及其配置决定。&lt;/p>
&lt;/blockquote>
&lt;h4 id="文档">文档&lt;/h4>
&lt;p>文档（document）是 ElasticSearch 中的重要实体（对 Luecene 来说也是如此）。文档由字段构成，每个字段有它的字段名以及一个或多个字段值（这种情况该字段被称为多值的，即文档中有多个同名字段）。文档之间可能有各自不同的字段集合，且文档并没有固定的模式或强制的结构（这些规则也适用于 Lucene 文档）。从客户端的角度来看文档是一个 JSON 对象。&lt;/p>
&lt;h4 id="映射">映射&lt;/h4>
&lt;p>所有文档在写入索引前都需要先进行分析。用户可以设置一些参数，来决定如何将输入文本分割成词条。ES 也提供了各种特性，如排序时所需的字段内容信息。这就是映射（mapping）扮演的角色，存储所有这种元信息。虽然 ES 能根据字段值自动检测字段的类型，但为了避免一些不可预期的意外，还是用户自行配置映射。&lt;/p>
&lt;h4 id="类型">类型&lt;/h4>
&lt;p>每个文档都有与之对应的类型（type）定义。这允许用户在一个索引中存储多种文档类型，并为不同文档类型提供不同的映射。&lt;/p>
&lt;h4 id="节点">节点&lt;/h4>
&lt;p>单个 ES 服务实例成为节点（node）。&lt;/p>
&lt;h4 id="集群">集群&lt;/h4>
&lt;p>当数据量或查询压力超过单机负载时，需要多个节点来协同处理，所有这些节点组成的系统称为集群（cluster）。集群也是无间断提供服务的一种解决方案，即便在某些节点因为宕机或执行管理任务（如升级）不可用时。ES 几乎无缝集成了集群功能。&lt;/p>
&lt;h4 id="分片">分片&lt;/h4>
&lt;p>集群允许系统存储的数据总量超过单机容量，为了满足这个需求，ES 将数据散步到多个物理 Lucene 索引上。这些 Lucene 索引称为分片（shard），而散步这些分片的过程叫做分片处理（sharding）。ES 会自动完成分片处理，并且让这些分片呈现出一个大索引的样子。&lt;/p>
&lt;blockquote>
&lt;p>ES 本身自动进行分片处理外，用户为具体的应用进行参数调优也是直观重要的，因为分片的数量在索引创建时就已经配置好，而且之后无法改变，至少目前的版本是这样的。&lt;/p>
&lt;/blockquote>
&lt;h4 id="副本">副本&lt;/h4>
&lt;p>分片处理允许用户向 ES 集群推送超过单机容量的数据。副本（replica）则解决了访问压力过大时单机无法处理所有请求的问题。即wield每个分片创建冗余的副本，处理查询时可以把这些副本用作最初的主分片（primary shard）。节点宕机 ES 可以使用其副本，不会造成数据丢失，且支持任意时间点添加或移除副本。&lt;/p>
&lt;h4 id="网关">网关&lt;/h4>
&lt;p>ES 工作过程中，集群状态、索引设置的各种信息都会被收集起来，并在网关（gateway）中被持久化。&lt;/p>
&lt;h3 id="架构背后关键概念">架构背后关键概念&lt;/h3>
&lt;p>从架构的角度出发，ES 具有下面这些主要特征：&lt;/p>
&lt;ul>
&lt;li>合理的默认配置，使得用户简单安装后能直接使用而不需要任何额外的调试，包括内置的发现（如字段类型检测）和自动配置功能。&lt;/li>
&lt;li>默认的分布式工作模式。每个节点总是假定自己是某个集群的一部分或将是某个集群的一部分，一旦工作启动节点便会加入某个集群。&lt;/li>
&lt;li>对等架构（P2P）可以避免单点故障（SPOF）。节点会自动连接到集群中的其他节点，进行相互的数据交换和监控操作。包括索引分片的自动复制。&lt;/li>
&lt;li>易于向集群扩充新节点，不论是从数据容量的角度还是数量角度。&lt;/li>
&lt;li>没有对索引中的数据结构强加任何限制，从而允许用户调整现有的数据模型。ES 支持在一个索引中存在多种数据类型，并允许用户调整业务模型，包括处理文档之间的关联（尽管这种功能非常有限）。&lt;/li>
&lt;li>准实时（Near Real Time，NRT）搜索和版本同步（versioning）。因为分布式特性，查询延迟和节点之间临时的数据不同步是难以避免的。ES 尝试消除这些问题并且提供额外的机制用于版本同步。&lt;/li>
&lt;/ul>
&lt;h3 id="工作流程">工作流程&lt;/h3>
&lt;h4 id="启动过程">启动过程&lt;/h4>
&lt;p>节点启动时，使用广播技术（也可配置为单播）发现统一集群中的其它节点（配置集群名称）并与之连接。&lt;/p>
&lt;p>&lt;img src="../imgs/20221221_es_01_1.png" alt="20221221_es_01_1.png">&lt;/p>
&lt;p>集群中会有一个节点被选为管理节点（master node）。该节点负责集群的状态管理以及在集群拓扑变化时做出反应，分发索引分片至集群的相应节点上。&lt;/p>
&lt;blockquote>
&lt;p>从用户角度来看，管理节点并不比其它节点重要，这与其它某些分布式系统不同（如数据库）。实际上，不需要知道哪些是管理节点，所有操作可以发送至任意接地那，ES 内部会自行处理。（ES 是基于对等架构的）。&lt;/p>
&lt;/blockquote>
&lt;p>管理节点读取集群的状态信息，并在必要时进行恢复处理。该阶段管理节点会检查所有索引分片并决定哪些分片将用于主分片。然后集群进入黄色状态。&lt;/p>
&lt;p>这意味集群可以执行查询，但系统的吞吐量以及各种可能的状态未知（可以简单理解为主分片分配出去，副本没有），接下来寻找冗余的分片并作用副本。若某个主分片的副本数过少，管理节点将决定基于某个主分片创建分片和副本。一切顺利集群将进入绿色状态（即所有主分片和副本均已分配好）。&lt;/p>
&lt;h4 id="故障检测">故障检测&lt;/h4>
&lt;p>集群正常工作时，管理节点会监控所有可用节点检查是否正在工作。如果任何节点在预定义的超时时间内没有响应，则认为该节点已断开，然后开始启动错误处理过程。即在集群 - 分片之间重新做平衡。&lt;/p>
&lt;p>&lt;img src="../imgs/20221221_es_01_2.png" alt="20221221_es_01_2.png">&lt;/p>
&lt;h4 id="与es通信">与ES通信&lt;/h4>
&lt;p>ES 对外公开了一个设计精巧的API（基于REST），并在实践中能轻松整合到任何支持HTTP协议的系统中去。&lt;/p>
&lt;blockquote>
&lt;p>ES 内部也使用 Java API 进行节点间通信。&lt;/p>
&lt;/blockquote>
&lt;h4 id="索引数据">索引数据&lt;/h4>
&lt;p>ES 提供四种方式来创建索引。最简单的是使用索引API，允许用户发送一个文档至特定的索引。如使用 curl 工具（详见 &lt;a href="http://curl.haxx.se/">http://curl.haxx.se/&lt;/a> ）：&lt;/p>
&lt;style>
.td-content .highlight {
margin-top: 0.5rem;
margin-bottom: 0.5rem;
}
.code-collapse1 {
overflow-y: auto;
max-height: 500px;
overflow-x: auto;
max-width: 100%;
}
&lt;/style>
&lt;div class="code-collapse1">
&lt;div class="highlight">&lt;div style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">
&lt;table style="border-spacing:0;padding:0;margin:0;border:0;">&lt;tr>&lt;td style="vertical-align:top;padding:0;margin:0;border:0;">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>curl -XPUT http://localhost:9200/blog/article/1 -d &lt;span style="color:#c41a16">&amp;#39;{&amp;#34;title&amp;#34;: &amp;#34;New version of Elastic Search released!&amp;#34;, &amp;#34;content&amp;#34;: &amp;#34;...&amp;#34;, &amp;#34;tags&amp;#34;: [&amp;#34;announce&amp;#34;, &amp;#34;elaticsearch&amp;#34;, &amp;#34;release&amp;#34;]}&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;p>第二、三种方式允许用户通过 bulk API 或 UDP bulk API 一次性发送多个文档至集群。两者的区别在于网络连接方式（HTTP协议、UDP协议）。
第四种方式是使用插件发送数据，称为河流（river），河流运行在ES节点上，能够从外部系统获取数据。&lt;/p>
&lt;blockquote>
&lt;p>建所以操作只会发生在主分片上，而不是副本上。当一个索引请求发送至某节点时，如果该节点没有对应的主分片或者只有副本，那么会被转发到拥有正确的主分片的节点上。如下图所示：
&lt;img src="../imgs/20221221_es_01_3.png" alt="20221221_es_01_3.png">&lt;/p>
&lt;/blockquote>
&lt;h4 id="查询数据">查询数据&lt;/h4>
&lt;p>查询 API 占据了 ES API 的大部分内容。使用 DSL（基于JSON的可用于构建复杂查询的语言）：&lt;/p>
&lt;ul>
&lt;li>使用各种查询类型，包括：简单的词项查询、短语查询、范围查询、布尔查询、模糊查询、区间查询、通配符查询、空间查询等。&lt;/li>
&lt;li>组合简单查询构建复杂查询。&lt;/li>
&lt;li>文档过滤，不影响评分的前提下抛弃不满足特定查询条件的文档。&lt;/li>
&lt;li>查询与特定文档想死的文档。&lt;/li>
&lt;li>查询特定短语的查询建议和拼写检查。&lt;/li>
&lt;li>使用切面构建动态导航和计算各种统计量。&lt;/li>
&lt;li>使用预搜索（prospective search）并查找与指定文件匹配的query集合。
查询分为两个阶段：分散阶段（scatter phase）和合并阶段（gather phase）。分散阶段将 query 分发到包含相关文档的多个分片中执行查询，合并阶段则从众多分片中收集返回结果，然后进行合并、排序、后续处理，再返回给客户端。&lt;/li>
&lt;/ul>
&lt;p>&lt;img src="../imgs/20221221_es_01_4.png" alt="20221221_es_01_4.png">&lt;/p>
&lt;h4 id="索引配置">索引配置&lt;/h4>
&lt;p>ES 提供了自动索引配置以及发现识别文档字段类型和结构的功能。也提供了一些功能使得用户能手动配置，例如通过映射配置自定义的文档结构，或设置索引的分片和副本数，抑或定制文本分析过程等。&lt;/p>
&lt;h4 id="系统管理和监控">系统管理和监控&lt;/h4>
&lt;p>ES 中系统管理和监控相关的 API 允许用户改变集群的设置，如调节集群发现机制和索引放置策略等。且提供集群状态信息后每个节点、索引的统计信息。&lt;/p>
&lt;h2 id="小结">小结&lt;/h2>
&lt;p>本章介绍了 Apache Lucene 的一般架构，如工作原理、文本分析过程以及使用查询语言。此外还介绍了 ElasticSearch 的一些基本概念，如基本架构和内部通讯机制。&lt;/p></description></item><item><title>Docs: 深入理解ES-02查询DSL进阶</title><link>/docs/44.%E6%90%9C%E7%B4%A2/%E6%B7%B1%E5%85%A5%E7%90%86%E8%A7%A3ElasticSearch/%E6%B7%B1%E5%85%A5%E7%90%86%E8%A7%A3ES-02%E6%9F%A5%E8%AF%A2DSL%E8%BF%9B%E9%98%B6/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/docs/44.%E6%90%9C%E7%B4%A2/%E6%B7%B1%E5%85%A5%E7%90%86%E8%A7%A3ElasticSearch/%E6%B7%B1%E5%85%A5%E7%90%86%E8%A7%A3ES-02%E6%9F%A5%E8%AF%A2DSL%E8%BF%9B%E9%98%B6/</guid><description>
&lt;p>本章涵盖内容：&lt;/p>
&lt;ul>
&lt;li>Lucene默认评分公式如何工作&lt;/li>
&lt;li>什么是查询重写&lt;/li>
&lt;li>查询二次评分如何工作&lt;/li>
&lt;li>单次请求中实现批量准实时读取操作&lt;/li>
&lt;li>单次请求中发送多个查询&lt;/li>
&lt;li>对包括嵌套文档和多值字段的数据排序&lt;/li>
&lt;li>更新已索引的文档&lt;/li>
&lt;li>使用过滤器来优化查询&lt;/li>
&lt;li>在切面计算机制中使用过滤器和作用域&lt;/li>
&lt;/ul>
&lt;h2 id="lucene默认评分公式">Lucene默认评分公式&lt;/h2>
&lt;p>查询相关性重点是理解文档对查询的得分是如何计算出来的。文档得分是一个刻画文档与查询匹配程度的参数。Lucene 的默认评分机制：TF/IDF（词频/逆文档频率）算法以及其如何影响文档召回。&lt;/p>
&lt;h3 id="文档被匹配">文档被匹配&lt;/h3>
&lt;p>每个被查询返回的文档都有一个得分，得分越高，文档相关度更高。&lt;/p>
&lt;blockquote>
&lt;p>注意：同一个文档针对不同查询的得分是不同的，比较某文档在不同查询中的得分是没有意义的，不同查询返回文档中的最高得分也不具备可比较性。因为文档得分依赖多个因子，除了权重和查询本身的结构，还包括匹配的词项数目，词项所在字段，以及查询规范化的匹配类型等。&lt;/p>
&lt;/blockquote>
&lt;p>计算文档得分考虑以下因子：&lt;/p>
&lt;ul>
&lt;li>文档权重（document boost）：索引期赋予某个文档的权重值&lt;/li>
&lt;li>字段权重（field boost）：查询期赋予某个字段的权重值&lt;/li>
&lt;li>协调因子（coord）：基于文档中词项命中个数的协调因子，一个文档命中了查询的词项越多，得分越高。&lt;/li>
&lt;li>逆文档频率（inverse document frequency）：一个基于词项的因子，用来告诉评分公式该词项多么罕见。逆文档频率越低，词项越罕见。评分共识利用该因子为包含罕见词项的文档加权。&lt;/li>
&lt;li>长度范数（length norm）：每个字段的基于词项个数的归一化因子（在索引期计算出来并存储在索引中）。一个字段包含的词项数越多，该因子的权重月底，这意味着 Lucene 评分公式更“喜欢”包含更少词项的字段。&lt;/li>
&lt;li>词频（term frequency）：一个基于词项的因子，用来表示一个词项在某个文档中出现了多少次。词频越高，文档得分越高。&lt;/li>
&lt;li>查询范数（query norm）：一个基于查询的归一化因子，等于查询中词项的权重平方和。查询范数使不同查询的得分能相互比较，尽管这种比较通常是困难的不可行的。&lt;/li>
&lt;/ul>
&lt;h3 id="tf-idf评分公式">TF/IDF评分公式&lt;/h3>
&lt;h4 id="lucene理论评分公式">Lucene理论评分公式&lt;/h4>
&lt;p>TF/IDF公式的理论形式如下：&lt;/p>
&lt;p>&lt;img src="../imgs/20221221_es_02_1.png" alt="20221221_es_02_1.png">&lt;/p>
&lt;p>上面的公式糅合了布尔检索模型和向量空间检索模型。&lt;/p>
&lt;h4 id="lucene实际评分公式">Lucene实际评分公式&lt;/h4>
&lt;p>&lt;img src="../imgs/20221221_es_02_2.png" alt="20221221_es_02_2.png">&lt;/p>
&lt;p>得分公式是一个关于查询 q 和文档 d 的函数，有两个因子 coord 和queryNorm 并不直接依赖查询词项，而是与查询词项的一个求和公式想成。&lt;/p>
&lt;p>求和公式中每个加数由以下因子连乘所得：词频、逆文档频率、词项权重、范数（长度范数）。从公式可以得出一些基本原则：&lt;/p>
&lt;ul>
&lt;li>越多罕见的词项被匹配上，文档得分越高&lt;/li>
&lt;li>文档字段越短（包含更少的词项），文档得分越高&lt;/li>
&lt;li>权重越高（不论是索引期还是查询期赋予的权重值），文档得分越高&lt;/li>
&lt;/ul>
&lt;h3 id="es如何看评分">ES如何看评分&lt;/h3>
&lt;p>ES 使用了 Lucene 的评分功能但不限于其评分功能（可以替换默认的评分算法），用户可以使用各种不同的查询类型以精确控制文档评分的计算（如 custom_boost_factor 查询、constant_score 查询、custom_score 查询等），还可以使用脚本（scripting）来改变文档得分，还可以使用 ES 0.90 中出现的二次评分功能，通过在返回文档集上执行另一个查询，重新计算前 N 个文档的得分。&lt;/p>
&lt;blockquote>
&lt;p>更多查询类型可参考：&lt;a href="https://lucene.apache.org/core/4_5_0/queries/org/apache/lucene/queries/package-summary.html">https://lucene.apache.org/core/4_5_0/queries/org/apache/lucene/queries/package-summary.html&lt;/a>&lt;/p>
&lt;/blockquote>
&lt;h2 id="查询改写">查询改写&lt;/h2>
&lt;p>诸如前缀查询或通配符查询之类的查询类型都是基于多词项的查询，且都涉及查询改写。ES（实际上是 Lucene 执行该操作）使用查询改写是出于对性能的考虑。从 Lucene 的角度查询改写操作就是把费时的原始查询类型实例改写成一个性能更高的查询类型实例。&lt;/p>
&lt;h3 id="前缀查询范例">前缀查询范例&lt;/h3>
&lt;p>PUT数据&lt;/p>
&lt;p>&lt;img src="../imgs/20221221_es_02_3.png" alt="20221221_es_02_3.png">&lt;/p>
&lt;p>查询数据：&lt;/p>
&lt;style>
.td-content .highlight {
margin-top: 0.5rem;
margin-bottom: 0.5rem;
}
.code-collapse1 {
overflow-y: auto;
max-height: 500px;
overflow-x: auto;
max-width: 100%;
}
&lt;/style>
&lt;div class="code-collapse1">
&lt;div class="highlight">&lt;div style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">
&lt;table style="border-spacing:0;padding:0;margin:0;border:0;">&lt;tr>&lt;td style="vertical-align:top;padding:0;margin:0;border:0;">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">1
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">2
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">3
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">4
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">5
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">6
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">7
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">8
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>curl -XGET &lt;span style="color:#c41a16">&amp;#39;localhost:9200/clients/_search?pretty&amp;#39;&lt;/span> -d &lt;span style="color:#c41a16">&amp;#39;{
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c41a16"> &amp;#34;query&amp;#34;: {
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c41a16"> &amp;#34;prefix&amp;#34;: {
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c41a16"> &amp;#34;name&amp;#34;: &amp;#34;j&amp;#34;,
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c41a16"> &amp;#34;rewrite&amp;#34;: &amp;#34;constant_score_boolean&amp;#34;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c41a16"> }
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c41a16"> }
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c41a16">}&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;p>查询结果：
&lt;img src="../imgs/20221221_es_02_4.png" alt="20221221_es_02_4.png">&lt;/p>
&lt;p>验证 ES 设置 name 字段的映射：&lt;/p>
&lt;style>
.td-content .highlight {
margin-top: 0.5rem;
margin-bottom: 0.5rem;
}
.code-collapse1 {
overflow-y: auto;
max-height: 500px;
overflow-x: auto;
max-width: 100%;
}
&lt;/style>
&lt;div class="code-collapse1">
&lt;div class="highlight">&lt;div style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">
&lt;table style="border-spacing:0;padding:0;margin:0;border:0;">&lt;tr>&lt;td style="vertical-align:top;padding:0;margin:0;border:0;">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>curl -XGET &lt;span style="color:#c41a16">&amp;#39;localhost:9200/clients/client/_mapping?pretty&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;p>ES 返回结果：
&lt;style>
.td-content .highlight {
margin-top: 0.5rem;
margin-bottom: 0.5rem;
}
.code-collapse1 {
overflow-y: auto;
max-height: 500px;
overflow-x: auto;
max-width: 100%;
}
&lt;/style>
&lt;div class="code-collapse1">
&lt;div class="highlight">&lt;div style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">
&lt;table style="border-spacing:0;padding:0;margin:0;border:0;">&lt;tr>&lt;td style="vertical-align:top;padding:0;margin:0;border:0;">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 1
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 2
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 3
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 4
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 5
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 6
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 7
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 8
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 9
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">10
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">11
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">12
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-plain" data-lang="plain">&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;client&amp;#34;: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;properties&amp;#34;: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;id&amp;#34;: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;type&amp;#34;: &amp;#34;string&amp;#34;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> },
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;name&amp;#34;: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;type&amp;#34;: &amp;#34;string&amp;#34;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;/div>&lt;/p>
&lt;h3 id="回顾lucene">回顾Lucene&lt;/h3>
&lt;p>Term 这列非常重要，探究 ES 和 Lucene 的内部实现，会发现前缀查询已经改写为下面这种查询：&lt;/p>
&lt;style>
.td-content .highlight {
margin-top: 0.5rem;
margin-bottom: 0.5rem;
}
.code-collapse1 {
overflow-y: auto;
max-height: 500px;
overflow-x: auto;
max-width: 100%;
}
&lt;/style>
&lt;div class="code-collapse1">
&lt;div class="highlight">&lt;div style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">
&lt;table style="border-spacing:0;padding:0;margin:0;border:0;">&lt;tr>&lt;td style="vertical-align:top;padding:0;margin:0;border:0;">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-plain" data-lang="plain">&lt;span style="display:flex;">&lt;span>ConstantScore(name:jack name:jane name:joe)
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;p>这意味着前缀查询已经改写为常数得分查询（constant score query），该查询有一个布尔查询构成，而这个布尔查询又由三个词项查询构成。Lucene 做的事就是枚举索引中的词项，并利用这些词项的信息来构建新的查询。比较改写前后两个查询的执行效果，会发现改写后的查询性能有所提升，尤其是当索引中有大量不同词项时。
手动构建改写后的查询：&lt;/p>
&lt;style>
.highlight {
overflow-y: auto;
max-height: 500px;
overflow-x: auto;
max-width: 130%;
}
.td-content .highlight {
margin-top: 0.5rem;
margin-bottom: 0.5rem;
}
&lt;/style>
&lt;details class="code-collapse">
&lt;summary>Expand/Collapse Code Block&lt;/summary>
&lt;div class="highlight">&lt;div style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">
&lt;table style="border-spacing:0;padding:0;margin:0;border:0;">&lt;tr>&lt;td style="vertical-align:top;padding:0;margin:0;border:0;">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 1
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 2
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 3
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 4
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 5
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 6
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 7
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 8
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 9
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">10
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">11
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">12
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">13
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">14
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">15
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">16
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">17
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">18
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">19
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">20
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">21
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">22
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">23
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">24
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">25
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">26
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">27
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-json" data-lang="json">&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">&amp;#34;query&amp;#34;&lt;/span>: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">&amp;#34;constant_score&amp;#34;&lt;/span>: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">&amp;#34;query&amp;#34;&lt;/span>: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">&amp;#34;bool&amp;#34;&lt;/span>: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">&amp;#34;should&amp;#34;&lt;/span>: [
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">&amp;#34;term&amp;#34;&lt;/span>: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">&amp;#34;name&amp;#34;&lt;/span>: &lt;span style="color:#c41a16">&amp;#34;jack&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> },
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">&amp;#34;term&amp;#34;&lt;/span>: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">&amp;#34;name&amp;#34;&lt;/span>: &lt;span style="color:#c41a16">&amp;#34;jane&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> },
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">&amp;#34;term&amp;#34;&lt;/span>: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">&amp;#34;name&amp;#34;&lt;/span>: &lt;span style="color:#c41a16">&amp;#34;joe&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;/details>
&lt;br/>
&lt;h3 id="查询改写的属性">查询改写的属性&lt;/h3>
&lt;p>对任何多词项查询（如前缀和通配符查询）使用rewite来控制查询改写。如：&lt;/p>
&lt;style>
.td-content .highlight {
margin-top: 0.5rem;
margin-bottom: 0.5rem;
}
.code-collapse1 {
overflow-y: auto;
max-height: 500px;
overflow-x: auto;
max-width: 100%;
}
&lt;/style>
&lt;div class="code-collapse1">
&lt;div class="highlight">&lt;div style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">
&lt;table style="border-spacing:0;padding:0;margin:0;border:0;">&lt;tr>&lt;td style="vertical-align:top;padding:0;margin:0;border:0;">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">1
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">2
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">3
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">4
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">5
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">6
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">7
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">8
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-json" data-lang="json">&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">&amp;#34;query&amp;#34;&lt;/span>: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">&amp;#34;prefix&amp;#34;&lt;/span>: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">&amp;#34;name&amp;#34;&lt;/span>: &lt;span style="color:#c41a16">&amp;#34;j&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">&amp;#34;rewrite&amp;#34;&lt;/span>: &lt;span style="color:#c41a16">&amp;#34;constant_score_boolean&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;p>rewrite 参数配置选项：&lt;/p>
&lt;ul>
&lt;li>scoring_boolean：将每个生成的词项转化为布尔查询中的一个或从句（should clause）。比较消耗CPU（计算和保存每个词项得分），查询生成的词项太多会超出布尔查询的限制（默认1024个从句，可修改 elasticsearch.yaml 文件的 index.query.bool.max_clause_count 属性，注意会降低查询性能）。&lt;/li>
&lt;li>constant_score_boolean：与 scoring_boolean 类似，但CPU消耗较少，因为该过程不计算每个从句得分，而是每个从句得到一个与查询权重相同的常规得分（默认情况下等于1）。同上也有布尔从句数的限制。&lt;/li>
&lt;li>constant_score_filter：通过顺序遍历每个词项来创建一个私有的过滤器，标记跟每个词项相关的所有文档。命中的文档被赋予一个跟查询权重相同的常量得分。当命中词项数或文档数较大时，该方法比前两种执行速度更快。&lt;/li>
&lt;li>top_terms_N：该选项将每个生成的词项转化为布尔查询中的一个或从句，并保存计算出来的查询得分。与 scoring_boolean 不同在于这里只保留了最佳的前 N 个词项，从而避免超出布尔从句数的限制。&lt;/li>
&lt;li>top_terms_boost_N：与 top_terms_N 类似，不同之处在于该选项产生的从句类型为常量得分查询，得分为从句的权重。&lt;/li>
&lt;/ul>
&lt;blockquote>
&lt;p>当 rewrite 属性设置为 constant_score_auto 或者根本不设置时，constant_score_filter 或 constant_score_boolean 属性的取值依赖于查询类型及其构造方式。&lt;/p>
&lt;/blockquote>
&lt;p>何时采用何种查询写法？&lt;/p>
&lt;p>取决于具体应用场景。接受低精度（往往伴随着高性能），可以采用 top N 查询改写方法。需要更高的查询精度（往往伴随着低性能），应该使用布尔方法。&lt;/p>
&lt;h2 id="二次评分">二次评分&lt;/h2>
&lt;p>改变查询返回文档的顺序有很多好处，如提升性能（在整个文档集计算文档顺序非常耗时，原始查询的返回文档的子集上做这种计算则非常省事）。二次评分给了用户很多机会定制业务逻辑。&lt;/p>
&lt;h3 id="理解二次评分">理解二次评分&lt;/h3>
&lt;p>ES 的二次评分是指重新计算查询返回文档中指定个数文档的得分，意味着 ES 会截取查询返回文档的前 N 个，并使用预定义的二次评分方法来重新计算它们的得分。&lt;/p>
&lt;h3 id="范例数据">范例数据&lt;/h3>
&lt;p>范例数据保存在 docements.json 文件中，可以使用以下命令添加到索引中：&lt;/p>
&lt;style>
.td-content .highlight {
margin-top: 0.5rem;
margin-bottom: 0.5rem;
}
.code-collapse1 {
overflow-y: auto;
max-height: 500px;
overflow-x: auto;
max-width: 100%;
}
&lt;/style>
&lt;div class="code-collapse1">
&lt;div class="highlight">&lt;div style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">
&lt;table style="border-spacing:0;padding:0;margin:0;border:0;">&lt;tr>&lt;td style="vertical-align:top;padding:0;margin:0;border:0;">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>curl -XPOST localhost:9200/_bulk?pretty --data-binary @documents.json
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;h3 id="查询">查询&lt;/h3>
&lt;style>
.td-content .highlight {
margin-top: 0.5rem;
margin-bottom: 0.5rem;
}
.code-collapse1 {
overflow-y: auto;
max-height: 500px;
overflow-x: auto;
max-width: 100%;
}
&lt;/style>
&lt;div class="code-collapse1">
&lt;div class="highlight">&lt;div style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">
&lt;table style="border-spacing:0;padding:0;margin:0;border:0;">&lt;tr>&lt;td style="vertical-align:top;padding:0;margin:0;border:0;">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">1
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">2
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">3
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">4
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">5
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">6
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-json" data-lang="json">&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">&amp;#34;fields&amp;#34;&lt;/span>: [&lt;span style="color:#c41a16">&amp;#34;title&amp;#34;&lt;/span>, &lt;span style="color:#c41a16">&amp;#34;available&amp;#34;&lt;/span>],
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">&amp;#34;query&amp;#34;&lt;/span>: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">&amp;#34;match_all&amp;#34;&lt;/span>: {}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;p>该查询将返回索引中的所有文档。因为使用了 match_all 查询类型，所以每个返回文档的得分都等于 1.0。&lt;/p>
&lt;h3 id="二次评分查询结构">二次评分查询结构&lt;/h3>
&lt;p>二次评分查询范例：&lt;/p>
&lt;p>query.json&lt;/p>
&lt;style>
.td-content .highlight {
margin-top: 0.5rem;
margin-bottom: 0.5rem;
}
.code-collapse1 {
overflow-y: auto;
max-height: 500px;
overflow-x: auto;
max-width: 100%;
}
&lt;/style>
&lt;div class="code-collapse1">
&lt;div class="highlight">&lt;div style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">
&lt;table style="border-spacing:0;padding:0;margin:0;border:0;">&lt;tr>&lt;td style="vertical-align:top;padding:0;margin:0;border:0;">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 1
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 2
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 3
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 4
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 5
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 6
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 7
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 8
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 9
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">10
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">11
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">12
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">13
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">14
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">15
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">16
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">17
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">18
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-json" data-lang="json">&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">&amp;#34;fields&amp;#34;&lt;/span>: [&lt;span style="color:#c41a16">&amp;#34;title&amp;#34;&lt;/span>, &lt;span style="color:#c41a16">&amp;#34;available&amp;#34;&lt;/span>],
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">&amp;#34;query&amp;#34;&lt;/span>: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">&amp;#34;match_all&amp;#34;&lt;/span>: {}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> },
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">&amp;#34;rescore&amp;#34;&lt;/span>: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">&amp;#34;query&amp;#34;&lt;/span>: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">&amp;#34;rescore_query&amp;#34;&lt;/span>: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">&amp;#34;custom_score&amp;#34;&lt;/span>: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">&amp;#34;query&amp;#34;&lt;/span>: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">&amp;#34;match_all&amp;#34;&lt;/span>: {}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> },
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">&amp;#34;script&amp;#34;&lt;/span>: &lt;span style="color:#c41a16">&amp;#34;doc[&amp;#39;year&amp;#39;].value&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;p>这个查询将每个文档的得分改写为该文档的 year 字段中的值。
&lt;style>
.td-content .highlight {
margin-top: 0.5rem;
margin-bottom: 0.5rem;
}
.code-collapse1 {
overflow-y: auto;
max-height: 500px;
overflow-x: auto;
max-width: 100%;
}
&lt;/style>
&lt;div class="code-collapse1">
&lt;div class="highlight">&lt;div style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">
&lt;table style="border-spacing:0;padding:0;margin:0;border:0;">&lt;tr>&lt;td style="vertical-align:top;padding:0;margin:0;border:0;">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>curl localhost:9200/library/book/_search?pretty -d @query.json
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;/div>&lt;/p>
&lt;h3 id="二次评分参数配置">二次评分参数配置&lt;/h3>
&lt;p>在 rescore 对象中的查询中，必须配置以下这些参数：&lt;/p>
&lt;ul>
&lt;li>window_size：窗口大小，该参数默认设置为 form 和 size 参数值之和，指定了每个分片上参与二次评分的文档个数&lt;/li>
&lt;li>query_weight：查询权重值，默认等于1，原始查询的得分与二次评分的得分相加之前将乘以该值&lt;/li>
&lt;li>rescore_query_weight：二次评分查询的权重值，默认等于1，二次评分查询的的饭与原始查询德丰相加之前将乘以该值&lt;/li>
&lt;li>rescore_mode：二次评分的模式，默认为total。ES 0.90.3 引入了该参数。定义了二次评分中文档得分的计算方式，可选项有total（文档得分为原始得分与二次评分得分之和）、max、min、avg和multiply（乘积）。
例如：当 rescore_mode 为 total 时，文档得分计算公式如下：&lt;/li>
&lt;/ul>
&lt;style>
.td-content .highlight {
margin-top: 0.5rem;
margin-bottom: 0.5rem;
}
.code-collapse1 {
overflow-y: auto;
max-height: 500px;
overflow-x: auto;
max-width: 100%;
}
&lt;/style>
&lt;div class="code-collapse1">
&lt;div class="highlight">&lt;div style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">
&lt;table style="border-spacing:0;padding:0;margin:0;border:0;">&lt;tr>&lt;td style="vertical-align:top;padding:0;margin:0;border:0;">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-plain" data-lang="plain">&lt;span style="display:flex;">&lt;span>original_query_score * query_weight + rescore_query_score * rescore_query_weight
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;h2 id="批量查询">批量查询&lt;/h2>
&lt;p>ES 提供了批量操作功能来读取数据和检索，这些操作与批量索引类似，允许用户将多个请求归到一组，尽管每个请求可能有各自的目标索引和类型。&lt;/p>
&lt;h3 id="批量取">批量取&lt;/h3>
&lt;p>批量取（MultiGet）可以通过 _mget 端点（endpoint）操作，它允许使用一个请求获取多个文档。&lt;/p>
&lt;h3 id="批量查询-1">批量查询&lt;/h3>
&lt;p>批量查询允许用户将多个查询请求打包一组。&lt;/p>
&lt;h2 id="排序">排序&lt;/h2>
&lt;p>默认按文档得分降序排序。可以自定义排序方式。如：&lt;/p>
&lt;style>
.td-content .highlight {
margin-top: 0.5rem;
margin-bottom: 0.5rem;
}
.code-collapse1 {
overflow-y: auto;
max-height: 500px;
overflow-x: auto;
max-width: 100%;
}
&lt;/style>
&lt;div class="code-collapse1">
&lt;div class="highlight">&lt;div style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">
&lt;table style="border-spacing:0;padding:0;margin:0;border:0;">&lt;tr>&lt;td style="vertical-align:top;padding:0;margin:0;border:0;">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 1
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 2
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 3
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 4
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 5
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 6
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 7
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 8
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 9
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">10
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">11
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-json" data-lang="json">&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">&amp;#34;query&amp;#34;&lt;/span>: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">&amp;#34;terms&amp;#34;&lt;/span>: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">&amp;#34;title&amp;#34;&lt;/span>: [&lt;span style="color:#c41a16">&amp;#34;crime&amp;#34;&lt;/span>, &lt;span style="color:#c41a16">&amp;#34;front&amp;#34;&lt;/span>, &lt;span style="color:#c41a16">&amp;#34;puishment&amp;#34;&lt;/span>],
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">&amp;#34;minimum_match&amp;#34;&lt;/span>: &lt;span style="color:#1c01ce">1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> },
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">&amp;#34;sort&amp;#34;&lt;/span>: [
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {&lt;span style="color:#000">&amp;#34;section&amp;#34;&lt;/span>: &lt;span style="color:#c41a16">&amp;#34;desc&amp;#34;&lt;/span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;h3 id="多值字段排序">多值字段排序&lt;/h3>
&lt;style>
.td-content .highlight {
margin-top: 0.5rem;
margin-bottom: 0.5rem;
}
.code-collapse1 {
overflow-y: auto;
max-height: 500px;
overflow-x: auto;
max-width: 100%;
}
&lt;/style>
&lt;div class="code-collapse1">
&lt;div class="highlight">&lt;div style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">
&lt;table style="border-spacing:0;padding:0;margin:0;border:0;">&lt;tr>&lt;td style="vertical-align:top;padding:0;margin:0;border:0;">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">1
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">2
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">3
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">4
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">5
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">6
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">7
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">8
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-json" data-lang="json">&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">&amp;#34;query&amp;#34;&lt;/span>: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">&amp;#34;match_all&amp;#34;&lt;/span>: {}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> },
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">&amp;#34;sort&amp;#34;&lt;/span>: [
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {&lt;span style="color:#000">&amp;#34;release_dates&amp;#34;&lt;/span>: {&lt;span style="color:#000">&amp;#34;order&amp;#34;&lt;/span>: &lt;span style="color:#c41a16">&amp;#34;asc&amp;#34;&lt;/span>, &lt;span style="color:#000">&amp;#34;mode&amp;#34;&lt;/span>: &lt;span style="color:#c41a16">&amp;#34;min&amp;#34;&lt;/span>}}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;p>mode参数可以设置为以下值：&lt;/p>
&lt;ul>
&lt;li>min：升序排序的默认值，按照字段的最小值进行排序&lt;/li>
&lt;li>max：降序排序的默认值，按照字段的最大值进行排序&lt;/li>
&lt;li>avg：按照该字段的平均值进行排序&lt;/li>
&lt;li>sum：按照字段的总和进行排序&lt;/li>
&lt;/ul>
&lt;h3 id="多值geo字段排序">多值geo字段排序&lt;/h3>
&lt;p>ES 0.92.0RC2 版本提供了基于多维作为数据的排序。&lt;/p>
&lt;h3 id="嵌套对象排序">嵌套对象排序&lt;/h3>
&lt;p>ES 0.90 及以上版本中，可以基于字段中定义的嵌套对象排序。&lt;/p>
&lt;h2 id="数据更新api">数据更新API&lt;/h2>
&lt;h3 id="简单字段更新">简单字段更新&lt;/h3>
&lt;h3 id="使用脚本按条件更新">使用脚本按条件更新&lt;/h3>
&lt;p>ES 允许用户结合脚本使用更新 API，如：&lt;/p>
&lt;style>
.td-content .highlight {
margin-top: 0.5rem;
margin-bottom: 0.5rem;
}
.code-collapse1 {
overflow-y: auto;
max-height: 500px;
overflow-x: auto;
max-width: 100%;
}
&lt;/style>
&lt;div class="code-collapse1">
&lt;div class="highlight">&lt;div style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">
&lt;table style="border-spacing:0;padding:0;margin:0;border:0;">&lt;tr>&lt;td style="vertical-align:top;padding:0;margin:0;border:0;">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">1
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">2
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">3
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">4
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">5
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">6
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">7
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">8
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>curl localhost:9200:library/book/1/_update -d &lt;span style="color:#c41a16">&amp;#39;{
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c41a16"> &amp;#34;script&amp;#34;: &amp;#34;if(ctx._source.year == start_date) ctx._source.year = new_date; else ctx._source.year = alt_date;&amp;#34;,
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c41a16"> &amp;#34;params&amp;#34;: {
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c41a16"> &amp;#34;start_date&amp;#34;: 1935,
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c41a16"> &amp;#34;new_date&amp;#34;: 1936,
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c41a16"> &amp;#34;alt_date&amp;#34;: 1934
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c41a16"> }
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c41a16">}&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;h3 id="使用更新api创建或删除">使用更新API创建或删除&lt;/h3>
&lt;p>更新 API 不仅可以用来修改字段，也可以用来操作整个文档。upsert 属性允许用户在当 URL 中地址不存在时创建一个新的文档。如：&lt;/p>
&lt;style>
.td-content .highlight {
margin-top: 0.5rem;
margin-bottom: 0.5rem;
}
.code-collapse1 {
overflow-y: auto;
max-height: 500px;
overflow-x: auto;
max-width: 100%;
}
&lt;/style>
&lt;div class="code-collapse1">
&lt;div class="highlight">&lt;div style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">
&lt;table style="border-spacing:0;padding:0;margin:0;border:0;">&lt;tr>&lt;td style="vertical-align:top;padding:0;margin:0;border:0;">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">1
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">2
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">3
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">4
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">5
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">6
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">7
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">8
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>curl localhost:9200:library/book/1/_update -d &lt;span style="color:#c41a16">&amp;#39;{
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c41a16"> &amp;#34;doc&amp;#34;: {
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c41a16"> &amp;#34;year&amp;#34;: 1900
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c41a16"> },
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c41a16"> &amp;#34;upsert&amp;#34;: {
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c41a16"> &amp;#34;title&amp;#34;: &amp;#34;Unknown Book&amp;#34;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c41a16"> }
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c41a16">}&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;h2 id="过滤器优化查询">过滤器优化查询&lt;/h2>
&lt;p>ES 允许创建各种不同的查询类型。仅有查询本身不足以满足文档的查询匹配。ES 查询 DSL 提供的大多数查询类型都有它们的相似物，并且能将相似物包装（wrapping）成以下这些查询类型：&lt;/p>
&lt;ul>
&lt;li>constant_score&lt;/li>
&lt;li>filtered&lt;/li>
&lt;li>custom_filters_score&lt;/li>
&lt;/ul>
&lt;h3 id="过滤器与缓存">过滤器与缓存&lt;/h3>
&lt;p>过滤器是很好的缓存候选方案。ES 提供了过滤器缓存（filter cache），用来存储过滤器的结果。不需要消耗过多的内存，因为只存储了哪些文档能与过滤器相匹配的相关信息。可供后续所有阈值相关的查询重复使用，极大提高了查询性能。&lt;/p>
&lt;h4 id="不是所有过滤都默认缓存">不是所有过滤都默认缓存&lt;/h4>
&lt;p>因为 ES 中某些过滤器使用了字段数据缓存，可以在基于字段数据的排序时使用，也能在计算切面结果时使用。一下过滤器默认不缓存：&lt;/p>
&lt;ul>
&lt;li>numeric_range&lt;/li>
&lt;li>script&lt;/li>
&lt;li>geo_bbox&lt;/li>
&lt;li>geo_distance&lt;/li>
&lt;li>geo_distance_range&lt;/li>
&lt;li>geo_ploygon&lt;/li>
&lt;li>geo_shape&lt;/li>
&lt;li>and&lt;/li>
&lt;li>or&lt;/li>
&lt;li>not
上面最后三个本身不适用字段缓存，但它们操作其它过滤器，因此也不缓存。&lt;/li>
&lt;/ul>
&lt;h4 id="改变es的缓存行为">改变ES的缓存行为&lt;/h4>
&lt;p>通过设置 _cache 和 _cache_key 属性来开启或关闭过滤器的缓存机制。配置缓存词项过滤器结果，如：&lt;/p>
&lt;style>
.td-content .highlight {
margin-top: 0.5rem;
margin-bottom: 0.5rem;
}
.code-collapse1 {
overflow-y: auto;
max-height: 500px;
overflow-x: auto;
max-width: 100%;
}
&lt;/style>
&lt;div class="code-collapse1">
&lt;div class="highlight">&lt;div style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">
&lt;table style="border-spacing:0;padding:0;margin:0;border:0;">&lt;tr>&lt;td style="vertical-align:top;padding:0;margin:0;border:0;">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 1
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 2
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 3
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 4
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 5
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 6
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 7
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 8
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 9
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">10
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">11
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">12
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">13
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">14
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">15
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">16
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">17
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-json" data-lang="json">&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">&amp;#34;query&amp;#34;&lt;/span>: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">&amp;#34;filtered&amp;#34;&lt;/span>: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">&amp;#34;query&amp;#34;&lt;/span>: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">&amp;#34;term&amp;#34;&lt;/span>: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">&amp;#34;name&amp;#34;&lt;/span>: &lt;span style="color:#c41a16">&amp;#34;joe&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> },
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">&amp;#34;filter&amp;#34;&lt;/span>: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">&amp;#34;term&amp;#34;&lt;/span>: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">&amp;#34;year&amp;#34;&lt;/span>: &lt;span style="color:#1c01ce">1981&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">&amp;#34;_cache_key&amp;#34;&lt;/span>: &lt;span style="color:#c41a16">&amp;#34;year_1981_cache&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;p>关闭该查询的词项过滤器缓存：&lt;/p>
&lt;style>
.td-content .highlight {
margin-top: 0.5rem;
margin-bottom: 0.5rem;
}
.code-collapse1 {
overflow-y: auto;
max-height: 500px;
overflow-x: auto;
max-width: 100%;
}
&lt;/style>
&lt;div class="code-collapse1">
&lt;div class="highlight">&lt;div style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">
&lt;table style="border-spacing:0;padding:0;margin:0;border:0;">&lt;tr>&lt;td style="vertical-align:top;padding:0;margin:0;border:0;">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 1
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 2
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 3
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 4
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 5
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 6
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 7
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 8
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 9
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">10
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">11
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">12
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">13
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">14
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">15
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">16
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">17
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-json" data-lang="json">&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">&amp;#34;query&amp;#34;&lt;/span>: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">&amp;#34;filtered&amp;#34;&lt;/span>: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">&amp;#34;query&amp;#34;&lt;/span>: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">&amp;#34;term&amp;#34;&lt;/span>: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">&amp;#34;name&amp;#34;&lt;/span>: &lt;span style="color:#c41a16">&amp;#34;joe&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> },
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">&amp;#34;filter&amp;#34;&lt;/span>: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">&amp;#34;term&amp;#34;&lt;/span>: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">&amp;#34;year&amp;#34;&lt;/span>: &lt;span style="color:#1c01ce">1981&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">&amp;#34;_cache&amp;#34;&lt;/span>: &lt;span style="color:#a90d91">false&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;h4 id="为什么命名cache的key">为什么命名cache的key&lt;/h4>
&lt;p>必要时可以让 ES 自动处理，精细地控制缓存行为就需要手动处理。如已知某些查询很少执行，又想周期性地清除之前查询的缓存。如果不设置 _cache_key，将不得不强制清理全部的过滤器缓存，而如果设置了 _cache_key，那么执行下面命令即可：&lt;/p>
&lt;style>
.td-content .highlight {
margin-top: 0.5rem;
margin-bottom: 0.5rem;
}
.code-collapse1 {
overflow-y: auto;
max-height: 500px;
overflow-x: auto;
max-width: 100%;
}
&lt;/style>
&lt;div class="code-collapse1">
&lt;div class="highlight">&lt;div style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">
&lt;table style="border-spacing:0;padding:0;margin:0;border:0;">&lt;tr>&lt;td style="vertical-align:top;padding:0;margin:0;border:0;">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>curl -XPOST &lt;span style="color:#c41a16">&amp;#39;localhost:9200/users/_cache/clear?filter_keys=year_1981_cache&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;h4 id="何时改变es过滤器缓存行为">何时改变ES过滤器缓存行为&lt;/h4>
&lt;p>用户比 ES 更清楚自己想要什么。&lt;/p>
&lt;p>将数据存放在缓存中会消耗资源，因而在不需要时应及时清理数据。&lt;/p>
&lt;h3 id="词项查找过滤器">词项查找过滤器&lt;/h3>
&lt;p>缓存和各种标准查询并不是 ES 的全部家当。ES 0.90 支持了一个精巧的过滤器，用于给一个具体的查询传递从 ES 取回的多个词项（与 SQL 的 IN 操作符类似）。&lt;/p>
&lt;p>将两个查询合并为一个过滤查询（filtered query）：&lt;/p>
&lt;style>
.highlight {
overflow-y: auto;
max-height: 500px;
overflow-x: auto;
max-width: 130%;
}
.td-content .highlight {
margin-top: 0.5rem;
margin-bottom: 0.5rem;
}
&lt;/style>
&lt;details class="code-collapse">
&lt;summary>Expand/Collapse Code Block&lt;/summary>
&lt;div class="highlight">&lt;div style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">
&lt;table style="border-spacing:0;padding:0;margin:0;border:0;">&lt;tr>&lt;td style="vertical-align:top;padding:0;margin:0;border:0;">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 1
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 2
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 3
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 4
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 5
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 6
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 7
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 8
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 9
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">10
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">11
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">12
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">13
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">14
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">15
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">16
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">17
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">18
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">19
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">20
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-json" data-lang="json">&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">&amp;#34;query&amp;#34;&lt;/span>: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">&amp;#34;filtered&amp;#34;&lt;/span>: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">&amp;#34;query&amp;#34;&lt;/span>: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">&amp;#34;match_all&amp;#34;&lt;/span>: {}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> },
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">&amp;#34;filter&amp;#34;&lt;/span>: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">&amp;#34;terms&amp;#34;&lt;/span>: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">&amp;#34;id&amp;#34;&lt;/span>: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">&amp;#34;index&amp;#34;&lt;/span>: &lt;span style="color:#c41a16">&amp;#34;clients&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">&amp;#34;type&amp;#34;&lt;/span>: &lt;span style="color:#c41a16">&amp;#34;client&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">&amp;#34;id&amp;#34;&lt;/span>: &lt;span style="color:#c41a16">&amp;#34;1&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">&amp;#34;path&amp;#34;&lt;/span>: &lt;span style="color:#c41a16">&amp;#34;books&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> },
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">&amp;#34;_cache_key&amp;#34;&lt;/span>: &lt;span style="color:#c41a16">&amp;#34;terms_lookup_client_1_books&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;/details>
&lt;br/>
&lt;h2 id="es切面机制中的过滤器和作用域">ES切面机制中的过滤器和作用域&lt;/h2>
&lt;p>使用切面机制时，需要注意：&lt;/p>
&lt;ul>
&lt;li>系统只在查询结果之上计算切面结果。filter对象内部且在query对象外部包含了过滤器，这些过滤器不会对参与切面计算的文档产生影响。&lt;/li>
&lt;li>作用域（scope）能扩充用于切面计算的文档&lt;/li>
&lt;/ul>
&lt;h3 id="切面计算和过滤">切面计算和过滤&lt;/h3>
&lt;p>ES 的切面在进行计算式并不考虑过滤器的因素。&lt;/p>
&lt;p>示例：&lt;/p>
&lt;style>
.highlight {
overflow-y: auto;
max-height: 500px;
overflow-x: auto;
max-width: 130%;
}
.td-content .highlight {
margin-top: 0.5rem;
margin-bottom: 0.5rem;
}
&lt;/style>
&lt;details class="code-collapse">
&lt;summary>Expand/Collapse Code Block&lt;/summary>
&lt;div class="highlight">&lt;div style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">
&lt;table style="border-spacing:0;padding:0;margin:0;border:0;">&lt;tr>&lt;td style="vertical-align:top;padding:0;margin:0;border:0;">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 1
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 2
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 3
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 4
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 5
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 6
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 7
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 8
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 9
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">10
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">11
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">12
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">13
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">14
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">15
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">16
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">17
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">18
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">19
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">20
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">21
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">22
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">23
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">24
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">25
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-json" data-lang="json">&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">&amp;#34;query&amp;#34;&lt;/span>: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">&amp;#34;filtered&amp;#34;&lt;/span>: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">&amp;#34;query&amp;#34;&lt;/span>: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">&amp;#34;match_all&amp;#34;&lt;/span>: {}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> },
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">&amp;#34;filter&amp;#34;&lt;/span>: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">&amp;#34;term&amp;#34;&lt;/span>: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">&amp;#34;category&amp;#34;&lt;/span>: &lt;span style="color:#c41a16">&amp;#34;book&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> },
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">&amp;#34;facets&amp;#34;&lt;/span>: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">&amp;#34;price&amp;#34;&lt;/span>: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">&amp;#34;range&amp;#34;&lt;/span>: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">&amp;#34;field&amp;#34;&lt;/span>: &lt;span style="color:#c41a16">&amp;#34;price&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">&amp;#34;ranges&amp;#34;&lt;/span>: [
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {&lt;span style="color:#000">&amp;#34;to&amp;#34;&lt;/span>: &lt;span style="color:#1c01ce">30&lt;/span>},
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {&lt;span style="color:#000">&amp;#34;from&amp;#34;&lt;/span>: &lt;span style="color:#1c01ce">30&lt;/span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;/details>
&lt;br/>
&lt;p>尽管查询被限制为只返回 category 字段值为 book 的文档，但是对切面计算来说不是这样的。切面作用于 books 索引的所有文档（因为使用了 match_all 查询）。&lt;/p>
&lt;h3 id="过滤器作为查询一部分">过滤器作为查询一部分&lt;/h3>
&lt;p>切面计算作用于查询返回结果上，因为过滤器成为了查询的一部分。在上面的案例中，切面计算结果包含两个范围，每个范围只有一个文档。&lt;/p>
&lt;h3 id="切面过滤器">切面过滤器&lt;/h3>
&lt;p>如果只想为 title 字段包含词项2的书籍计算分组，可以在查询使用第二个过滤器，虽然能减少查询返回结果，但不够优雅。更明智的做法是使用切面过滤器（facet filter）。&lt;/p>
&lt;style>
.highlight {
overflow-y: auto;
max-height: 500px;
overflow-x: auto;
max-width: 130%;
}
.td-content .highlight {
margin-top: 0.5rem;
margin-bottom: 0.5rem;
}
&lt;/style>
&lt;details class="code-collapse">
&lt;summary>Expand/Collapse Code Block&lt;/summary>
&lt;div class="highlight">&lt;div style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">
&lt;table style="border-spacing:0;padding:0;margin:0;border:0;">&lt;tr>&lt;td style="vertical-align:top;padding:0;margin:0;border:0;">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 1
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 2
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 3
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 4
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 5
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 6
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 7
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 8
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 9
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">10
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">11
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">12
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">13
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">14
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">15
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">16
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">17
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">18
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">19
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-json" data-lang="json">&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">...&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">&amp;#34;facets&amp;#34;&lt;/span>: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">&amp;#34;price&amp;#34;&lt;/span>: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">&amp;#34;range&amp;#34;&lt;/span>: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">&amp;#34;field&amp;#34;&lt;/span>: &lt;span style="color:#c41a16">&amp;#34;price&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">&amp;#34;ranges&amp;#34;&lt;/span>: [
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {&lt;span style="color:#000">&amp;#34;to&amp;#34;&lt;/span>: &lt;span style="color:#1c01ce">30&lt;/span>},
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {&lt;span style="color:#000">&amp;#34;from&amp;#34;&lt;/span>: &lt;span style="color:#1c01ce">30&lt;/span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> },
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">&amp;#34;facet_filter&amp;#34;&lt;/span>: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">&amp;#34;term&amp;#34;&lt;/span>: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">&amp;#34;title&amp;#34;&lt;/span>: &lt;span style="color:#c41a16">&amp;#34;2&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;/details>
&lt;br/>
&lt;h3 id="全局作用域">全局作用域&lt;/h3>
&lt;p>如果想查询所有书名中包含词项2的文档，但同时又要显示索引中所有文档的基于范围的切面计算结果。这时并不需要强制运行第二个查询，可以使用全局切面作用域（global faceting scope）来达成目的，设置切面类型的 global 属性配置为 true 来实现。&lt;/p>
&lt;style>
.highlight {
overflow-y: auto;
max-height: 500px;
overflow-x: auto;
max-width: 130%;
}
.td-content .highlight {
margin-top: 0.5rem;
margin-bottom: 0.5rem;
}
&lt;/style>
&lt;details class="code-collapse">
&lt;summary>Expand/Collapse Code Block&lt;/summary>
&lt;div class="highlight">&lt;div style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">
&lt;table style="border-spacing:0;padding:0;margin:0;border:0;">&lt;tr>&lt;td style="vertical-align:top;padding:0;margin:0;border:0;">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 1
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 2
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 3
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 4
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 5
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 6
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 7
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 8
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 9
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">10
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">11
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">12
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">13
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">14
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">15
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">16
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">17
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">18
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">19
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">20
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">21
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">22
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">23
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">24
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">25
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">26
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-json" data-lang="json">&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">&amp;#34;query&amp;#34;&lt;/span>: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">&amp;#34;filtered&amp;#34;&lt;/span>: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">&amp;#34;query&amp;#34;&lt;/span>: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">&amp;#34;match_all&amp;#34;&lt;/span>: {}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> },
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">&amp;#34;filter&amp;#34;&lt;/span>: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">&amp;#34;term&amp;#34;&lt;/span>: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">&amp;#34;category&amp;#34;&lt;/span>: &lt;span style="color:#c41a16">&amp;#34;book&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> },
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">&amp;#34;facets&amp;#34;&lt;/span>: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">&amp;#34;price&amp;#34;&lt;/span>: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">&amp;#34;range&amp;#34;&lt;/span>: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">&amp;#34;field&amp;#34;&lt;/span>: &lt;span style="color:#c41a16">&amp;#34;price&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">&amp;#34;ranges&amp;#34;&lt;/span>: [
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {&lt;span style="color:#000">&amp;#34;to&amp;#34;&lt;/span>: &lt;span style="color:#1c01ce">30&lt;/span>},
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {&lt;span style="color:#000">&amp;#34;from&amp;#34;&lt;/span>: &lt;span style="color:#1c01ce">30&lt;/span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> },
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">&amp;#34;global&amp;#34;&lt;/span>: &lt;span style="color:#a90d91">true&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;/details>
&lt;br/>
&lt;p>案例：用户输入查询之后显示一个顶级导航，如使用基于词项的切面计算来枚举所有电子商务网站的顶级目录。这种案例中 global 作用域就显得尤为有用。&lt;/p>
&lt;h2 id="小结">小结&lt;/h2>
&lt;p>本章介绍了 Apache Lucene 的默认评分公式、查询重写过程（query rewrite process）以及它如何工作。还讨论了 ES 的一些功能，例如查询的二次评分（query rescore）、准实时批量获取（multi near real-time get）、批量搜索操作（bulk search operations）。以及如何使用 update API 来部分改变文档、对数据进行排序、如何使用过滤功能（filterring）来改进查询的性能和如何在切面机制中使用过滤器（filters）和作用域（scope）。&lt;/p></description></item><item><title>Docs: 深入理解ES-03底层索引控制</title><link>/docs/44.%E6%90%9C%E7%B4%A2/%E6%B7%B1%E5%85%A5%E7%90%86%E8%A7%A3ElasticSearch/%E6%B7%B1%E5%85%A5%E7%90%86%E8%A7%A3ES-03%E5%BA%95%E5%B1%82%E7%B4%A2%E5%BC%95%E6%8E%A7%E5%88%B6/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/docs/44.%E6%90%9C%E7%B4%A2/%E6%B7%B1%E5%85%A5%E7%90%86%E8%A7%A3ElasticSearch/%E6%B7%B1%E5%85%A5%E7%90%86%E8%A7%A3ES-03%E5%BA%95%E5%B1%82%E7%B4%A2%E5%BC%95%E6%8E%A7%E5%88%B6/</guid><description>
&lt;h2 id="改变lucene评分方式">改变Lucene评分方式&lt;/h2>
&lt;p>Lucene 4.0 发布后可以改变默认的基于 TF/IDF 的评分算法，因为 Lucene 的 API 做了一些改变，使得用户能轻松地修改和扩展该评分公式。且提供了更多的相似度模型，允许我们采用不同的评分公式。&lt;/p>
&lt;h3 id="可用的相似度模型">可用的相似度模型&lt;/h3>
&lt;p>Lucene 4.0 之前，除了最原始和默认的相似度模型外，TF/IDF 模型也是可用的。在此基础上又新增了3种相似度模型可供使用：&lt;/p>
&lt;ul>
&lt;li>Okapi BM25 模型：基于概率模型的相似度模型，可用于估算文档与给定查询匹配的概率。模型名字：BM25。一般来说，该模型在短文本文档上的效果最好，因为这种场景中重复词项对文档的总体得分损害较大。&lt;/li>
&lt;li>随机偏离（Divergence from randomness）模型：基于同名概率模型的相似度模型。模型名字：DFR。一般来说，随机偏离模型在类似自然语言的文本上效果较好。&lt;/li>
&lt;li>基于信息的（information based）模型：与随机偏离模型类似。模型名字：IB。同样，IB模型也在类似自然语言的文本上拥有较好的效果。&lt;/li>
&lt;/ul>
&lt;h3 id="为每字段配置相似度模型">为每字段配置相似度模型&lt;/h3>
&lt;p>ES 0.90 以后，用户可以在映射中为每字段设置不同的相似度模型。例如：&lt;/p>
&lt;style>
.highlight {
overflow-y: auto;
max-height: 500px;
overflow-x: auto;
max-width: 130%;
}
.td-content .highlight {
margin-top: 0.5rem;
margin-bottom: 0.5rem;
}
&lt;/style>
&lt;details class="code-collapse">
&lt;summary>Expand/Collapse Code Block&lt;/summary>
&lt;div class="highlight">&lt;div style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">
&lt;table style="border-spacing:0;padding:0;margin:0;border:0;">&lt;tr>&lt;td style="vertical-align:top;padding:0;margin:0;border:0;">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 1
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 2
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 3
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 4
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 5
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 6
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 7
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 8
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 9
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">10
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">11
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">12
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">13
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">14
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">15
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">16
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">17
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">18
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">19
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">20
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">21
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">22
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">23
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-json" data-lang="json">&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">&amp;#34;mappings&amp;#34;&lt;/span>: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">&amp;#34;post&amp;#34;&lt;/span>: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">&amp;#34;properties&amp;#34;&lt;/span>: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">&amp;#34;id&amp;#34;&lt;/span>: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">&amp;#34;type&amp;#34;&lt;/span>: &lt;span style="color:#c41a16">&amp;#34;long&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">&amp;#34;store&amp;#34;&lt;/span>: &lt;span style="color:#c41a16">&amp;#34;yes&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">&amp;#34;precision_step&amp;#34;&lt;/span>: &lt;span style="color:#c41a16">&amp;#34;0&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> },
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">&amp;#34;name&amp;#34;&lt;/span>: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">&amp;#34;type&amp;#34;&lt;/span>: &lt;span style="color:#c41a16">&amp;#34;string&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">&amp;#34;store&amp;#34;&lt;/span>: &lt;span style="color:#c41a16">&amp;#34;yes&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">&amp;#34;index&amp;#34;&lt;/span>: &lt;span style="color:#c41a16">&amp;#34;analyzed&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> },
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">&amp;#34;contents&amp;#34;&lt;/span>: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">&amp;#34;type&amp;#34;&lt;/span>: &lt;span style="color:#c41a16">&amp;#34;string&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">&amp;#34;store&amp;#34;&lt;/span>: &lt;span style="color:#c41a16">&amp;#34;no&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">&amp;#34;index&amp;#34;&lt;/span>: &lt;span style="color:#c41a16">&amp;#34;analyzed&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;/details>
&lt;br/>
&lt;p>如果希望在 name 字段和 contents 字段使用 BM25 相似度模型，可以添加 similarity 字段，并将该字段设置为响应的相似度模型名字。如下：
&lt;style>
.highlight {
overflow-y: auto;
max-height: 500px;
overflow-x: auto;
max-width: 130%;
}
.td-content .highlight {
margin-top: 0.5rem;
margin-bottom: 0.5rem;
}
&lt;/style>
&lt;details class="code-collapse">
&lt;summary>Expand/Collapse Code Block&lt;/summary>
&lt;div class="highlight">&lt;div style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">
&lt;table style="border-spacing:0;padding:0;margin:0;border:0;">&lt;tr>&lt;td style="vertical-align:top;padding:0;margin:0;border:0;">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 1
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 2
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 3
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 4
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 5
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 6
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 7
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 8
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 9
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">10
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">11
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">12
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">13
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">14
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">15
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">16
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">17
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">18
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">19
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">20
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">21
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">22
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">23
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">24
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">25
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-json" data-lang="json">&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">&amp;#34;mappings&amp;#34;&lt;/span>: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">&amp;#34;post&amp;#34;&lt;/span>: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">&amp;#34;properties&amp;#34;&lt;/span>: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">&amp;#34;id&amp;#34;&lt;/span>: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">&amp;#34;type&amp;#34;&lt;/span>: &lt;span style="color:#c41a16">&amp;#34;long&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">&amp;#34;store&amp;#34;&lt;/span>: &lt;span style="color:#c41a16">&amp;#34;yes&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">&amp;#34;precision_step&amp;#34;&lt;/span>: &lt;span style="color:#c41a16">&amp;#34;0&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> },
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">&amp;#34;name&amp;#34;&lt;/span>: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">&amp;#34;type&amp;#34;&lt;/span>: &lt;span style="color:#c41a16">&amp;#34;string&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">&amp;#34;store&amp;#34;&lt;/span>: &lt;span style="color:#c41a16">&amp;#34;yes&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">&amp;#34;index&amp;#34;&lt;/span>: &lt;span style="color:#c41a16">&amp;#34;analyzed&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">&amp;#34;similarity&amp;#34;&lt;/span>: &lt;span style="color:#c41a16">&amp;#34;BM25&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> },
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">&amp;#34;contents&amp;#34;&lt;/span>: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">&amp;#34;type&amp;#34;&lt;/span>: &lt;span style="color:#c41a16">&amp;#34;string&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">&amp;#34;store&amp;#34;&lt;/span>: &lt;span style="color:#c41a16">&amp;#34;no&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">&amp;#34;index&amp;#34;&lt;/span>: &lt;span style="color:#c41a16">&amp;#34;analyzed&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">&amp;#34;similarity&amp;#34;&lt;/span>: &lt;span style="color:#c41a16">&amp;#34;BM25&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;/details>
&lt;br/>&lt;/p>
&lt;p>以上修改就足够了，并不需要额外配置。&lt;/p>
&lt;blockquote>
&lt;p>注意：对于随机偏离模型和基于信息的相似度模型，需要一些额外的配置，用于控制这些相似度模型的行文。&lt;/p>
&lt;/blockquote>
&lt;h2 id="相似度模型配置">相似度模型配置&lt;/h2>
&lt;h3 id="选择默认相似度模型">选择默认相似度模型&lt;/h3>
&lt;p>提供一个名为 default 的相似度模型的配置信息，需要将配置文件修改为如下形式：&lt;/p>
&lt;style>
.td-content .highlight {
margin-top: 0.5rem;
margin-bottom: 0.5rem;
}
.code-collapse1 {
overflow-y: auto;
max-height: 500px;
overflow-x: auto;
max-width: 100%;
}
&lt;/style>
&lt;div class="code-collapse1">
&lt;div class="highlight">&lt;div style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">
&lt;table style="border-spacing:0;padding:0;margin:0;border:0;">&lt;tr>&lt;td style="vertical-align:top;padding:0;margin:0;border:0;">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 1
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 2
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 3
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 4
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 5
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 6
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 7
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 8
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 9
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">10
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">11
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">12
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-json" data-lang="json">&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">&amp;#34;settings&amp;#34;&lt;/span>: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">&amp;#34;index&amp;#34;&lt;/span>: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">&amp;#34;similarity&amp;#34;&lt;/span>: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">&amp;#34;default&amp;#34;&lt;/span>: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">&amp;#34;type&amp;#34;&lt;/span>: &lt;span style="color:#c41a16">&amp;#34;default&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">&amp;#34;discount_overlaps&amp;#34;&lt;/span>: &lt;span style="color:#a90d91">false&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;p>改为名为 base 的相似度模型：
&lt;style>
.td-content .highlight {
margin-top: 0.5rem;
margin-bottom: 0.5rem;
}
.code-collapse1 {
overflow-y: auto;
max-height: 500px;
overflow-x: auto;
max-width: 100%;
}
&lt;/style>
&lt;div class="code-collapse1">
&lt;div class="highlight">&lt;div style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">
&lt;table style="border-spacing:0;padding:0;margin:0;border:0;">&lt;tr>&lt;td style="vertical-align:top;padding:0;margin:0;border:0;">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 1
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 2
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 3
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 4
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 5
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 6
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 7
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 8
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 9
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">10
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">11
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">12
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-json" data-lang="json">&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">&amp;#34;settings&amp;#34;&lt;/span>: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">&amp;#34;index&amp;#34;&lt;/span>: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">&amp;#34;similarity&amp;#34;&lt;/span>: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">&amp;#34;base&amp;#34;&lt;/span>: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">&amp;#34;type&amp;#34;&lt;/span>: &lt;span style="color:#c41a16">&amp;#34;default&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">&amp;#34;discount_overlaps&amp;#34;&lt;/span>: &lt;span style="color:#a90d91">false&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;/div>&lt;/p>
&lt;h3 id="配置被选用的相似度模型">配置被选用的相似度模型&lt;/h3>
&lt;h4 id="配置tf-idf相似度模型">配置TF/IDF相似度模型&lt;/h4>
&lt;p>只设置一个参数：discount_overlaps 属性，其默认值为true。默认情况下，位置增量（position increment）为0（即该词条的position计数与前一个词条相同）的词条在计算评分时并不会被考虑进去。如果在计算文档时需要考虑这类词条，则需要将相似度模型的 discount_overlaps 属性值设置为 false。&lt;/p>
&lt;h4 id="配置okapi-bm25相似度模型">配置Okapi BM25相似度模型&lt;/h4>
&lt;p>有如下参数可供配置：&lt;/p>
&lt;ul>
&lt;li>k1：浮点数，控制饱和度（saturation），即词频归一化中的非线性项&lt;/li>
&lt;li>b：浮点数，用于控制文档长度对词频的影响&lt;/li>
&lt;li>discount_overlaps：与TF/IDF相似度模型的discount_overlaps参数作用相同&lt;/li>
&lt;/ul>
&lt;h4 id="配置dfr相似度模型">配置DFR相似度模型&lt;/h4>
&lt;p>有如下参数可供配置：&lt;/p>
&lt;ul>
&lt;li>basic_model：可设置为 be、d、g、if、in 和 ine。&lt;/li>
&lt;li>after_effect：可设置为 no、b 和 l。&lt;/li>
&lt;li>normalization：可设置为 no、h1、h2、h3 和 z。
如果 normalization 参数值不是 no，则需要设置归一化因子（依赖于normalization参数值）。参数值为 h1 时，使用 normalization.h1.c 属性；参数值为 h2 时，使用 normalization.h2.c 属性；参数值为 h3 时，使用 normalization.h3.c 属性；参数值为 z 时，使用 normalization.z.z 属性。属性值的数据类型均为浮点型，如下：&lt;/li>
&lt;/ul>
&lt;style>
.td-content .highlight {
margin-top: 0.5rem;
margin-bottom: 0.5rem;
}
.code-collapse1 {
overflow-y: auto;
max-height: 500px;
overflow-x: auto;
max-width: 100%;
}
&lt;/style>
&lt;div class="code-collapse1">
&lt;div class="highlight">&lt;div style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">
&lt;table style="border-spacing:0;padding:0;margin:0;border:0;">&lt;tr>&lt;td style="vertical-align:top;padding:0;margin:0;border:0;">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">1
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">2
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">3
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">4
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">5
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">6
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">7
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">8
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">9
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-json" data-lang="json">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c41a16">&amp;#34;similarity&amp;#34;&lt;/span>&lt;span style="color:#000">:&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">&amp;#34;esserverboook_dfr_similarity&amp;#34;&lt;/span>: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">&amp;#34;type&amp;#34;&lt;/span>: &lt;span style="color:#c41a16">&amp;#34;DFR&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">&amp;#34;basic_model&amp;#34;&lt;/span>: &lt;span style="color:#c41a16">&amp;#34;g&amp;#34;&lt;/span>&lt;span style="color:#000">，&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c41a16">&amp;#34;after_effect&amp;#34;&lt;/span>: &lt;span style="color:#c41a16">&amp;#34;l&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">&amp;#34;normalization&amp;#34;&lt;/span>: &lt;span style="color:#c41a16">&amp;#34;h2&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">&amp;#34;normalization.h2.c&amp;#34;&lt;/span>: &lt;span style="color:#c41a16">&amp;#34;2.0&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;h4 id="配置ib相似度模型">配置IB相似度模型&lt;/h4>
&lt;p>有如下参数可供配置：&lt;/p>
&lt;ul>
&lt;li>distribution：可设置为 ll 或 spl。&lt;/li>
&lt;li>lambuda：可设置为 df 或 tff。
IB 模型也需要配置归一化因子，配置方式与 DFR 模型相同。如下：&lt;/li>
&lt;/ul>
&lt;style>
.td-content .highlight {
margin-top: 0.5rem;
margin-bottom: 0.5rem;
}
.code-collapse1 {
overflow-y: auto;
max-height: 500px;
overflow-x: auto;
max-width: 100%;
}
&lt;/style>
&lt;div class="code-collapse1">
&lt;div class="highlight">&lt;div style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">
&lt;table style="border-spacing:0;padding:0;margin:0;border:0;">&lt;tr>&lt;td style="vertical-align:top;padding:0;margin:0;border:0;">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">1
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">2
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">3
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">4
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">5
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">6
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">7
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">8
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">9
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-json" data-lang="json">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c41a16">&amp;#34;similarity&amp;#34;&lt;/span>&lt;span style="color:#000">:&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">&amp;#34;esserverboook_ib_similarity&amp;#34;&lt;/span>: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">&amp;#34;type&amp;#34;&lt;/span>: &lt;span style="color:#c41a16">&amp;#34;IB&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">&amp;#34;basic_model&amp;#34;&lt;/span>: &lt;span style="color:#c41a16">&amp;#34;ll&amp;#34;&lt;/span>&lt;span style="color:#000">，&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c41a16">&amp;#34;after_effect&amp;#34;&lt;/span>: &lt;span style="color:#c41a16">&amp;#34;df&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">&amp;#34;normalization&amp;#34;&lt;/span>: &lt;span style="color:#c41a16">&amp;#34;z&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">&amp;#34;normalization.z.z&amp;#34;&lt;/span>: &lt;span style="color:#c41a16">&amp;#34;0.25&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;h2 id="使用编解码器">使用编解码器&lt;/h2>
&lt;p>Lucene 4.0 的一个显著变化是允许用户改变索引文件编码方式。在此之前之前只能通过修改内核代码来实现。它提供了灵活的索引方式，允许用户改变倒排索引的写入方式。&lt;/p>
&lt;h3 id="简单使用范例">简单使用范例&lt;/h3>
&lt;p>需要改变索引写入格式的理由之一是性能。某些字段需要特殊处理，如主键，借助一些技术，主键值能很快被搜索到。还可以使用 SimpleTextCode 来调试代码，以便了解写入索引中的数据格式。&lt;/p>
&lt;blockquote>
&lt;p>编解码器是 Lucene 提供的功能，ES 并没有相应的接口。&lt;/p>
&lt;/blockquote>
&lt;h3 id="工作原理解释">工作原理解释&lt;/h3>
&lt;p>假设 posts 索引有如下映射：&lt;/p>
&lt;style>
.highlight {
overflow-y: auto;
max-height: 500px;
overflow-x: auto;
max-width: 130%;
}
.td-content .highlight {
margin-top: 0.5rem;
margin-bottom: 0.5rem;
}
&lt;/style>
&lt;details class="code-collapse">
&lt;summary>Expand/Collapse Code Block&lt;/summary>
&lt;div class="highlight">&lt;div style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">
&lt;table style="border-spacing:0;padding:0;margin:0;border:0;">&lt;tr>&lt;td style="vertical-align:top;padding:0;margin:0;border:0;">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 1
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 2
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 3
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 4
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 5
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 6
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 7
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 8
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 9
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">10
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">11
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">12
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">13
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">14
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">15
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">16
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">17
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">18
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">19
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">20
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">21
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">22
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">23
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-json" data-lang="json">&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">&amp;#34;mappings&amp;#34;&lt;/span>: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">&amp;#34;post&amp;#34;&lt;/span>: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">&amp;#34;properties&amp;#34;&lt;/span>: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">&amp;#34;id&amp;#34;&lt;/span>: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">&amp;#34;type&amp;#34;&lt;/span>: &lt;span style="color:#c41a16">&amp;#34;long&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">&amp;#34;store&amp;#34;&lt;/span>: &lt;span style="color:#c41a16">&amp;#34;yes&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">&amp;#34;precision_step&amp;#34;&lt;/span>: &lt;span style="color:#c41a16">&amp;#34;0&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> },
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">&amp;#34;name&amp;#34;&lt;/span>: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">&amp;#34;type&amp;#34;&lt;/span>: &lt;span style="color:#c41a16">&amp;#34;string&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">&amp;#34;store&amp;#34;&lt;/span>: &lt;span style="color:#c41a16">&amp;#34;yes&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">&amp;#34;index&amp;#34;&lt;/span>: &lt;span style="color:#c41a16">&amp;#34;analyzed&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> },
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">&amp;#34;contents&amp;#34;&lt;/span>: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">&amp;#34;type&amp;#34;&lt;/span>: &lt;span style="color:#c41a16">&amp;#34;string&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">&amp;#34;store&amp;#34;&lt;/span>: &lt;span style="color:#c41a16">&amp;#34;no&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">&amp;#34;index&amp;#34;&lt;/span>: &lt;span style="color:#c41a16">&amp;#34;analyzed&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;/details>
&lt;br/>
&lt;p>编解码器需要逐字段配置。为了配置某个字段使用特定的编解码器，需要在字段配置文件中添加 postings_format 属性，并赋值如 plusing。如下：
&lt;style>
.highlight {
overflow-y: auto;
max-height: 500px;
overflow-x: auto;
max-width: 130%;
}
.td-content .highlight {
margin-top: 0.5rem;
margin-bottom: 0.5rem;
}
&lt;/style>
&lt;details class="code-collapse">
&lt;summary>Expand/Collapse Code Block&lt;/summary>
&lt;div class="highlight">&lt;div style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">
&lt;table style="border-spacing:0;padding:0;margin:0;border:0;">&lt;tr>&lt;td style="vertical-align:top;padding:0;margin:0;border:0;">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 1
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 2
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 3
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 4
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 5
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 6
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 7
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 8
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 9
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">10
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">11
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">12
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">13
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">14
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">15
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">16
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">17
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">18
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">19
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">20
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">21
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">22
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">23
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">24
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-json" data-lang="json">&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">&amp;#34;mappings&amp;#34;&lt;/span>: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">&amp;#34;post&amp;#34;&lt;/span>: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">&amp;#34;properties&amp;#34;&lt;/span>: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">&amp;#34;id&amp;#34;&lt;/span>: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">&amp;#34;type&amp;#34;&lt;/span>: &lt;span style="color:#c41a16">&amp;#34;long&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">&amp;#34;store&amp;#34;&lt;/span>: &lt;span style="color:#c41a16">&amp;#34;yes&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">&amp;#34;precision_step&amp;#34;&lt;/span>: &lt;span style="color:#c41a16">&amp;#34;0&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">&amp;#34;postings_format&amp;#34;&lt;/span>: &lt;span style="color:#c41a16">&amp;#34;plusing&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> },
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">&amp;#34;name&amp;#34;&lt;/span>: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">&amp;#34;type&amp;#34;&lt;/span>: &lt;span style="color:#c41a16">&amp;#34;string&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">&amp;#34;store&amp;#34;&lt;/span>: &lt;span style="color:#c41a16">&amp;#34;yes&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">&amp;#34;index&amp;#34;&lt;/span>: &lt;span style="color:#c41a16">&amp;#34;analyzed&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> },
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">&amp;#34;contents&amp;#34;&lt;/span>: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">&amp;#34;type&amp;#34;&lt;/span>: &lt;span style="color:#c41a16">&amp;#34;string&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">&amp;#34;store&amp;#34;&lt;/span>: &lt;span style="color:#c41a16">&amp;#34;no&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">&amp;#34;index&amp;#34;&lt;/span>: &lt;span style="color:#c41a16">&amp;#34;analyzed&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;/details>
&lt;br/>&lt;/p>
&lt;p>然后执行以下命令，查看配置是否生效（id字段的编码器类型）：
&lt;style>
.td-content .highlight {
margin-top: 0.5rem;
margin-bottom: 0.5rem;
}
.code-collapse1 {
overflow-y: auto;
max-height: 500px;
overflow-x: auto;
max-width: 100%;
}
&lt;/style>
&lt;div class="code-collapse1">
&lt;div class="highlight">&lt;div style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">
&lt;table style="border-spacing:0;padding:0;margin:0;border:0;">&lt;tr>&lt;td style="vertical-align:top;padding:0;margin:0;border:0;">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>curl -XGET &lt;span style="color:#c41a16">&amp;#39;localhost:9200/posts/_mapping?pretty&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;/div>&lt;/p>
&lt;h3 id="可用的倒排表格式">可用的倒排表格式&lt;/h3>
&lt;ul>
&lt;li>defult：当没有显式配置时，倒排表使用该格式。该格式提供了存储字段（stored field）和词项向量压缩功能。&lt;/li>
&lt;li>plusing：该编码器将高基（high cardinality）字段中的倒排表编码为词项数组，会减少 Lucene 搜索文档时的查找操作。使用该编码器，可以提高在高基字段中的搜索速度。&lt;/li>
&lt;li>direc：该编码器在读索引阶段将词项载入词典，且词项在内存汇总为未压缩状态。该编码器能提升常用字段的查询性能。词项和倒排表数组都需要存储在内存中，非常消耗内存，谨慎使用。&lt;/li>
&lt;li>memory：将所有数据写入磁盘，读取时则使用 FST（Finite State Transducers）结构直接将词项和倒排表载入内存。数据都在内存因而能加速常见词项的查询。&lt;/li>
&lt;li>bloom_default：是 default 编解码器的一种扩展，在这基础上加入了 bloom filter 的处理，且 bloom filter 相关数据会写入磁盘中。当读入索引时，bloom filter 相关数据会被读入内存，用于快速判断某个特定值是否存在。&lt;/li>
&lt;li>bloom_pulsing：pulsing 编解码器的扩展，在其基础上又加入 bloom filter 的处理。&lt;/li>
&lt;/ul>
&lt;h3 id="配置编解码器">配置编解码器&lt;/h3>
&lt;p>custom_default&lt;/p>
&lt;style>
.highlight {
overflow-y: auto;
max-height: 500px;
overflow-x: auto;
max-width: 130%;
}
.td-content .highlight {
margin-top: 0.5rem;
margin-bottom: 0.5rem;
}
&lt;/style>
&lt;details class="code-collapse">
&lt;summary>Expand/Collapse Code Block&lt;/summary>
&lt;div class="highlight">&lt;div style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">
&lt;table style="border-spacing:0;padding:0;margin:0;border:0;">&lt;tr>&lt;td style="vertical-align:top;padding:0;margin:0;border:0;">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 1
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 2
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 3
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 4
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 5
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 6
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 7
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 8
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 9
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">10
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">11
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">12
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">13
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">14
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">15
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">16
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">17
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">18
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">19
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">20
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">21
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">22
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">23
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">24
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">25
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">26
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">27
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">28
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">29
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">30
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">31
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">32
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">33
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">34
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">35
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">36
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">37
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-json" data-lang="json">&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">&amp;#34;settings&amp;#34;&lt;/span>: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">&amp;#34;index&amp;#34;&lt;/span>: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">&amp;#34;codec&amp;#34;&lt;/span>: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">&amp;#34;postings_format&amp;#34;&lt;/span>: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">&amp;#34;custom_default&amp;#34;&lt;/span>: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">&amp;#34;type&amp;#34;&lt;/span>: &lt;span style="color:#c41a16">&amp;#34;default&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">&amp;#34;min_block_size&amp;#34;&lt;/span>: &lt;span style="color:#c41a16">&amp;#34;20&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">&amp;#34;max_block_size&amp;#34;&lt;/span>: &lt;span style="color:#c41a16">&amp;#34;60&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c41a16">&amp;#34;mappings&amp;#34;&lt;/span>: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">&amp;#34;post&amp;#34;&lt;/span>: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">&amp;#34;properties&amp;#34;&lt;/span>: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">&amp;#34;id&amp;#34;&lt;/span>: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">&amp;#34;type&amp;#34;&lt;/span>: &lt;span style="color:#c41a16">&amp;#34;long&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">&amp;#34;store&amp;#34;&lt;/span>: &lt;span style="color:#c41a16">&amp;#34;yes&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">&amp;#34;precision_step&amp;#34;&lt;/span>: &lt;span style="color:#c41a16">&amp;#34;0&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> },
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">&amp;#34;name&amp;#34;&lt;/span>: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">&amp;#34;type&amp;#34;&lt;/span>: &lt;span style="color:#c41a16">&amp;#34;string&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">&amp;#34;store&amp;#34;&lt;/span>: &lt;span style="color:#c41a16">&amp;#34;yes&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">&amp;#34;index&amp;#34;&lt;/span>: &lt;span style="color:#c41a16">&amp;#34;analyzed&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">&amp;#34;postings_format&amp;#34;&lt;/span>: &lt;span style="color:#c41a16">&amp;#34;custom_default&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> },
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">&amp;#34;contents&amp;#34;&lt;/span>: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">&amp;#34;type&amp;#34;&lt;/span>: &lt;span style="color:#c41a16">&amp;#34;string&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">&amp;#34;store&amp;#34;&lt;/span>: &lt;span style="color:#c41a16">&amp;#34;no&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">&amp;#34;index&amp;#34;&lt;/span>: &lt;span style="color:#c41a16">&amp;#34;analyzed&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;/details>
&lt;br/>
&lt;h4 id="default编解码器属性">default编解码器属性&lt;/h4>
&lt;ul>
&lt;li>min_block_size：确定了 Lucene 将词项词典（term dictionary）中的多个词项编码为块（block）时，块中的最小词项数。默认值为25。&lt;/li>
&lt;li>max_block_size：同上，块中的最大词项数。默认值为48。&lt;/li>
&lt;/ul>
&lt;h4 id="direct编解码器属性">direct编解码器属性&lt;/h4>
&lt;ul>
&lt;li>min_skip_count：确定允许写入跳表（skip list）指针的具有相同前缀的词项的最小数量。默认值为8。&lt;/li>
&lt;li>low_freq_cutoff：编解码器使用单个数组对象来存储文档频率（document frequence）低于该参数值的词项的倒排链及位置信息。默认值为12。&lt;/li>
&lt;/ul>
&lt;h4 id="memory-编解码器属性">memory 编解码器属性&lt;/h4>
&lt;ul>
&lt;li>pack_fst：布尔乐行，默认设置为false，用来确认保存倒排链的内存结构是否被打包为 FST（Finite State Transducers）类型。而打包为 FST 类型能减少保存数据所需的内存量。&lt;/li>
&lt;li>acceptable_overhead_ratio：浮点型，指定了内部结构的压缩率，默认值为0.2。值为0时，没有额外的内存消耗，但会导致较低的性能。值为0.5时，将会多付出50%的内存消耗，但能提升性能。值超过1也是可行的，但会导致更多的内存开销。&lt;/li>
&lt;/ul>
&lt;h4 id="pulsing编解码器属性">pulsing编解码器属性&lt;/h4>
&lt;p>除了 default 编解码器的属性外，还有如下：&lt;/p>
&lt;ul>
&lt;li>freq_cut_off：默认为1，表示文档频率阈值，若词项对应的文档频率小于等于该阈值，则将该词项的倒排链写入词典中。&lt;/li>
&lt;/ul>
&lt;h4 id="bloom-filter编码器属性">bloom filter编码器属性&lt;/h4>
&lt;ul>
&lt;li>delegate：用来确定将要被 bloom filter 包装（wrap）的编解码器&lt;/li>
&lt;li>ffp：介于0与1.0之间，用来确定期望的假阳率（false positive probability）。可以依据每个索引段中的文档树设置多个ffp值。例如，默认情况下 10k 个文档时为 0.1，1m 个文档时为 0.03。表示当索引端中文档数大于 10 000 个时 ffp 值使用 0.01，而当文档数超过 1 000 000 时，ffp 值使用 0.03。&lt;/li>
&lt;/ul>
&lt;h2 id="准实时-提交-更新及事务日志">准实时、提交、更新及事务日志&lt;/h2>
&lt;h3 id="索引更新及更新提交">索引更新及更新提交&lt;/h3>
&lt;p>索引期新文档会写入索引段，索引段是独立的 Lucene 索引，这意味查询可以和索引并行，只是不时会有新增的索引段被添加到可被搜索的索引段集合之中。Lucene 通过创建后续的（基于索引只写一次的特性）segments_N 文件来实现此功能，且该文件列举了索引中的索引段。该过程成为提交（committing），Lucene 以一种安全的方式来执行该操作，能确保索引更改以原子操作方式写入索引，即便发生错误，也能保证索引数据的一致性。&lt;/p>
&lt;p>一次提交并不足以保证新索引的数据都能被搜索到，Lucene 使用了一个叫作 Searcher 的抽象类来执行索引的读取。如果索引更新提交了，但 Searcher 实例并没有重新打开，它察觉不到新索引段的加入。Searcher 重新打开的过程叫作刷新（refresh）。考虑性能 Lucene 推迟了耗时的刷新，不会在每次新增一个文档（或批量增加文档）时刷新，但 Searcher 会每秒刷新一次。这已经很频繁了，但有些应用仍然需要更快的刷新频率，需要使用其它技术或评估是否合理。ES 提供了强制刷新的 API，在搜索前执行该命令即可，如：&lt;/p>
&lt;style>
.td-content .highlight {
margin-top: 0.5rem;
margin-bottom: 0.5rem;
}
.code-collapse1 {
overflow-y: auto;
max-height: 500px;
overflow-x: auto;
max-width: 100%;
}
&lt;/style>
&lt;div class="code-collapse1">
&lt;div class="highlight">&lt;div style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">
&lt;table style="border-spacing:0;padding:0;margin:0;border:0;">&lt;tr>&lt;td style="vertical-align:top;padding:0;margin:0;border:0;">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>curl -XGET localhost:9200/test/_refresh
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;h4 id="更新默认的刷新时间">更新默认的刷新时间&lt;/h4>
&lt;p>Searcher 自动刷新时间间隔可以通过以下手段改变：更改 ES 配置文件中的 index.refresh_interval 参数值或者使用配置更新相关的 API。例如：&lt;/p>
&lt;style>
.td-content .highlight {
margin-top: 0.5rem;
margin-bottom: 0.5rem;
}
.code-collapse1 {
overflow-y: auto;
max-height: 500px;
overflow-x: auto;
max-width: 100%;
}
&lt;/style>
&lt;div class="code-collapse1">
&lt;div class="highlight">&lt;div style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">
&lt;table style="border-spacing:0;padding:0;margin:0;border:0;">&lt;tr>&lt;td style="vertical-align:top;padding:0;margin:0;border:0;">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">1
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">2
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">3
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">4
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">5
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>curl -XPUT localhost:9200/test/_setting -d &lt;span style="color:#c41a16">&amp;#39;{
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c41a16"> &amp;#34;index&amp;#34;: {
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c41a16"> &amp;#34;refresh_interval&amp;#34;: &amp;#34;5m&amp;#34;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c41a16"> }
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c41a16">}&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;p>该命令将 Searcher 自动刷新时间间隔更改为 5 分钟。&lt;/p>
&lt;blockquote>
&lt;p>刷新操作很消耗资源，因此刷新间隔时间越长，索引速度越快。如果需要长时间高速建索引，并在建索引结束之前暂不执行查询，可以考虑将 index.refresh_interval 设置为 -1，然后在建索引结束后再将该参数恢复为初始值。&lt;/p>
&lt;/blockquote>
&lt;h3 id="事务日志">事务日志&lt;/h3>
&lt;p>ES 通过使用事务日志（transaction log）来解决写数据失败的问题（磁盘空间不足、设备损坏、没有足够的文件句柄共索引文件使用等），它能保证所有的未提交的事务，而 ES 会不时创建一个新的日志文件用于记录每个事务的后续操作。当有错误发生时就会检查事务日志，必要时会再次执行某些操作，以确保没有提示任何更改信息。且事务日志的相关操作都是自动完成的，用户并不会意识到某个特定时刻触发的更新提交。事务日志中的信息与存储介质之间的同步（同时清空事务日志）称为事务日志刷新（flushing）。&lt;/p>
&lt;blockquote>
&lt;p>注意事务日志刷新与 Searcher 刷新的区别。&lt;/p>
&lt;/blockquote>
&lt;p>除了自动的事务日志刷新以外，还可以使用对应的 API，如使用下面的命令强制将事务日志涉及的所有数据更改操作同步到索引中，并清空事务日志文件：&lt;/p>
&lt;style>
.td-content .highlight {
margin-top: 0.5rem;
margin-bottom: 0.5rem;
}
.code-collapse1 {
overflow-y: auto;
max-height: 500px;
overflow-x: auto;
max-width: 100%;
}
&lt;/style>
&lt;div class="code-collapse1">
&lt;div class="highlight">&lt;div style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">
&lt;table style="border-spacing:0;padding:0;margin:0;border:0;">&lt;tr>&lt;td style="vertical-align:top;padding:0;margin:0;border:0;">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>curl -XGET localhost:9200/_flush
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;p>也可以使用 flush 命令对特定的索引进行事务日志刷新（如 library 索引）：
&lt;style>
.td-content .highlight {
margin-top: 0.5rem;
margin-bottom: 0.5rem;
}
.code-collapse1 {
overflow-y: auto;
max-height: 500px;
overflow-x: auto;
max-width: 100%;
}
&lt;/style>
&lt;div class="code-collapse1">
&lt;div class="highlight">&lt;div style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">
&lt;table style="border-spacing:0;padding:0;margin:0;border:0;">&lt;tr>&lt;td style="vertical-align:top;padding:0;margin:0;border:0;">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">1
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>curl -XGET localhost:9200/library/_flush
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>curl -XGET localhost:9200/library/_refresh &lt;span style="color:#177500"># 紧接着调用Searcher刷新操作，打开一个新Searcher实例&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;/div>&lt;/p>
&lt;h4 id="事务日志相关配置">事务日志相关配置&lt;/h4>
&lt;p>以下参数通过修改 elasticsearch.yml 文件来配置，也可以通过索引配置更新 API 来更改：&lt;/p>
&lt;ul>
&lt;li>index.translog.flush_threshold_period：默认值为30分钟，控制了强制自动事务日志刷新的时间间隔，即便没有新数据写入。强制进行事务日志刷新通常会导致大量的 I/O 操作，因此当事务日志涉及少量数据时，才更适合进行这项操作。&lt;/li>
&lt;li>index.translog.flush_threshold_ops：确定了一个最大操作数，即在上次事务日志刷新以后，当索引更改操作次数超过该参数时，强制进行事务日志刷新操作，默认值为 5000。&lt;/li>
&lt;li>index.translog.flush_threshold_size：确定了事务日志的最大容量，当容量大于等于该参数值，就强制进行事务日志刷新操作，默认值为 200MB。&lt;/li>
&lt;li>index.translog.disable_flush：禁用事务日志刷新。临时性禁用能带来其它便利，如向索引中导入大量文档。
除了修改 elasticsearch.yml 文件的方式，也可以通过设置更新 API 该更改相关配置。如：&lt;/li>
&lt;/ul>
&lt;style>
.td-content .highlight {
margin-top: 0.5rem;
margin-bottom: 0.5rem;
}
.code-collapse1 {
overflow-y: auto;
max-height: 500px;
overflow-x: auto;
max-width: 100%;
}
&lt;/style>
&lt;div class="code-collapse1">
&lt;div class="highlight">&lt;div style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">
&lt;table style="border-spacing:0;padding:0;margin:0;border:0;">&lt;tr>&lt;td style="vertical-align:top;padding:0;margin:0;border:0;">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">1
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">2
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">3
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">4
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">5
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>curl -XPUT localhost:9200/test/_settings -d &lt;span style="color:#c41a16">&amp;#39;{
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c41a16"> &amp;#34;index&amp;#34;: {
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c41a16"> &amp;#34;translog.disable_flush&amp;#34;: true
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c41a16"> }
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c41a16">}&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;h3 id="准实时读取">准实时读取&lt;/h3>
&lt;p>事务日志带来一个免费特性：实时读取（real-time GET），该功能让返回文档各种版本（包括未提交版本）成为可能。实时读取操作从索引中读取数据时，会先检查事务日志中是否有可用的新版本。如果近期索引没有与事务日志同步，那么索引中的数据将会被忽略，事务日志中的最新版本的文档将会被返回。如下命令：&lt;/p>
&lt;style>
.td-content .highlight {
margin-top: 0.5rem;
margin-bottom: 0.5rem;
}
.code-collapse1 {
overflow-y: auto;
max-height: 500px;
overflow-x: auto;
max-width: 100%;
}
&lt;/style>
&lt;div class="code-collapse1">
&lt;div class="highlight">&lt;div style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">
&lt;table style="border-spacing:0;padding:0;margin:0;border:0;">&lt;tr>&lt;td style="vertical-align:top;padding:0;margin:0;border:0;">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>curl -XGET localhost:9200/test/test/1?pretty
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;h2 id="深入理解数据处理">深入理解数据处理&lt;/h2>
&lt;h3 id="输入并不总是文本分析">输入并不总是文本分析&lt;/h3>
&lt;p>创建索引：&lt;/p>
&lt;style>
.td-content .highlight {
margin-top: 0.5rem;
margin-bottom: 0.5rem;
}
.code-collapse1 {
overflow-y: auto;
max-height: 500px;
overflow-x: auto;
max-width: 100%;
}
&lt;/style>
&lt;div class="code-collapse1">
&lt;div class="highlight">&lt;div style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">
&lt;table style="border-spacing:0;padding:0;margin:0;border:0;">&lt;tr>&lt;td style="vertical-align:top;padding:0;margin:0;border:0;">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 1
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 2
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 3
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 4
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 5
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 6
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 7
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 8
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 9
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">10
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">11
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">12
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>curl -XPUT localhost:9200/etst -d &lt;span style="color:#c41a16">&amp;#39;{
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c41a16"> &amp;#34;mappings&amp;#34;: {
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c41a16"> &amp;#34;test&amp;#34;: {
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c41a16"> &amp;#34;properties&amp;#34;: {
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c41a16"> &amp;#34;title&amp;#34;: {
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c41a16"> &amp;#34;type&amp;#34;: &amp;#34;string&amp;#34;,
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c41a16"> &amp;#34;analyzer&amp;#34;: &amp;#34;snowball&amp;#34;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c41a16"> }
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c41a16"> }
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c41a16"> }
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c41a16"> }
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c41a16">}&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;p>添加文档：
&lt;style>
.td-content .highlight {
margin-top: 0.5rem;
margin-bottom: 0.5rem;
}
.code-collapse1 {
overflow-y: auto;
max-height: 500px;
overflow-x: auto;
max-width: 100%;
}
&lt;/style>
&lt;div class="code-collapse1">
&lt;div class="highlight">&lt;div style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">
&lt;table style="border-spacing:0;padding:0;margin:0;border:0;">&lt;tr>&lt;td style="vertical-align:top;padding:0;margin:0;border:0;">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">1
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">2
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>curl -XPUT localhost:922/test/test/1 -d &lt;span style="color:#c41a16">&amp;#39;{
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c41a16"> &amp;#34;title&amp;#34;: &amp;#34;the quick brown fox jumps over the lazy dog&amp;#34;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c41a16">}&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;/div>&lt;/p>
&lt;p>测试命令：
&lt;style>
.td-content .highlight {
margin-top: 0.5rem;
margin-bottom: 0.5rem;
}
.code-collapse1 {
overflow-y: auto;
max-height: 500px;
overflow-x: auto;
max-width: 100%;
}
&lt;/style>
&lt;div class="code-collapse1">
&lt;div class="highlight">&lt;div style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">
&lt;table style="border-spacing:0;padding:0;margin:0;border:0;">&lt;tr>&lt;td style="vertical-align:top;padding:0;margin:0;border:0;">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 1
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 2
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 3
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 4
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 5
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 6
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 7
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 8
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 9
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">10
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">11
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">12
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">13
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">14
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>curl localhost:9200/test/_search?pretty -d &lt;span style="color:#c41a16">&amp;#39;{
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c41a16"> &amp;#34;query&amp;#34;: {
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c41a16"> &amp;#34;term&amp;#34;: {
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c41a16"> &amp;#34;title&amp;#34;: &amp;#34;jumps&amp;#34;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c41a16"> }
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c41a16"> }
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c41a16">}&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>curl localhost:9200/test/_search?pretty -d &lt;span style="color:#c41a16">&amp;#39;{
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c41a16"> &amp;#34;query&amp;#34;: {
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c41a16"> &amp;#34;match&amp;#34;: {
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c41a16"> &amp;#34;title&amp;#34;: &amp;#34;jumps&amp;#34;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c41a16"> }
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c41a16"> }
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c41a16">}&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;/div>&lt;/p>
&lt;p>第一个查询返回了目标文档，而第二个查询没有返回任何结果。该现象与文本分析有关。
通过下面命令来使用文本分析（Analyze）API：&lt;/p>
&lt;style>
.td-content .highlight {
margin-top: 0.5rem;
margin-bottom: 0.5rem;
}
.code-collapse1 {
overflow-y: auto;
max-height: 500px;
overflow-x: auto;
max-width: 100%;
}
&lt;/style>
&lt;div class="code-collapse1">
&lt;div class="highlight">&lt;div style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">
&lt;table style="border-spacing:0;padding:0;margin:0;border:0;">&lt;tr>&lt;td style="vertical-align:top;padding:0;margin:0;border:0;">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>curl &lt;span style="color:#c41a16">&amp;#39;localhost:9200/test/_analyze?text=the+quick+brown+fox+jumps+over+the+lazy+dog&amp;amp;pretty&amp;amp;analyzer=snowball&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;p>端点 _analyze 允许查看 ES 是如何处理 text 参数中的输入，也能指定要使用哪个分析器（通过 analyzer 参数）。
上面命令的返回结果会发现：每个词条都携带了在原始文本中的位置信息、类型信息（过滤器可能用到）、词项信息（一个词存储在索引中，在检索其用于与查询中的词项匹配）。原始文本被转换成了这些词项：quick、brown、fox、jump、over、lazi（有趣的变化）、dog。总计 snowball 分词器做了哪些事情：&lt;/p>
&lt;ul>
&lt;li>过滤非重要次（如 the）&lt;/li>
&lt;li>将单词转换为词干形式（如 jump）&lt;/li>
&lt;li>有时会进行操作的转换（如 lazi）
第二个测试范例：&lt;/li>
&lt;/ul>
&lt;style>
.td-content .highlight {
margin-top: 0.5rem;
margin-bottom: 0.5rem;
}
.code-collapse1 {
overflow-y: auto;
max-height: 500px;
overflow-x: auto;
max-width: 100%;
}
&lt;/style>
&lt;div class="code-collapse1">
&lt;div class="highlight">&lt;div style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">
&lt;table style="border-spacing:0;padding:0;margin:0;border:0;">&lt;tr>&lt;td style="vertical-align:top;padding:0;margin:0;border:0;">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 1
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 2
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 3
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 4
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 5
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 6
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 7
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 8
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 9
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">10
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">11
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">12
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">13
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">14
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>curl localhost:9200/test/_search?pretty -d &lt;span style="color:#c41a16">&amp;#39;{
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c41a16"> &amp;#34;query&amp;#34;: {
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c41a16"> &amp;#34;prefix&amp;#34;: {
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c41a16"> &amp;#34;title&amp;#34;: &amp;#34;lazy&amp;#34;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c41a16"> }
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c41a16"> }
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c41a16">}&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>curl localhost:9200/test/_search?pretty -d &lt;span style="color:#c41a16">&amp;#39;{
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c41a16"> &amp;#34;query&amp;#34;: {
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c41a16"> &amp;#34;match_phrase_prefix&amp;#34;: {
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c41a16"> &amp;#34;title&amp;#34;: &amp;#34;lazy&amp;#34;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c41a16"> }
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c41a16"> }
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c41a16">}&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;p>查询结果：第一个没有返回（因为查询中的 lazy 文本与索引中的 lazi 并不相同），而第二个查询经过分词器处理，返回了预期的文档。&lt;/p>
&lt;h3 id="范例的使用">范例的使用&lt;/h3>
&lt;p>从概率的角度来看，与查询短语在文本上精确撇配的文档应该是用户最感兴趣的。从另一个重要指标来看，与用户输入短语中词语精确匹配的文档才是用户感兴趣的。这里的词语精确匹配既可以是语义上相同也可以是同一个词的不同形态。&lt;/p>
&lt;p>创建一个只包含单字段文档的索引：&lt;/p>
&lt;style>
.highlight {
overflow-y: auto;
max-height: 500px;
overflow-x: auto;
max-width: 130%;
}
.td-content .highlight {
margin-top: 0.5rem;
margin-bottom: 0.5rem;
}
&lt;/style>
&lt;details class="code-collapse">
&lt;summary>Expand/Collapse Code Block&lt;/summary>
&lt;div class="highlight">&lt;div style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">
&lt;table style="border-spacing:0;padding:0;margin:0;border:0;">&lt;tr>&lt;td style="vertical-align:top;padding:0;margin:0;border:0;">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 1
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 2
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 3
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 4
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 5
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 6
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 7
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 8
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 9
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">10
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">11
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">12
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">13
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">14
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">15
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">16
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">17
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">18
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">19
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">20
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">21
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">22
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">23
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">24
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">25
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">26
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>curl -XPUT localhost:9200/test -d &lt;span style="color:#c41a16">&amp;#39;{
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c41a16"> &amp;#34;mappings&amp;#34;: {
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c41a16"> &amp;#34;test&amp;#34;: {
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c41a16"> &amp;#34;properties&amp;#34;: {
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c41a16"> &amp;#34;lang&amp;#34;: {
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c41a16"> &amp;#34;type&amp;#34;: &amp;#34;string&amp;#34;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c41a16"> },
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c41a16"> &amp;#34;title&amp;#34;: {
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c41a16"> &amp;#34;type&amp;#34;: &amp;#34;multi_field&amp;#34;,
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c41a16"> &amp;#34;fields&amp;#34;: {
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c41a16"> &amp;#34;i18n&amp;#34;: {
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c41a16"> &amp;#34;type&amp;#34;: &amp;#34;string&amp;#34;,
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c41a16"> &amp;#34;index&amp;#34;: &amp;#34;analyzed&amp;#34;,
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c41a16"> &amp;#34;analyzer&amp;#34;: &amp;#34;english&amp;#34;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c41a16"> },
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c41a16"> &amp;#34;org&amp;#34;: {
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c41a16"> &amp;#34;type&amp;#34;: &amp;#34;string&amp;#34;,
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c41a16"> &amp;#34;index&amp;#34;: &amp;#34;analyzed&amp;#34;,
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c41a16"> &amp;#34;analyzer&amp;#34;: &amp;#34;standard&amp;#34;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c41a16"> }
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c41a16"> }
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c41a16"> }
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c41a16"> }
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c41a16"> }
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c41a16"> }
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c41a16">}&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;/details>
&lt;br/>
&lt;p>一个字段使用了两个分析器进行文本分析处理，因为 title 字段是 multi_field 类型。其中对 title.org 子字段使用了 standard 分析器，而对 title.i18n 子字段使用了 english 分析器（该分词器会将用户输入转换为词干形式）。
添加文档：&lt;/p>
&lt;style>
.td-content .highlight {
margin-top: 0.5rem;
margin-bottom: 0.5rem;
}
.code-collapse1 {
overflow-y: auto;
max-height: 500px;
overflow-x: auto;
max-width: 100%;
}
&lt;/style>
&lt;div class="code-collapse1">
&lt;div class="highlight">&lt;div style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">
&lt;table style="border-spacing:0;padding:0;margin:0;border:0;">&lt;tr>&lt;td style="vertical-align:top;padding:0;margin:0;border:0;">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>curl -XPUT localhost:9200/test/test/1 -d &lt;span style="color:#c41a16">&amp;#39;{&amp;#34;title&amp;#34;: &amp;#34;The quick brown fox jumps over the lazy dog.&amp;#34;}&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;p>此时，索引中的 title.dog 字段已有 jumps 词项，而 title.i18n 字段也有了jump词项。执行以下查询：
&lt;style>
.td-content .highlight {
margin-top: 0.5rem;
margin-bottom: 0.5rem;
}
.code-collapse1 {
overflow-y: auto;
max-height: 500px;
overflow-x: auto;
max-width: 100%;
}
&lt;/style>
&lt;div class="code-collapse1">
&lt;div class="highlight">&lt;div style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">
&lt;table style="border-spacing:0;padding:0;margin:0;border:0;">&lt;tr>&lt;td style="vertical-align:top;padding:0;margin:0;border:0;">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">1
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">2
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">3
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">4
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">5
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">6
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">7
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">8
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>curl localhost:9200/test/_search?pretty -d &lt;span style="color:#c41a16">&amp;#39;{
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c41a16"> &amp;#34;query&amp;#34;: {
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c41a16"> &amp;#34;multi_match&amp;#34;: {
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c41a16"> &amp;#34;query&amp;#34;: &amp;#34;jumps&amp;#34;,
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c41a16"> &amp;#34;fields&amp;#34;: [&amp;#34;title.org^1000&amp;#34;, &amp;#34;title.i18n&amp;#34;]
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c41a16"> }
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c41a16"> }
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c41a16">}&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;/div>&lt;/p>
&lt;p>文档由于跟查询完美匹配获得了较高的得分，归功于对 field.org 字段的命中做了加权处理。field.i18n 字段的命中也贡献了部分得分，只是对总得分影响小很多，因为其默认权值为1。&lt;/p>
&lt;h3 id="索引期更换分词器">索引期更换分词器&lt;/h3>
&lt;style>
.highlight {
overflow-y: auto;
max-height: 500px;
overflow-x: auto;
max-width: 130%;
}
.td-content .highlight {
margin-top: 0.5rem;
margin-bottom: 0.5rem;
}
&lt;/style>
&lt;details class="code-collapse">
&lt;summary>Expand/Collapse Code Block&lt;/summary>
&lt;div class="highlight">&lt;div style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">
&lt;table style="border-spacing:0;padding:0;margin:0;border:0;">&lt;tr>&lt;td style="vertical-align:top;padding:0;margin:0;border:0;">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 1
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 2
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 3
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 4
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 5
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 6
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 7
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 8
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 9
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">10
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">11
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">12
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">13
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">14
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">15
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">16
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">17
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">18
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">19
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">20
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">21
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">22
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">23
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">24
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">25
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">26
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">27
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">28
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>curl -XPUT localhost:9200/test -d &lt;span style="color:#c41a16">&amp;#39;{
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c41a16"> &amp;#34;mappings&amp;#34;: {
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c41a16"> &amp;#34;test&amp;#34;: {
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c41a16"> &amp;#34;_analyzer&amp;#34;: {
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c41a16"> &amp;#34;path&amp;#34;: &amp;#34;lang&amp;#34;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c41a16"> }
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c41a16"> &amp;#34;properties&amp;#34;: {
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c41a16"> &amp;#34;lang&amp;#34;: {
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c41a16"> &amp;#34;type&amp;#34;: &amp;#34;string&amp;#34;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c41a16"> },
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c41a16"> &amp;#34;title&amp;#34;: {
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c41a16"> &amp;#34;type&amp;#34;: &amp;#34;multi_field&amp;#34;,
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c41a16"> &amp;#34;fields&amp;#34;: {
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c41a16"> &amp;#34;i18n&amp;#34;: {
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c41a16"> &amp;#34;type&amp;#34;: &amp;#34;string&amp;#34;,
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c41a16"> &amp;#34;index&amp;#34;: &amp;#34;analyzed&amp;#34;,
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c41a16"> },
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c41a16"> &amp;#34;org&amp;#34;: {
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c41a16"> &amp;#34;type&amp;#34;: &amp;#34;string&amp;#34;,
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c41a16"> &amp;#34;index&amp;#34;: &amp;#34;analyzed&amp;#34;,
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c41a16"> &amp;#34;analyzer&amp;#34;: &amp;#34;standard&amp;#34;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c41a16"> }
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c41a16"> }
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c41a16"> }
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c41a16"> }
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c41a16"> }
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c41a16"> }
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c41a16">}&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;/details>
&lt;br/>
&lt;p>允许 ES 在处理文本时根据文本内容决定采用何种分析器。path 参数为文档中的字段名，该字段保存了分析器的名称。其次移除了 field.i18n 字段所用分析器的定义。
创建索引：&lt;/p>
&lt;style>
.td-content .highlight {
margin-top: 0.5rem;
margin-bottom: 0.5rem;
}
.code-collapse1 {
overflow-y: auto;
max-height: 500px;
overflow-x: auto;
max-width: 100%;
}
&lt;/style>
&lt;div class="code-collapse1">
&lt;div class="highlight">&lt;div style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">
&lt;table style="border-spacing:0;padding:0;margin:0;border:0;">&lt;tr>&lt;td style="vertical-align:top;padding:0;margin:0;border:0;">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>curl -XPUT localhost:9200/test/test/1 -d &lt;span style="color:#c41a16">&amp;#39;{&amp;#34;title&amp;#34;: &amp;#34;The quick brown fox jumps over the lazy dog.&amp;#34;, &amp;#34;lang&amp;#34;: &amp;#34;english&amp;#34;}&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;p>这个例子 ES 从索引中提取 lang 字段的值，并将该值代表的分析器置于当前文档的文本分析器处理。如在文档中移除或保留非重要词等场景非常有用。&lt;/p>
&lt;h3 id="搜索时更换分析器">搜索时更换分析器&lt;/h3>
&lt;p>也可以在搜索时更换分词器，并通过配置 analyzer 属性来实现。如：&lt;/p>
&lt;style>
.td-content .highlight {
margin-top: 0.5rem;
margin-bottom: 0.5rem;
}
.code-collapse1 {
overflow-y: auto;
max-height: 500px;
overflow-x: auto;
max-width: 100%;
}
&lt;/style>
&lt;div class="code-collapse1">
&lt;div class="highlight">&lt;div style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">
&lt;table style="border-spacing:0;padding:0;margin:0;border:0;">&lt;tr>&lt;td style="vertical-align:top;padding:0;margin:0;border:0;">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">1
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">2
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">3
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">4
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">5
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">6
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">7
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">8
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">9
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>curl localhost:9200/test/_search?pretty -d &lt;span style="color:#c41a16">&amp;#39;{
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c41a16"> &amp;#34;query&amp;#34;: {
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c41a16"> &amp;#34;multi_match&amp;#34;: {
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c41a16"> &amp;#34;query&amp;#34;: &amp;#34;jumps&amp;#34;,
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c41a16"> &amp;#34;fields&amp;#34;: [&amp;#34;title.org^100&amp;#34;, &amp;#34;title.i18n&amp;#34;],
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c41a16"> &amp;#34;analyzer&amp;#34;: &amp;#34;english&amp;#34;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c41a16"> }
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c41a16"> }
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c41a16">}&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;h3 id="陷进与默认分析">陷进与默认分析&lt;/h3>
&lt;p>索引期与检索期能针对文档更换分词器的机制是一个非常有用的特性，但也会引入非常隐蔽的错误。如没有定义分析器。这种情况 ES 会选用一个默认分析器，但这不是我们期望的。因为默认分析器有时候会被文本分析插件模块重定义。此时有必要指定默认分析器，如将自定义的分析器名称替换为default。&lt;/p>
&lt;blockquote>
&lt;p>备选方案，定义 default_index 分析器和 default_search 分析器。&lt;/p>
&lt;/blockquote>
&lt;h2 id="控制索引合并">控制索引合并&lt;/h2>
&lt;p>ES 每个索引都会创建一到多个分片以及零到多个副本，本质上都是 Lucene 索引（基于多个索引端构建，至少一个）。索引文件绝大部分数据都是只写一次、读多次，自由用于保存文档删除信息的文件才会被多次更改。某种情况满足条件时，多个索引段会被拷贝合并到一个更大的索引段，而旧的索引段会被抛弃并从磁盘中删除，这个操作称为段合并（segment merging）。&lt;/p>
&lt;p>段合并的原因：&lt;/p>
&lt;p>1、索引段个数越多，搜索性能越低且耗费内存更多。&lt;/p>
&lt;p>2、索引段是不可变的，物理上并不能从中删除信息。&lt;/p>
&lt;p>3、碰巧索引中删除了大量文档，但文档只做了删除标记，物理机上没有被删除。段合并时，标记为删除的文档并没有复制到新的索引段中。因此减少了最终索引端中的文档数。&lt;/p>
&lt;p>从用户角度段合并可概括为：&lt;/p>
&lt;p>1、当多个索引端合并为一个时，会减少索引段的数量并提高搜索速度。&lt;/p>
&lt;p>2、同时也会减少索引的容量（文档数），因为在段合并时会移除被标记为已删除的文档。&lt;/p>
&lt;p>段合并的代价主要是 I/O 操作。在速度较慢的系统中会显著影响性能。因此 ES 允许用户选择段合并策略（merge policy）及存储级节流（store level throttling）&lt;/p>
&lt;h3 id="选择正确的合并策略">选择正确的合并策略&lt;/h3>
&lt;p>三种可用的合并策略：&lt;/p>
&lt;ul>
&lt;li>tiered（默认）&lt;/li>
&lt;li>log_byte_size&lt;/li>
&lt;li>log_doc
配置文件的 index.merge.policy.type 字段：&lt;/li>
&lt;/ul>
&lt;style>
.td-content .highlight {
margin-top: 0.5rem;
margin-bottom: 0.5rem;
}
.code-collapse1 {
overflow-y: auto;
max-height: 500px;
overflow-x: auto;
max-width: 100%;
}
&lt;/style>
&lt;div class="code-collapse1">
&lt;div class="highlight">&lt;div style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">
&lt;table style="border-spacing:0;padding:0;margin:0;border:0;">&lt;tr>&lt;td style="vertical-align:top;padding:0;margin:0;border:0;">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-plain" data-lang="plain">&lt;span style="display:flex;">&lt;span>index.merge.policy.type: tiered
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;blockquote>
&lt;p>一旦使用特定的段合并策略创建了索引，就不能被改变。但是可以使用索引更新API来改变该段合并策略的参数值。&lt;/p>
&lt;/blockquote>
&lt;h4 id="tiered合并策略">tiered合并策略&lt;/h4>
&lt;p>ES 默认选项。能合并大小相似的索引段，并考虑每层允许的索引段的最大个数。需要注意单次可合并的索引段的个数与每层允许的索引段数的区别。&lt;/p>
&lt;p>索引期，合并策略会计算索引中允许出现的索引段个数，称为阈值（budget）。如果正在构建的索引中的段数超过了阈值，该策略将先对索引段按容量降序排序（这里考虑了被标记为已删除的文档），然后再选择一个成本最低的合并。合并成本的计算方法倾向于回收更多删除文档和产生更小的索引段。&lt;/p>
&lt;p>如果某次合并产生的索引段的大小大于 index.merge.policy.max_merged 参数值，则该合并策略会选择更少的索引段参与合并，是的生成的索引段大小小于阈值。即对于有多个分片的索引，默认的 index.merge.policy.max_merged 则显得过小，会导致大量索引段的创建，从而降低查询速度。用户应根据具体的数据量观察索引段的情况，不断调整合并策略以满足需求。&lt;/p>
&lt;h4 id="log-byte-zise合并策略">log byte zise合并策略&lt;/h4>
&lt;p>该策略会不断地以字节数的对数为计算单位，选择多个索引来合并创建新索引。合并过程中，会出现一些较大的索引段，然后又产生出一些小于合并因子（merge factor）的索引段，如此循环往复。可以想象一些相同数量级的索引段，其个数会变得比合并因子还少。对一些特别大的索引段，所有小于该级别的索引段都会被合并。索引中的索引段个数与下次用于计算的字节数的对数成正比。因此，该合并策略能够保持较少的索引段数量并且极少化段索引合并的代价。&lt;/p>
&lt;h4 id="log-doc合并策略">log doc合并策略&lt;/h4>
&lt;p>与 log_byte_size 合并策略类似，不同的是 log_byte_size 基于索引的字节数计算，而 log_doc 基于索引段的文档数计算。以下两种情况该合并策略表现良好：&lt;/p>
&lt;ul>
&lt;li>文档集中的文档大小类似&lt;/li>
&lt;li>参数合并的索引段在文档数方面相当&lt;/li>
&lt;/ul>
&lt;h3 id="合并策略配置">合并策略配置&lt;/h3>
&lt;p>大多数情况下默认选项是够用的，除非有特殊的需求才需要修改。&lt;/p>
&lt;h4 id="配置tiered合并策略">配置tiered合并策略&lt;/h4>
&lt;ul>
&lt;li>index.merge.policy.expunge_deletes_allowed：默认值为0，用于确定被删除文档的百分比，当执行 expungeDeletes 时，该参数用于确定索引段是否被合并。&lt;/li>
&lt;li>index.merge.policy.floor_segment：用于阻止频繁刷新微小索引段。小于该值的索引段由索引合并机制处理，并将这些索引段的大小作为该参数值。默认值为 2MB。&lt;/li>
&lt;li>index.merge.policy.max_merge_at_once：确定了索引期单次合并涉及的索引段数量的上限，默认为10.该值较大时，允许更多的索引段参与单次合并，只是会消耗更多的 I/O 资源。&lt;/li>
&lt;li>index.merge.policy.max_merge_at_once_explicit：确定索引优化（optimize）操作和expungeDeletes 操作能参与的索引段数量的上限，默认值为30。但该值对索引期参与合并的索引段数量的上限没有影响。&lt;/li>
&lt;li>index.merge.policy.max_merged_segment：默认值为 5GB，确定了索引期单次合并中产生的索引段大小的上限。这是一个近似值，因为合并后产生的索引段的大小是通过累加参与合并的索引段的大小并减去被删除文档的大小而得来的。&lt;/li>
&lt;li>index.merge.policy.segments_per_tier：确定每层允许出现的索引段数量的上限。越小的参数值会导致更少的索引段数量，意味更多的合并操作以及更低的索引性能。默认值为10，建议设置为大于等于 idnex.merge.policy.max_merge_at_once，否则会遇到很多与索引合并以及性能相关的问题。&lt;/li>
&lt;li>index.reclaim_deletes_weight：默认为 2.0，确定了索引合并操作中清除被删除文档这个因素的权重。如果设置为 0.0，则清除被删除文档对索引合并并没有影响。该值越高，则清除较多被删除文档的合并会更受合并策略青睐。&lt;/li>
&lt;li>index.compund_format：布尔型，确定了索引是否存储为复合文件格式（compound format），默认值为 false。true 则 Lucene 会将所有文件存储在一个文件中。这样设置有时能解决操作系统打开文件处理器过多的问题，但也会降低索引和搜索的性能。&lt;/li>
&lt;li>index.merge.async：布尔型，用来确定索引合并是否异步进行。默认为 true。&lt;/li>
&lt;li>index.merge.async_interval：当 index.merge.async 设置为 true 时（异步进行），该值确定了两次合并的时间间隔，默认为 1s。为了触发真正的索引合并以及索引段数量缩减操作，该值应该保持为一个较小值。&lt;/li>
&lt;/ul>
&lt;h4 id="配置log-byte-size合并策略">配置log byte size合并策略&lt;/h4>
&lt;ul>
&lt;li>merge_factor：确定索引期间索引段以多大的频率进行合并。值越小搜索的速度越快，消耗的内存也越小，而代价则是更慢的索引速度。反之亦然。默认为 10，对于批量索引构建，可以设置较大的值，对于日常索引维护则可采用默认值。&lt;/li>
&lt;li>min_merge_size：定义了索引段可能的最小容量（段中所有文件的字节数）。如果索引段大小小于该参数值，且 merge_fator 参数值允许，则进行索引段合并。该参数默认值为 1.6MB，对于避免产生大量小索引段非常有用。设置较大值时，会导致较高的合并成本。&lt;/li>
&lt;li>max_merge_size：定义了允许参与合并的索引段的最大容量（以字节为单位）。默认不做设置，因而在索引合并时对索引段大小没有限制。&lt;/li>
&lt;li>maxMergeDocs：定义了参与合并的索引段的最大文档数。默认没有设置，因此当索引合并时对索引段没有最大文档数的限制。&lt;/li>
&lt;li>calibrate_size_by_deletes：该参数为布尔值，如果设置为 true，则段中被删除文档的大小会用于索引段大小的计算。&lt;/li>
&lt;li>index.compund_format：布尔值，确定了索引文件是否存储为复合文件格式，默认为 false。可参考 tiered 合并策略配置中该选项的解释。&lt;/li>
&lt;/ul>
&lt;h4 id="配置log-doc合并策略">配置log doc合并策略&lt;/h4>
&lt;ul>
&lt;li>merge_factor：同上&lt;/li>
&lt;li>min_merge_docs：定义饿了最小索引段允许的最小文档数。如果某索引段的文档数低于该参数值，且 merge_factor 参数允许，就会执行索引合并。该参数默认值为 1000，对于避免产生大量小索引段非常有用。过大会增大索引合并的代价。&lt;/li>
&lt;li>max_merge_docs：定义了可参与索引合并的索引段的最大文档数。默认情况下，该参数没有设置，因而对参与索引合并的索引段的最大文档数没有限制。&lt;/li>
&lt;li>calibrate_size_by_deletes：布尔值，设置为 true，则段中被删除文档的大小会在计算索引段大小时考虑进去。&lt;/li>
&lt;li>index.compund_format：布尔值，确定了索引文件是否存储为复合文件格式，默认为 false。同上。&lt;/li>
&lt;/ul>
&lt;h3 id="调度">调度&lt;/h3>
&lt;p>除了可以影响索引合并策略的行为之外，ES 还允许定制合并策略的执行方式。索引合并调度器（scheduler）分为两种，默认的是并发合并调度器 ConcurrentMergeScheduler。&lt;/p>
&lt;h4 id="并发合并调度">并发合并调度&lt;/h4>
&lt;p>该调度器使用多线程执行索引合并操作。具体过程是：每次开启一个新线程知道线程数达到上限，当达到上限时，必须开启新线层（因为需要进行新的段合并），那么所有索引操作将被挂起，直到至少一个索引合并操作完成。&lt;/p>
&lt;p>为了控制最大线程数，可以通过修改 index.merge.scheduler.max_thread_count 属性来实现。一般可以按照如下公式来计算允许的最大线程数：&lt;/p>
&lt;style>
.td-content .highlight {
margin-top: 0.5rem;
margin-bottom: 0.5rem;
}
.code-collapse1 {
overflow-y: auto;
max-height: 500px;
overflow-x: auto;
max-width: 100%;
}
&lt;/style>
&lt;div class="code-collapse1">
&lt;div class="highlight">&lt;div style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">
&lt;table style="border-spacing:0;padding:0;margin:0;border:0;">&lt;tr>&lt;td style="vertical-align:top;padding:0;margin:0;border:0;">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-plain" data-lang="plain">&lt;span style="display:flex;">&lt;span>maximum_value(1, minimum_value(3, available_processors / 2))
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;p>如何系统是 8 核，那么调度器允许的最大线程数可以设置为 4。&lt;/p>
&lt;h4 id="顺序合并调度">顺序合并调度&lt;/h4>
&lt;p>使用同一个线程执行所有的索引合并操作。执行合并时，该线程的其它文档处理都会被挂起，从而索引操作会延迟进行。&lt;/p>
&lt;h4 id="设置合并调度">设置合并调度&lt;/h4>
&lt;p>为了设置特定的索引合并调度器，用户可将 index.merge.scheduler.type 的属性值设置为 concurrent 或 serial。如使用并发合并调度器：&lt;/p>
&lt;style>
.td-content .highlight {
margin-top: 0.5rem;
margin-bottom: 0.5rem;
}
.code-collapse1 {
overflow-y: auto;
max-height: 500px;
overflow-x: auto;
max-width: 100%;
}
&lt;/style>
&lt;div class="code-collapse1">
&lt;div class="highlight">&lt;div style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">
&lt;table style="border-spacing:0;padding:0;margin:0;border:0;">&lt;tr>&lt;td style="vertical-align:top;padding:0;margin:0;border:0;">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-plain" data-lang="plain">&lt;span style="display:flex;">&lt;span>index.merge.scheduler.type: concurrent
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;p>使用顺序合并调度器：
&lt;style>
.td-content .highlight {
margin-top: 0.5rem;
margin-bottom: 0.5rem;
}
.code-collapse1 {
overflow-y: auto;
max-height: 500px;
overflow-x: auto;
max-width: 100%;
}
&lt;/style>
&lt;div class="code-collapse1">
&lt;div class="highlight">&lt;div style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">
&lt;table style="border-spacing:0;padding:0;margin:0;border:0;">&lt;tr>&lt;td style="vertical-align:top;padding:0;margin:0;border:0;">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-plain" data-lang="plain">&lt;span style="display:flex;">&lt;span>index.merge.scheduler.type: serial
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;/div>&lt;/p>
&lt;h2 id="小结">小结&lt;/h2>
&lt;p>本章学习了如何使用不同的评分公式及其好处，也了解了不同的倒排索引格式及其优点。还介绍了准实时搜索和实时读取以及 Searcher 刷新对 ES 的意义。另外还讨论了多语言数据处理和如何按需配置事务日志，最后介绍了索引的段合并、合并策略以及调度。&lt;/p></description></item><item><title>Docs: 深入理解ES-04分布式索引架构</title><link>/docs/44.%E6%90%9C%E7%B4%A2/%E6%B7%B1%E5%85%A5%E7%90%86%E8%A7%A3ElasticSearch/%E6%B7%B1%E5%85%A5%E7%90%86%E8%A7%A3ES-04%E5%88%86%E5%B8%83%E5%BC%8F%E7%B4%A2%E5%BC%95%E6%9E%B6%E6%9E%84/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/docs/44.%E6%90%9C%E7%B4%A2/%E6%B7%B1%E5%85%A5%E7%90%86%E8%A7%A3ElasticSearch/%E6%B7%B1%E5%85%A5%E7%90%86%E8%A7%A3ES-04%E5%88%86%E5%B8%83%E5%BC%8F%E7%B4%A2%E5%BC%95%E6%9E%B6%E6%9E%84/</guid><description>
&lt;p>本章将学习以下内容：&lt;/p>
&lt;ul>
&lt;li>如何为集群选择合适的分片数和副本数&lt;/li>
&lt;li>路由是什么以及它对ES的意义&lt;/li>
&lt;li>分片分配器如何工作、配置&lt;/li>
&lt;li>怎样调节分片分配机制以满足应用需求&lt;/li>
&lt;li>怎样确定应该在哪个分片上执行指定的操作&lt;/li>
&lt;li>如何应对数据和查询数量的增长&lt;/li>
&lt;/ul>
&lt;h2 id="选择合适的分片和副本数">选择合适的分片和副本数&lt;/h2>
&lt;p>随着应用的增长，需要规划索引及其配置使其适应应用的变化。每个应用程序都有各自的特性和需求，没有确切的秘诀，不仅索引结构如此，配置也是如此。例如，文档或索引的大小、查询类型以及期望的吞吐量都是其影响因素。&lt;/p>
&lt;h3 id="分片和过度分配">分片和过度分配&lt;/h3>
&lt;p>分片处理是将一个索引分割成若干更小索引的过程，从而能够在同一集群的不同节点上散布它们。查询时结果是索引中每个分片返回结果的汇总（如果某个分片包含所有数据就不是真的汇总）。ES 默认为每个索引创建 5 个分片，即使在单节点环境下也是如此。这种冗余称为过度分配（over allocation）。目前看起来没有必要，仅在索引（散布文档到分片）和处理查询（查询多个分片合并结果）时就增加了更多的复杂性。幸运的是复杂性被自动处理了。&lt;/p>
&lt;p>如果一个索引由一个分片构成，那当应用程序的增长超过单一服务器的容量时就会遇到问题。因为当前的 ES 版本不能将索引分割成多份，必须在创建索引时就指定好需要的分片数量。用户所能做的就是只有创建一个拥有更多分片的新索引，并重新索引数据。ES 设计者选择的默认配置（5个分片和1个副本）使数据量增长和多分片搜索结果合并之间达到平衡。&lt;/p>
&lt;p>如果有一个有限且明确的数据集，可以只使用一个分片。如果没有依照经验，最理想的分片数量应该依赖于节点的数量。因此，如果计划将来使用10个节点，需要给索引配置10个分片。为了保证高可用和查询的吞吐量，同样需要配置副本数，且它与普通分片一样需要节点上的空间。简单的计算公式为：节点最大数 = 分片数 * （ 副本数 + 1 ）&lt;/p>
&lt;h3 id="过度分配的正面例子">过度分配的正面例子&lt;/h3>
&lt;p>一般应该使用更少的分片，但更多的分片意味着每个在较小的 Lucene 索引上执行的操作会更快（尤其是索引过程）。当然，将查询分散成对每个分片的请求，然后合并结果，也是有代价的，但这对于使用固定参数来过滤查询的应用程序是可以避免的。&lt;/p>
&lt;p>案例：每个查询大偶在指定用户的上下文中执行的多租户系统。即把每个用户的数据都索引到一个独立分片中，查询时只查询该用户的分片（需要使用路由）。&lt;/p>
&lt;h3 id="多分片与多索引">多分片与多索引&lt;/h3>
&lt;p>如果一个分片是一个小的 lucene 索引，那什么是真正的 ES 索引？技术上来讲是一样的，差别只在一些针对索引或分片的额外特性上。对分片处理来说，目标查询的处理可能存在这些可能：查询被路由至特定分片执行，不同的查询又各自的执行偏好。对于索引，一个更通用的机制被应用于寻址，使用 /index1, /index2 等这样的记，查询可以被发送给不同的索引。可以使用别名让多个索引看起来像一个索引，类似分片处理。更多的不同可以从分片和索引的平衡逻辑上看出来，尽管自动化索引的不足一定程度上可以由手工部署索引（到指定节点）来掩盖。&lt;/p>
&lt;h3 id="副本">副本&lt;/h3>
&lt;p>分片处理能存储超过单机容量的数据，而使用副本则解决了日渐增长的吞吐量和数据安全方面的问题。当一个存放主分片的节点失效后，ES 能将一个可用的副本升级为新的主分片。查询吞吐量会随着用户的增长而增长，而使用副本则可以应对增长的并发查询。使用过多副本的缺点也很明显：各个分片的副本占用了额外的存储空间，主分片及其副本之间的数据拷贝也存在时间开销。因此选择分片数量时，应当考虑所需要的副本数量。如果选择太多的副本，可能会耗光磁盘空间和ES的资源，而事实上这些副本很多时候根本用不到。但不创建副本则可能导致主分片发生问题时的数据丢失。&lt;/p>
&lt;h2 id="路由">路由&lt;/h2>
&lt;p>路由是限定查询在单个分片上执行的一个解决方案，由此来应对增长的查询吞吐量。&lt;/p>
&lt;h3 id="分片和数据">分片和数据&lt;/h3>
&lt;p>通常情况下，ES将数据分发到哪个分片，以及哪个分片上存放特定的文档都不重要。查询时请求会发送至所有的分片，最关键的事情是使用一个能均匀分发数据的算法。当删除或增加一个文档的新版时，ES需要知道文档在哪个分片，这就是路由要做的事情。&lt;/p>
&lt;h3 id="测试路由功能">测试路由功能&lt;/h3>
&lt;p>通过一个例子演示如何将文档存放到特定的分片上。&lt;/p>
&lt;p>安装 Paramedic 插件：&lt;/p>
&lt;style>
.td-content .highlight {
margin-top: 0.5rem;
margin-bottom: 0.5rem;
}
.code-collapse1 {
overflow-y: auto;
max-height: 500px;
overflow-x: auto;
max-width: 100%;
}
&lt;/style>
&lt;div class="code-collapse1">
&lt;div class="highlight">&lt;div style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">
&lt;table style="border-spacing:0;padding:0;margin:0;border:0;">&lt;tr>&lt;td style="vertical-align:top;padding:0;margin:0;border:0;">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>bin/plugin -install karmi/elasticsearch-paramedic
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;p>重启 ES 后，通过浏览器访问 &lt;a href="http://lcoalhost:9200/_plugin/paramedic/index.html">http://lcoalhost:9200/_plugin/paramedic/index.html&lt;/a> ，上面有索引相关的各种统计量和其它信息。这里重点关注象征集群状态的集群颜色以及各个索引的分片和副本列表。
创建索引：&lt;/p>
&lt;style>
.td-content .highlight {
margin-top: 0.5rem;
margin-bottom: 0.5rem;
}
.code-collapse1 {
overflow-y: auto;
max-height: 500px;
overflow-x: auto;
max-width: 100%;
}
&lt;/style>
&lt;div class="code-collapse1">
&lt;div class="highlight">&lt;div style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">
&lt;table style="border-spacing:0;padding:0;margin:0;border:0;">&lt;tr>&lt;td style="vertical-align:top;padding:0;margin:0;border:0;">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">1
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">2
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">3
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">4
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">5
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">6
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>curl -XPUT localhost:9200/ducuments -d &lt;span style="color:#c41a16">&amp;#39;{
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c41a16"> settings: {
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c41a16"> number_of_replicas: 0,
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c41a16"> number_of_shards: 2
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c41a16"> }
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c41a16">}&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;p>创建了只有 2 个分片但没有副本的索引。
索引文档：&lt;/p>
&lt;style>
.td-content .highlight {
margin-top: 0.5rem;
margin-bottom: 0.5rem;
}
.code-collapse1 {
overflow-y: auto;
max-height: 500px;
overflow-x: auto;
max-width: 100%;
}
&lt;/style>
&lt;div class="code-collapse1">
&lt;div class="highlight">&lt;div style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">
&lt;table style="border-spacing:0;padding:0;margin:0;border:0;">&lt;tr>&lt;td style="vertical-align:top;padding:0;margin:0;border:0;">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">1
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">2
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">3
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">4
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>curl -XPUT localhost:9200/documents/doc/1 -d &lt;span style="color:#c41a16">&amp;#39;{&amp;#34;title&amp;#34;: &amp;#34;Document No.1&amp;#34;}&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>curl -XPUT localhost:9200/documents/doc/1 -d &lt;span style="color:#c41a16">&amp;#39;{&amp;#34;title&amp;#34;: &amp;#34;Document No.2&amp;#34;}&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>curl -XPUT localhost:9200/documents/doc/1 -d &lt;span style="color:#c41a16">&amp;#39;{&amp;#34;title&amp;#34;: &amp;#34;Document No.3&amp;#34;}&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>curl -XPUT localhost:9200/documents/doc/1 -d &lt;span style="color:#c41a16">&amp;#39;{&amp;#34;title&amp;#34;: &amp;#34;Document No.4&amp;#34;}&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;p>Paramedic 会展示 2 个主分片。集群中的每个节点都精准地容纳了 2 个文档。可以得出结论：分片算法完美地完成工作，文档在分片之间均匀分布。
人为关闭一个节点，集群状态会变成红色，丢失了一个主分片后数据的某些部分会缺失。尽管如此，ES还允许查询，至于是返回失败还是挂起查询，由应用构建者决定。这里查询所有文档，ES 会返回失败信息和命中的 2 个文档信息。&lt;/p>
&lt;h4 id="索引过程中使用路由">索引过程中使用路由&lt;/h4>
&lt;p>可以通过路由来控制 ES 将文档发送到哪个分片。路由参数值无关紧要可以取任何值。重要的是将不同文档放到同一个分片上时，需要使用相同的值。&lt;/p>
&lt;p>向ES提供路由信息有多种途径，&lt;/p>
&lt;p>第一种方法：&lt;/p>
&lt;p>最简单的办法是在索引文档时加一个 URI 参数 routing，如：&lt;/p>
&lt;style>
.td-content .highlight {
margin-top: 0.5rem;
margin-bottom: 0.5rem;
}
.code-collapse1 {
overflow-y: auto;
max-height: 500px;
overflow-x: auto;
max-width: 100%;
}
&lt;/style>
&lt;div class="code-collapse1">
&lt;div class="highlight">&lt;div style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">
&lt;table style="border-spacing:0;padding:0;margin:0;border:0;">&lt;tr>&lt;td style="vertical-align:top;padding:0;margin:0;border:0;">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>curl -XPUT localhost:9200/documents/doc/1?routing&lt;span style="color:#000">=&lt;/span>A -d &lt;span style="color:#c41a16">&amp;#39;{&amp;#34;title&amp;#34;: &amp;#34;Document&amp;#34;}&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;p>第二种方法：&lt;/p>
&lt;p>还可以在文档里放一个 _routing 字段，如：&lt;/p>
&lt;style>
.td-content .highlight {
margin-top: 0.5rem;
margin-bottom: 0.5rem;
}
.code-collapse1 {
overflow-y: auto;
max-height: 500px;
overflow-x: auto;
max-width: 100%;
}
&lt;/style>
&lt;div class="code-collapse1">
&lt;div class="highlight">&lt;div style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">
&lt;table style="border-spacing:0;padding:0;margin:0;border:0;">&lt;tr>&lt;td style="vertical-align:top;padding:0;margin:0;border:0;">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>curl -XPUT localhost:9200/documents/doc/1 -d &lt;span style="color:#c41a16">&amp;#39;{&amp;#34;title&amp;#34;: &amp;#34;Document&amp;#34;, &amp;#34;_routing&amp;#34;: &amp;#34;A&amp;#34;}&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;p>这种情况仅在 mappings 中定义了 _routing 字段时才会生效，如：
&lt;style>
.td-content .highlight {
margin-top: 0.5rem;
margin-bottom: 0.5rem;
}
.code-collapse1 {
overflow-y: auto;
max-height: 500px;
overflow-x: auto;
max-width: 100%;
}
&lt;/style>
&lt;div class="code-collapse1">
&lt;div class="highlight">&lt;div style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">
&lt;table style="border-spacing:0;padding:0;margin:0;border:0;">&lt;tr>&lt;td style="vertical-align:top;padding:0;margin:0;border:0;">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 1
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 2
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 3
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 4
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 5
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 6
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 7
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 8
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 9
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">10
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">11
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-json" data-lang="json">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c41a16">&amp;#34;mappings&amp;#34;&lt;/span>&lt;span style="color:#000">:&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">&amp;#34;doc&amp;#34;&lt;/span>: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">&amp;#34;_routing&amp;#34;&lt;/span>: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">&amp;#34;required&amp;#34;&lt;/span>: &lt;span style="color:#a90d91">true&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">&amp;#34;path&amp;#34;&lt;/span>: &lt;span style="color:#c41a16">&amp;#34;_routing&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> },
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">&amp;#34;properties&amp;#34;&lt;/span>: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">&amp;#34;title&amp;#34;&lt;/span>: {&lt;span style="color:#000">&amp;#34;type&amp;#34;&lt;/span>: &lt;span style="color:#c41a16">&amp;#34;string&amp;#34;&lt;/span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;/div>&lt;/p>
&lt;p>值得一提的是 path 参数可以指向文档中任意未分词字段。这个功能十分强大，也是路由特性最主要的优势所在。例如使用图书所在的图书馆的 library_id 字段扩展文档，那么当基于 library_id 设置路由时，有理由认为所有基于图书馆的查询更有效率。
第三种方法：&lt;/p>
&lt;p>最后一种方式是在执行批量索引时使用路由。使用时路由值在每个文档的头部给出，如：&lt;/p>
&lt;style>
.td-content .highlight {
margin-top: 0.5rem;
margin-bottom: 0.5rem;
}
.code-collapse1 {
overflow-y: auto;
max-height: 500px;
overflow-x: auto;
max-width: 100%;
}
&lt;/style>
&lt;div class="code-collapse1">
&lt;div class="highlight">&lt;div style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">
&lt;table style="border-spacing:0;padding:0;margin:0;border:0;">&lt;tr>&lt;td style="vertical-align:top;padding:0;margin:0;border:0;">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 1
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 2
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 3
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 4
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 5
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 6
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 7
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 8
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 9
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">10
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">11
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>curl -XPUT localhost:9200/_bulk --data-binary &lt;span style="color:#c41a16">&amp;#39;\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c41a16">{
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c41a16"> &amp;#34;index&amp;#34;:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c41a16"> {
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c41a16"> &amp;#34;_index&amp;#34;: &amp;#34;documents&amp;#34;,
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c41a16"> &amp;#34;_type&amp;#34;: &amp;#34;doc&amp;#34;,
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c41a16"> &amp;#34;_routing&amp;#34;: &amp;#34;A&amp;#34;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c41a16"> }
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c41a16">}
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c41a16">{&amp;#34;title&amp;#34;: &amp;#34;Document No.1&amp;#34;}
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c41a16">&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;h3 id="索引时使用路由">索引时使用路由&lt;/h3>
&lt;p>仍然使用上面的例子，只是这次使用路由。先删除旧数据，否则使用相同的标识符添加文档时，路由会把相同的文档存放到另一个分片中。因此，删除旧数据：&lt;/p>
&lt;style>
.td-content .highlight {
margin-top: 0.5rem;
margin-bottom: 0.5rem;
}
.code-collapse1 {
overflow-y: auto;
max-height: 500px;
overflow-x: auto;
max-width: 100%;
}
&lt;/style>
&lt;div class="code-collapse1">
&lt;div class="highlight">&lt;div style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">
&lt;table style="border-spacing:0;padding:0;margin:0;border:0;">&lt;tr>&lt;td style="vertical-align:top;padding:0;margin:0;border:0;">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>curl -XDELETE localhost:9200/documents/_query?q&lt;span style="color:#000">=&lt;/span>*:*
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;p>重新索引数据，添加这次的路由信息。索引文档的命令如下：
&lt;style>
.td-content .highlight {
margin-top: 0.5rem;
margin-bottom: 0.5rem;
}
.code-collapse1 {
overflow-y: auto;
max-height: 500px;
overflow-x: auto;
max-width: 100%;
}
&lt;/style>
&lt;div class="code-collapse1">
&lt;div class="highlight">&lt;div style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">
&lt;table style="border-spacing:0;padding:0;margin:0;border:0;">&lt;tr>&lt;td style="vertical-align:top;padding:0;margin:0;border:0;">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">1
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">2
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">3
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">4
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>curl -XPUT localhost:9200/documents/doc/1?routing&lt;span style="color:#000">=&lt;/span>A -d &lt;span style="color:#c41a16">&amp;#39;{&amp;#34;title&amp;#34;: &amp;#34;Document No.1&amp;#34;}&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>curl -XPUT localhost:9200/documents/doc/2?routing&lt;span style="color:#000">=&lt;/span>B -d &lt;span style="color:#c41a16">&amp;#39;{&amp;#34;title&amp;#34;: &amp;#34;Document No.2&amp;#34;}&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>curl -XPUT localhost:9200/documents/doc/3?routing&lt;span style="color:#000">=&lt;/span>A -d &lt;span style="color:#c41a16">&amp;#39;{&amp;#34;title&amp;#34;: &amp;#34;Document No.3&amp;#34;}&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>curl -XPUT localhost:9200/documents/doc/4?routing&lt;span style="color:#000">=&lt;/span>A -d &lt;span style="color:#c41a16">&amp;#39;{&amp;#34;title&amp;#34;: &amp;#34;Document No.4&amp;#34;}&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;/div>&lt;/p>
&lt;p>可通过 Paramedic 页面验证文档路由到哪个分片。一个节点只有1个文档（路由值为B），另一个节点有3个文档（路由值为A）。停掉一个节点，Paramedic 会再次显示红色的集群状态。&lt;/p>
&lt;h4 id="查询">查询&lt;/h4>
&lt;p>路由允许用户构建更有效率的查询，并且用户也可以使用路由，不必把查询发送到所有节点。如：&lt;/p>
&lt;style>
.td-content .highlight {
margin-top: 0.5rem;
margin-bottom: 0.5rem;
}
.code-collapse1 {
overflow-y: auto;
max-height: 500px;
overflow-x: auto;
max-width: 100%;
}
&lt;/style>
&lt;div class="code-collapse1">
&lt;div class="highlight">&lt;div style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">
&lt;table style="border-spacing:0;padding:0;margin:0;border:0;">&lt;tr>&lt;td style="vertical-align:top;padding:0;margin:0;border:0;">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>curl -XGET &lt;span style="color:#c41a16">&amp;#39;localhost:9200/documents/_search?pretty&amp;amp;q=*:*&amp;amp;routing=A&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;p>会发现返回了3个文档（第一个节点挂掉），看起来很顺利，但第一个节点挂掉了并未启动，由此可见尽管没有一个完整的索引视图，ES 的响应中并未包含分片失败的信息。这证明了使用路由的查询只命中选定的分片，而忽略其它分片。如果改用路由值 B 会发现返回了异常。
需要注意，虽然路由确保了在索引时拥有相同路由值的文档会索引到相同的分片上，但一个给定的分片上可以有很多拥有不同路由值的文档。路由可以限制查询时使用的节点数，但是不能替代过滤功能。这意味着一个查询有没有使用路由都应该相同的过滤器。&lt;/p>
&lt;h3 id="别名">别名&lt;/h3>
&lt;p>对程序员隐藏一些配置信息，让其可以快速工作而不必关心搜索细节如路由、分片、副本。创建别名：&lt;/p>
&lt;style>
.td-content .highlight {
margin-top: 0.5rem;
margin-bottom: 0.5rem;
}
.code-collapse1 {
overflow-y: auto;
max-height: 500px;
overflow-x: auto;
max-width: 100%;
}
&lt;/style>
&lt;div class="code-collapse1">
&lt;div class="highlight">&lt;div style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">
&lt;table style="border-spacing:0;padding:0;margin:0;border:0;">&lt;tr>&lt;td style="vertical-align:top;padding:0;margin:0;border:0;">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 1
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 2
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 3
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 4
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 5
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 6
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 7
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 8
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 9
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">10
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">11
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">12
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>curl -XPOST &lt;span style="color:#c41a16">&amp;#39;http://localhost:9200/_aliases&amp;#39;&lt;/span> -d &lt;span style="color:#c41a16">&amp;#39;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c41a16">{
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c41a16"> &amp;#34;actions&amp;#34;: [
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c41a16"> {
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c41a16"> &amp;#34;add&amp;#34;: {
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c41a16"> &amp;#34;index&amp;#34;: &amp;#34;documents&amp;#34;,
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c41a16"> &amp;#34;alias&amp;#34;: &amp;#34;documentsA&amp;#34;,
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c41a16"> &amp;#34;routing&amp;#34;: &amp;#34;A&amp;#34;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c41a16"> }
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c41a16"> }
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c41a16"> ]
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c41a16">}&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;p>创建了一个叫 documentsA 的虚拟索引（一个别名），用来代表来自 documents 索引的信息。除了这个查询还被限定在路由值 A 相关的分片上。&lt;/p>
&lt;h3 id="多个路由值">多个路由值&lt;/h3>
&lt;p>ES 允许在一次查询中使用多个路由值。文档放置在哪个分片上依赖于文档的路由值，多路由值查询意味在一个或多个分片上查询。如：&lt;/p>
&lt;style>
.td-content .highlight {
margin-top: 0.5rem;
margin-bottom: 0.5rem;
}
.code-collapse1 {
overflow-y: auto;
max-height: 500px;
overflow-x: auto;
max-width: 100%;
}
&lt;/style>
&lt;div class="code-collapse1">
&lt;div class="highlight">&lt;div style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">
&lt;table style="border-spacing:0;padding:0;margin:0;border:0;">&lt;tr>&lt;td style="vertical-align:top;padding:0;margin:0;border:0;">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>curl -XGET &lt;span style="color:#c41a16">&amp;#39;localhost:9200/documents/_search?routing=A,B&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;p>另外，多路由值也支持别名，如：
&lt;style>
.td-content .highlight {
margin-top: 0.5rem;
margin-bottom: 0.5rem;
}
.code-collapse1 {
overflow-y: auto;
max-height: 500px;
overflow-x: auto;
max-width: 100%;
}
&lt;/style>
&lt;div class="code-collapse1">
&lt;div class="highlight">&lt;div style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">
&lt;table style="border-spacing:0;padding:0;margin:0;border:0;">&lt;tr>&lt;td style="vertical-align:top;padding:0;margin:0;border:0;">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 1
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 2
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 3
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 4
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 5
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 6
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 7
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 8
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 9
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">10
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">11
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">12
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">13
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>curl -XPOST &lt;span style="color:#c41a16">&amp;#39;http://localhost:9200/_aliases&amp;#39;&lt;/span> -d &lt;span style="color:#c41a16">&amp;#39;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c41a16">{
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c41a16"> &amp;#34;actions&amp;#34;: [
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c41a16"> {
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c41a16"> &amp;#34;add&amp;#34;: {
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c41a16"> &amp;#34;index&amp;#34;: &amp;#34;documents&amp;#34;,
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c41a16"> &amp;#34;alias&amp;#34;: &amp;#34;documentsA&amp;#34;,
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c41a16"> &amp;#34;search_routing&amp;#34;: &amp;#34;A,B&amp;#34;,
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c41a16"> &amp;#34;index_routing&amp;#34;: &amp;#34;A&amp;#34;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c41a16"> }
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c41a16"> }
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c41a16"> ]
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c41a16">}&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;/div>&lt;/p>
&lt;p>上面的例子可以为查询和索引配置不同的路由。定义查询时（search_routing参数）使用两个路由值（A和B），而索引时（index_routing参数）仅使用了一个路由值（A）。注意：索引时不支持多个路由值，同时要做适当的过滤（可以把它加到别名中）&lt;/p>
&lt;h2 id="调整默认分片分配行为">调整默认分片分配行为&lt;/h2>
&lt;h3 id="分片分配器简介">分片分配器简介&lt;/h3>
&lt;p>分片分配器 ShardAllocator 是承担分片分配职责最主要的类。ES集群上的数据分布发生变动时，分片也有相应的变动。例如集群的拓扑结构发生改变（当加入或移除节点）或通过强制重新平衡时。在内部分配器是 org.elasticsearch.cluster.routing.allocation.allocator.shardsAllocator 接口的一个实现。ES提供了下面两种类型的分配器：&lt;/p>
&lt;ul>
&lt;li>even_shard&lt;/li>
&lt;li>balanced（默认）
通过在 elasticsearch.yml 中设置 cluster.rounting.allocation.type 属性或者使用设置 API，可以指定具体的分配器实现。&lt;/li>
&lt;/ul>
&lt;h3 id="even-shard分片分配器">even_shard分片分配器&lt;/h3>
&lt;p>ES 0.90.0 之前的版本就有这个分配器了。它能确保每个节点上就有相同数量的分片（当然，并不是总能满足这样的情形），同时也能禁止主分片及其副本存储在同一节点上。在需要重新分配且使用 even_shard 分片分配器时，ES从存储负载最高的节点向存储负载较低的节点移动分片，直到集群完全平衡或者无法移动。需要注意，这个分配器并排工作在索引级别。意味着只要分片及其副本在不同的节点上，分配器就认为工作正常，而不关心来自同一索引的不同分片存放在哪里。&lt;/p>
&lt;h3 id="balanced分片分配器">balanced分片分配器&lt;/h3>
&lt;p>ES 0.90.0 之后新引入的。基于一些可控制的权重进行分配。相比 even_shard 分片分配器，通过暴露一些参数而引入调整分配过程的能力，从而可以通过使用集群更新 API（update API）动态改变这些参数，可调整的参数如下：&lt;/p>
&lt;ul>
&lt;li>cluster.routing.allocation.balance.shard：默认值为 0.45。基于分片总数的权重。告诉ES基于所有的分片数，每个节点都分配数量相近的分片的重要性。&lt;/li>
&lt;li>cluster.routing.allocation.balance.index：默认值为 0.5。基于给定索引的分片数的权重。基于同一个索引的分片数，每个节点都分配数量相近的分片的重要性。&lt;/li>
&lt;li>cluster.routing.allocation.balance.primary：默认值为 0.05。基于主分片的权重。将主分片平均分配到节点的重要性。&lt;/li>
&lt;li>cluster.routing.allocation.balance.threshold：默认值为 1.0
如果集群的所有节点上平均分配很重要，应该提高 cluster.routing.allocation.balance.primary 的权重值，并适当降低出阈值外的其他权重值。&lt;/li>
&lt;/ul>
&lt;p>如果所有因子与其权重乘机的总和大于已定义的阈值，那么这类索引的分片就需要重新分配了。如果需要忽略一个或多个因子，将它们的权重设置为 0 就可以。&lt;/p>
&lt;h3 id="自定义分片分配器">自定义分片分配器&lt;/h3>
&lt;p>内置的分片分配器肯跟不适合应用场景，如需要在分配时考虑索引大小的不同。或者继承各种不同硬件的大集群，不同的 CPU、内存容量或磁盘容量。所有这些因素都可能导致集群数据分布的低效。&lt;/p>
&lt;p>可以定制解决方案，cluster.routing.allocation.type 必须设置成一个类的全限定名，且该类需要实现 org.elasticsearch.cluster.routing.allocation.allocator.ShardsAllocator 接口。&lt;/p>
&lt;h3 id="裁决者">裁决者&lt;/h3>
&lt;p>分片分配器如何决定决定分片移动的时机和目标节点，主要是ES内部的裁决者（decider）做出分配决定的大脑。ES允许同时使用多个裁决者，而且它们会在裁决过程中投票。有个规则共识：如果某裁决者投票反对重新分配一个分片的操作，那么该分片就不能移动。裁决者只有固定的十来个，如果想添加新的决策者，只能通过修改 ES 源码。&lt;/p>
&lt;h4 id="sameshardallocationdecider">SameShardAllocationDecider&lt;/h4>
&lt;p>该裁决者禁止将相同数据的拷贝（分片和其副本）放到相同的节点上。原因很明显：不希望再保存主数据的地方保留其备份数据。但 cluster.routing.allocation.same_shard.host 属性控制了 ES 是否需要考虑分片放到物理机器上的位置。默认为 false，因为许多节点可能运行在同一台运行着多个虚拟机的服务器上。当设置成 true 时，这个裁决者会禁止将分片和其副本放置在同一台物理机器上。不过最好还是依赖像 index.routing.allocation 属性族的配置。&lt;/p>
&lt;h4 id="shardslimitallocationdecider">ShardsLimitAllocationDecider&lt;/h4>
&lt;p>该裁决者确保一个给定索引在某节点上的分片不会超过给定数量。该数量是由 index.routing.allocation.total_shards_per_node 属性控制的，可以在 elasticsearch.yml 文件中设置，或者通过索引更新 API 在线更新。属性的默认值是 -1，表明没有限制。注意：调低该值会强制重新分配，在重新平衡期间会给集群带来额外额外的负载。&lt;/p>
&lt;h4 id="filterallocationdecider">FilterAllocationDecider&lt;/h4>
&lt;p>该裁决者只在增加了控制分片分配的参数时才会用到。这类参数需要匹配 &lt;em>.rounting.allocation.&lt;/em> 名称模式。&lt;/p>
&lt;h4 id="replicaafterprimaryactiveallocationdecider">ReplicaAfterPrimaryActiveAllocationDecider&lt;/h4>
&lt;p>该裁决者使得ES仅在主分片都分配好之后才开始分配副本。&lt;/p>
&lt;h4 id="clusterrebalanceallocationdecider">ClusterRebalanceAllocationDecider&lt;/h4>
&lt;p>该裁决者允许根据集群的当前状态改变集群进行重新平衡的时机。可以通过 cluster.routing.allocation.allow_rebalance 属性来控制，它支持以下这些值：&lt;/p>
&lt;ul>
&lt;li>indices_all_active：默认值表明重新平衡仅在集群中所有已存在的分片都分配好后才能进行&lt;/li>
&lt;li>indice_primaries_active：表明重新平衡只在主分片分配好以后才进行&lt;/li>
&lt;li>always：设置表明重新平衡总是可以进行，甚至在主分片和副本还没有分配好时可以
注意：这些设置在运行时不能更改。&lt;/li>
&lt;/ul>
&lt;h4 id="concurrentrebalanceallocationdecider">ConcurrentRebalanceAllocationDecider&lt;/h4>
&lt;p>该裁决者用于调节重新部署操作，并基于 cluster.routing.allocation.cluster_concurrent_rebalance 属性。该属性可以设置给定集群上可以并发执行的重新部署操作的数量，默认是 2 个，意味着在集群上只有不超过 2 个的分片可以同时移动。可这个值设为 -1 将取消限制，从而使重新部署操作的并发数量没有限制。&lt;/p>
&lt;h4 id="disableallocationdecider">DisableAllocationDecider&lt;/h4>
&lt;p>该裁决者可以调整自身行为来满足应用需求的裁决者。为了利用该裁决者的特性，可以更改下面的这些设置（修改 elasticsearch.yml 或使用集群设置 API）：&lt;/p>
&lt;ul>
&lt;li>cluster.routing.allocation.disable_allocation：设置允许禁止所有的分配。&lt;/li>
&lt;li>cluster.routing.allocation.disable_new_allocation：设置允许禁止新主分片的分配。&lt;/li>
&lt;li>cluster.routing.allocation.disable_replica_allocation：设置允许禁止副本的分配。
设置的默认值都是 false。在完全控制分配时非常有用。当要快速地重新分配和重新启动一些节点时，可以禁止重新分配。尽管在 elasticsearch.yml 文件里设置前面提到的那些属性，使用更新 API 会更有意义。&lt;/li>
&lt;/ul>
&lt;h4 id="awarenessallocationdecider">AwarenessAllocationDecider&lt;/h4>
&lt;p>该裁决者用来处理意识部署功能的。任何时候使用了 cluster.routing.allocation.awareness.attributes 设置都会起作用。&lt;/p>
&lt;h4 id="throttlingallocationdecider">ThrottlingAllocationDecider&lt;/h4>
&lt;p>与 ConcurrentRebalanceAllocationDecider 类似，允许限制分配过程产生的负载。可以使用下面的属性控制恢复过程：&lt;/p>
&lt;ul>
&lt;li>cluster.routing.allocation.node_initial_primaries_recoveries：默认值为 4。描述了单节点所允许的最初始的主分片恢复操作的数量。&lt;/li>
&lt;li>cluster.routing.allocation.node_concurrent_recoveries：默认值为 2。定义了单节点并发恢复操作的数量。&lt;/li>
&lt;/ul>
&lt;h4 id="rebalanceonlywhenactiveallocationdecider">RebalanceOnlyWhenActiveAllocationDecider&lt;/h4>
&lt;p>该裁决者限制重新平衡过程仅在分片组（主分片和其副本们）内的所有分片都是活动的（active）情况下进行。&lt;/p>
&lt;h4 id="diskthresholddecider">DiskThresholdDecider&lt;/h4>
&lt;p>该裁决者在 ES 0.90.4 版本引入，允许基于服务器上的空余磁盘容量来部署分片。默认禁用，必须设置 cluster.routing.allocation.disk.threshold_enabled 属性为 true 来启用。且允许配置一些阈值来决定何时将分片放到某个节点上以及 ES 应该何时将分片迁移到另一个节点。&lt;/p>
&lt;ul>
&lt;li>cluster.routing.allocation.disk.watermark.low 允许在分片分配可用时指定一个阈值或绝对值。默认值是 0.7，即告诉 ES 新分片可以分配到一个磁盘使用率低于 70% 的节点上。&lt;/li>
&lt;li>cluster.routing.allocation.disk.watermark.high 允许在某分片分配器试图将分片迁移到另一个节点时指定一个阈值或绝对值。默认值是 0.85，意味着 ES 会在磁盘空间使用率上升到 85% 时重新分配分片。
这两个属性都可以设置成百分数（如0.7或0.85），或者绝对值（如1000mb）。另外，本节提到的所有属性都可以在 elasticsearch.yml 里静态设置，或使用 ES API 动态更新。&lt;/li>
&lt;/ul>
&lt;h2 id="调整分片分配">调整分片分配&lt;/h2>
&lt;p>除了可以使用单个 API 命令在集群内移动分片，对于分片分配而言，还可以定义一系列分片分配的规则。&lt;/p>
&lt;p>例如，假设有 4 个节点的集群，每个节点都绑定了一个指定的 IP 地址，且都被赋予了一个 tag 属性和一个 group 属性（在 elasticsearch.yml 文件里对应的是 node.tag 和 node.group 属性）。这个集群用来展示分片分配的过滤处理如何工作。可以给 tag 和 group 属性任意命名，只需要给期望的属性名前面加上 node 前缀即可。如将 party 作为属性名，只需要把 node.party: party1 加入到 elasticsearch.yml 文件里。&lt;/p>
&lt;p>&lt;img src="../imgs/20221225_es_04_1.png" alt="20221225_es_04_1.png">&lt;/p>
&lt;h3 id="部署意识">部署意识&lt;/h3>
&lt;p>部署意识允许使用通用参数来配置分片及其副本的部署。使用这里的例子集群来证明部署意识如何工作的。在 elasticsearch.yml 文件里加入下列属性：&lt;/p>
&lt;style>
.td-content .highlight {
margin-top: 0.5rem;
margin-bottom: 0.5rem;
}
.code-collapse1 {
overflow-y: auto;
max-height: 500px;
overflow-x: auto;
max-width: 100%;
}
&lt;/style>
&lt;div class="code-collapse1">
&lt;div class="highlight">&lt;div style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">
&lt;table style="border-spacing:0;padding:0;margin:0;border:0;">&lt;tr>&lt;td style="vertical-align:top;padding:0;margin:0;border:0;">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-plain" data-lang="plain">&lt;span style="display:flex;">&lt;span>cluster.routing.allocation.awareness.attributes: group
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;p>这会告诉 ES 使用 node.group 属性作为意识参数。&lt;/p>
&lt;blockquote>
&lt;p>可以指定多个值给该属性，如：cluster.routing.allocation.awareness.attributes: group, node&lt;/p>
&lt;/blockquote>
&lt;p>然后先启动前两个节点，即 node.group 属性值是 groupA 的那两个。接下来创建一个索引：&lt;/p>
&lt;style>
.td-content .highlight {
margin-top: 0.5rem;
margin-bottom: 0.5rem;
}
.code-collapse1 {
overflow-y: auto;
max-height: 500px;
overflow-x: auto;
max-width: 100%;
}
&lt;/style>
&lt;div class="code-collapse1">
&lt;div class="highlight">&lt;div style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">
&lt;table style="border-spacing:0;padding:0;margin:0;border:0;">&lt;tr>&lt;td style="vertical-align:top;padding:0;margin:0;border:0;">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">1
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">2
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">3
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">4
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">5
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">6
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">7
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">8
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>curl -XPOST &lt;span style="color:#c41a16">&amp;#39;localhost:9200/mastering&amp;#39;&lt;/span> -d &lt;span style="color:#c41a16">&amp;#39;{
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c41a16"> &amp;#34;settings&amp;#34;: {
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c41a16"> &amp;#34;index&amp;#34;: {
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c41a16"> &amp;#34;number_of_shards&amp;#34;: 2,
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c41a16"> &amp;#34;number_of_replicas&amp;#34;: 1
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c41a16"> }
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c41a16"> }
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c41a16">}&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;p>执行前面的命令后，两个节点的集群看起来类似于下面的截图：
&lt;img src="../imgs/20221225_es_04_2.png" alt="20221225_es_04_2.png">&lt;/p>
&lt;p>索引平均部署到了两个节点上。换成另外两个节点时会发生什么（node.group 设置成 groupB 的那两个）：&lt;/p>
&lt;p>&lt;img src="../imgs/20221225_es_04_3.png" alt="20221225_es_04_3.png">&lt;/p>
&lt;p>注意区别：主分片没有从原来部署的节点上移动，但是副本分片却移动到了有不同 node.group 值的节点上。这恰恰是正确的。当使用分片部署意识时，ES不会将分片和副本放到拥有相同属性值（用来决定部署意识，如例子中的 node.group）的节点上。例如从虚拟机或物理位置的角度分割集群的拓扑结构，以确保不会有单点故障。&lt;/p>
&lt;blockquote>
&lt;p>在使用部署意识时，分片不会被部署到没有设定指定属性的节点上，所以对这里的例子来说，一个没有设置 node.group 属性的节点时不会被部署机制考虑的。&lt;/p>
&lt;/blockquote>
&lt;h4 id="强制部署意识">强制部署意识&lt;/h4>
&lt;p>预先知道意识参数需要接受几个值，且不超过部署到集群中的副本数时（如不想因过多的副本而使集群过载），有了强制部署意识就很方便。可以强制部署意识由特定属性激活来实现这个。通过使用 cluster.routing.allocation.awareness.force.zone.values 属性并给它提供一个用逗号分隔的列表来指定这些属性值。例如，希望对于部署意识来说只使用 node.group 属性的 groupA 和 groupB 两个值，应该把下面的代码加到 elasticsearch.yml 文件中：&lt;/p>
&lt;style>
.td-content .highlight {
margin-top: 0.5rem;
margin-bottom: 0.5rem;
}
.code-collapse1 {
overflow-y: auto;
max-height: 500px;
overflow-x: auto;
max-width: 100%;
}
&lt;/style>
&lt;div class="code-collapse1">
&lt;div class="highlight">&lt;div style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">
&lt;table style="border-spacing:0;padding:0;margin:0;border:0;">&lt;tr>&lt;td style="vertical-align:top;padding:0;margin:0;border:0;">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">1
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-plain" data-lang="plain">&lt;span style="display:flex;">&lt;span>cluster.routing.allocation.awareness.attributes: group
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>cluster.routing.allocation.awareness.force.zone.values: groupA, groupB
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;h3 id="过滤">过滤&lt;/h3>
&lt;p>ES允许在整个集群或是索引的级别配置分片的分配。其中在集群级别上可以使用带有下面前缀的属性：&lt;/p>
&lt;ul>
&lt;li>
&lt;p>cluster.routing.allocation.include&lt;/p>
&lt;/li>
&lt;li>
&lt;p>cluster.routing.allocaiton.require&lt;/p>
&lt;/li>
&lt;li>
&lt;p>cluster.routing.allocation.exclude
而处理索引级分配时，使用带有下面前缀的属性：&lt;/p>
&lt;/li>
&lt;li>
&lt;p>index.routing.allocation.include&lt;/p>
&lt;/li>
&lt;li>
&lt;p>index.routing.allocation.require&lt;/p>
&lt;/li>
&lt;li>
&lt;p>index.routing.allocation.exclude
上述前缀可以在 elasticsearch.yml 文件里定义的属性一起使用（ tag 属性和 group 属性）。只需使用一个名为 _ip 的特殊属性，就可以使用 IP 地址来进行包含或排除特定的节点。&lt;/p>
&lt;/li>
&lt;/ul>
&lt;p>例如：&lt;/p>
&lt;style>
.td-content .highlight {
margin-top: 0.5rem;
margin-bottom: 0.5rem;
}
.code-collapse1 {
overflow-y: auto;
max-height: 500px;
overflow-x: auto;
max-width: 100%;
}
&lt;/style>
&lt;div class="code-collapse1">
&lt;div class="highlight">&lt;div style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">
&lt;table style="border-spacing:0;padding:0;margin:0;border:0;">&lt;tr>&lt;td style="vertical-align:top;padding:0;margin:0;border:0;">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-plain" data-lang="plain">&lt;span style="display:flex;">&lt;span>cluster.routing.allocation.include._ip: 192.168.2.1
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;p>如果希望包含一组 group 属性是 groupA 的节点，应该设置下面的属性：
&lt;style>
.td-content .highlight {
margin-top: 0.5rem;
margin-bottom: 0.5rem;
}
.code-collapse1 {
overflow-y: auto;
max-height: 500px;
overflow-x: auto;
max-width: 100%;
}
&lt;/style>
&lt;div class="code-collapse1">
&lt;div class="highlight">&lt;div style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">
&lt;table style="border-spacing:0;padding:0;margin:0;border:0;">&lt;tr>&lt;td style="vertical-align:top;padding:0;margin:0;border:0;">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-plain" data-lang="plain">&lt;span style="display:flex;">&lt;span>cluster.routing.allocation.include.group: groupA
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;/div>&lt;/p>
&lt;p>注意，这里已经使用了 cluster.routing.allocation.include 前缀，并把它和属性名 group 连接在一起。
属性含义：&lt;/p>
&lt;ul>
&lt;li>include：包含所有定义了某参数的节点，如果定义了多个条件，那么至少匹配一个条件的节点都会在分配分片时被考虑进去。如增加两个 cluster.routing.allocation.include.tag 参数到配置中，一个赋值 node1，另一个赋值 node2，那么索引（确切地说是它们的分片）会被分配到第一个和第三个节点上（从左向右）。总结：拥有 include 参数类型的节点，ES 在选择防止分片的节点时会加以考虑，但这并不意味 ES 一定会把分片放到这些节点上。&lt;/li>
&lt;li>require：该属性在 ES 0.90 版本的分配过滤器中引入的。要求所有节点都必须拥有和这个属性相匹配的值。如向配置中添加 cluster.routing.allocation.require.tag 参数并赋值 node1，添加 cluster.routing.allocation.require.group 参数并赋值 groupA，那么所有的分片都分配在第一个节点上（IP地址为 192.168.2.1 的节点）。&lt;/li>
&lt;li>exclude：该属性允许在分片分配过程中排除具有特定属性的节点。例如，给 cluster.routing.allocation.include.tag 赋值 groupA，那么索引只分配在 IP 地址是 192.168.3.1 和 192.168.3.2 的节点上（例子中的第三个和第四个节点）&lt;/li>
&lt;/ul>
&lt;blockquote>
&lt;p>属性值可以使用简单的通配符。例如，要包含所有 group 属性值以 group 开头的节点，应当设置 cluster.routing.allocation.include.group 属性的值为 group*。就样例集群来说。这会导致匹配 group 参数值是 groupA 和 groupB 的节点。&lt;/p>
&lt;/blockquote>
&lt;h3 id="运行时更新分配策略">运行时更新分配策略&lt;/h3>
&lt;p>除了在 elasticsearch.yml 文件里设置这些属性外，在集群已经启动运行后，也可以通过更新 API 来实时更新这些设置。&lt;/p>
&lt;h4 id="索引级更新">索引级更新&lt;/h4>
&lt;p>更新一个给定索引（如 mastering 索引）的设置，执行下面的命令：&lt;/p>
&lt;style>
.td-content .highlight {
margin-top: 0.5rem;
margin-bottom: 0.5rem;
}
.code-collapse1 {
overflow-y: auto;
max-height: 500px;
overflow-x: auto;
max-width: 100%;
}
&lt;/style>
&lt;div class="code-collapse1">
&lt;div class="highlight">&lt;div style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">
&lt;table style="border-spacing:0;padding:0;margin:0;border:0;">&lt;tr>&lt;td style="vertical-align:top;padding:0;margin:0;border:0;">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">1
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">2
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>curl -XPUT &lt;span style="color:#c41a16">&amp;#39;localhost:9200/mastering/_settings&amp;#39;&lt;/span> -d &lt;span style="color:#c41a16">&amp;#39;{
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c41a16"> &amp;#34;index.routing.allocation.require.group&amp;#34;: &amp;#34;groupA&amp;#34;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c41a16">}&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;p>命令发送到了指定索引的 _settings 端点，可以在一次调用中包含多个属性。&lt;/p>
&lt;h4 id="集群级更新">集群级更新&lt;/h4>
&lt;p>更新整个集群的设置，执行下面的命令：&lt;/p>
&lt;style>
.td-content .highlight {
margin-top: 0.5rem;
margin-bottom: 0.5rem;
}
.code-collapse1 {
overflow-y: auto;
max-height: 500px;
overflow-x: auto;
max-width: 100%;
}
&lt;/style>
&lt;div class="code-collapse1">
&lt;div class="highlight">&lt;div style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">
&lt;table style="border-spacing:0;padding:0;margin:0;border:0;">&lt;tr>&lt;td style="vertical-align:top;padding:0;margin:0;border:0;">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">1
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">2
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">3
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">4
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">5
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>curl -XPUT &lt;span style="color:#c41a16">&amp;#39;localhost:9200/_cluster/settings&amp;#39;&lt;/span> -d &lt;span style="color:#c41a16">&amp;#39;{
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c41a16"> &amp;#34;transient&amp;#34;: {
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c41a16"> &amp;#34;cluster.routing.allocation.require.group&amp;#34;: &amp;#34;groupA&amp;#34;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c41a16"> }
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c41a16">}&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;blockquote>
&lt;p>依据命令的内容和索引的分配情况，执行前面的命令可能造成分片在节点间的移动。&lt;/p>
&lt;/blockquote>
&lt;h3 id="确定每个节点允许的总分片数">确定每个节点允许的总分片数&lt;/h3>
&lt;p>除了前面提到的属性，还能定义每个节点可分配给索引的分片总数（主分片和副本）。为了实现该目的，需要给 index.routing.allocation.total_shards_per_node 属性设置一个期望值。如在 elasticsearch.yml 文件里做如下设置：&lt;/p>
&lt;style>
.td-content .highlight {
margin-top: 0.5rem;
margin-bottom: 0.5rem;
}
.code-collapse1 {
overflow-y: auto;
max-height: 500px;
overflow-x: auto;
max-width: 100%;
}
&lt;/style>
&lt;div class="code-collapse1">
&lt;div class="highlight">&lt;div style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">
&lt;table style="border-spacing:0;padding:0;margin:0;border:0;">&lt;tr>&lt;td style="vertical-align:top;padding:0;margin:0;border:0;">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-plain" data-lang="plain">&lt;span style="display:flex;">&lt;span>index.routing.allocation.total_shards_per_node: 4
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;p>这样单个节点上最多会为同一个索引分配 4 个分片。
该属性同样可以在一个运行中的集群上使用更新 API 来改变，如：&lt;/p>
&lt;style>
.td-content .highlight {
margin-top: 0.5rem;
margin-bottom: 0.5rem;
}
.code-collapse1 {
overflow-y: auto;
max-height: 500px;
overflow-x: auto;
max-width: 100%;
}
&lt;/style>
&lt;div class="code-collapse1">
&lt;div class="highlight">&lt;div style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">
&lt;table style="border-spacing:0;padding:0;margin:0;border:0;">&lt;tr>&lt;td style="vertical-align:top;padding:0;margin:0;border:0;">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">1
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">2
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>url -XPUT &lt;span style="color:#c41a16">&amp;#39;localhost:9200/mastering/_settings&amp;#39;&lt;/span> -d &lt;span style="color:#c41a16">&amp;#39;{
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c41a16"> &amp;#34;index.routing.allocation.total_shards_per_node&amp;#34;: &amp;#34;4&amp;#34;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c41a16">}&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;p>下面举例说明 elasticsearch.yml 文件中使用分片分配属性后，以及创建单一索引时集群是什么样子。&lt;/p>
&lt;h4 id="include-包含">include（包含）&lt;/h4>
&lt;p>创建 mastering 索引：&lt;/p>
&lt;style>
.td-content .highlight {
margin-top: 0.5rem;
margin-bottom: 0.5rem;
}
.code-collapse1 {
overflow-y: auto;
max-height: 500px;
overflow-x: auto;
max-width: 100%;
}
&lt;/style>
&lt;div class="code-collapse1">
&lt;div class="highlight">&lt;div style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">
&lt;table style="border-spacing:0;padding:0;margin:0;border:0;">&lt;tr>&lt;td style="vertical-align:top;padding:0;margin:0;border:0;">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">1
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">2
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">3
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">4
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">5
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">6
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">7
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">8
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>curl -XPOST &lt;span style="color:#c41a16">&amp;#39;localhost:9200/mastering&amp;#39;&lt;/span> -d &lt;span style="color:#c41a16">&amp;#39;{
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c41a16"> &amp;#34;settings&amp;#34;: {
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c41a16"> &amp;#34;index&amp;#34;: {
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c41a16"> &amp;#34;number_of_shards&amp;#34;: 2,
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c41a16"> &amp;#34;number_of_replicas&amp;#34;: 0
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c41a16"> }
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c41a16"> }
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c41a16">}&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;p>然后执行下面的命令：
&lt;style>
.td-content .highlight {
margin-top: 0.5rem;
margin-bottom: 0.5rem;
}
.code-collapse1 {
overflow-y: auto;
max-height: 500px;
overflow-x: auto;
max-width: 100%;
}
&lt;/style>
&lt;div class="code-collapse1">
&lt;div class="highlight">&lt;div style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">
&lt;table style="border-spacing:0;padding:0;margin:0;border:0;">&lt;tr>&lt;td style="vertical-align:top;padding:0;margin:0;border:0;">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">1
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">2
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">3
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">4
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">5
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>curl -XPUT &lt;span style="color:#c41a16">&amp;#39;localhost:9200/mastering/_settings&amp;#39;&lt;/span> -d &lt;span style="color:#c41a16">&amp;#39;{
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c41a16"> &amp;#34;index.routing.allocation.include.tag&amp;#34;: &amp;#34;node1&amp;#34;,
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c41a16"> &amp;#34;index.routing.allocation.include.group&amp;#34;: &amp;#34;groupA&amp;#34;,
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c41a16"> &amp;#34;index.routing.allocation.total_shards_per_node&amp;#34;: 1
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c41a16">}&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;/div>&lt;/p>
&lt;p>如果把索引状态命令的响应可视化，那么集群与下图类似：
&lt;img src="../imgs/20221225_es_04_4.png" alt="20221225_es_04_4.png">&lt;/p>
&lt;p>masterting 索引的分片部署到了 tag 属性为 node1 或 group 属性为 groupA 的节点上。&lt;/p>
&lt;h4 id="require-必须">require（必须）&lt;/h4>
&lt;p>仍然使用前面的范例集群（假定集群里没有任何索引），观察 require（必须）分配如何工作。创建 mastering 索引：&lt;/p>
&lt;style>
.td-content .highlight {
margin-top: 0.5rem;
margin-bottom: 0.5rem;
}
.code-collapse1 {
overflow-y: auto;
max-height: 500px;
overflow-x: auto;
max-width: 100%;
}
&lt;/style>
&lt;div class="code-collapse1">
&lt;div class="highlight">&lt;div style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">
&lt;table style="border-spacing:0;padding:0;margin:0;border:0;">&lt;tr>&lt;td style="vertical-align:top;padding:0;margin:0;border:0;">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">1
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">2
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">3
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">4
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">5
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">6
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">7
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">8
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>curl -XPOST &lt;span style="color:#c41a16">&amp;#39;localhost:9200/mastering&amp;#39;&lt;/span> -d &lt;span style="color:#c41a16">&amp;#39;{
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c41a16"> &amp;#34;settings&amp;#34;: {
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c41a16"> &amp;#34;index&amp;#34;: {
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c41a16"> &amp;#34;number_of_shards&amp;#34;: 2,
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c41a16"> &amp;#34;number_of_replica&amp;#34;: 0
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c41a16"> }
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c41a16"> }
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c41a16">}&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;p>然后执行下面的命令：
&lt;style>
.td-content .highlight {
margin-top: 0.5rem;
margin-bottom: 0.5rem;
}
.code-collapse1 {
overflow-y: auto;
max-height: 500px;
overflow-x: auto;
max-width: 100%;
}
&lt;/style>
&lt;div class="code-collapse1">
&lt;div class="highlight">&lt;div style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">
&lt;table style="border-spacing:0;padding:0;margin:0;border:0;">&lt;tr>&lt;td style="vertical-align:top;padding:0;margin:0;border:0;">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">1
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">2
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">3
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">4
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>curl -XPUT &lt;span style="color:#c41a16">&amp;#39;localhost:9200/mastering/_settings&amp;#39;&lt;/span> -d &lt;span style="color:#c41a16">&amp;#39;{
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c41a16"> &amp;#34;index.routing.allocation.require.tag&amp;#34;: &amp;#34;node1&amp;#34;,
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c41a16"> &amp;#34;index.routing.allocation.require.group&amp;#34;: &amp;#34;groupA&amp;#34;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c41a16">}&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;/div>&lt;/p>
&lt;p>如果把索引状态命令的响应可视化，那么集群与下图类似：
&lt;img src="../imgs/20221225_es_04_5.png" alt="20221225_es_04_5.png">&lt;/p>
&lt;p>该视图跟前面使用 include 选项的不一样。这是由于 ES 将 mastering 索引的分片仅分配到与两个 require 参数都匹配的节点上，而例子中满足两个都匹配的只有第一个节点。&lt;/p>
&lt;h4 id="排除">排除&lt;/h4>
&lt;p>还使用前面的范例集群，创建 mastering 索引：&lt;/p>
&lt;style>
.td-content .highlight {
margin-top: 0.5rem;
margin-bottom: 0.5rem;
}
.code-collapse1 {
overflow-y: auto;
max-height: 500px;
overflow-x: auto;
max-width: 100%;
}
&lt;/style>
&lt;div class="code-collapse1">
&lt;div class="highlight">&lt;div style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">
&lt;table style="border-spacing:0;padding:0;margin:0;border:0;">&lt;tr>&lt;td style="vertical-align:top;padding:0;margin:0;border:0;">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">1
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">2
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">3
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">4
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">5
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">6
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">7
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">8
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>curl -XPOST &lt;span style="color:#c41a16">&amp;#39;localhost:9200/mastering&amp;#39;&lt;/span> -d &lt;span style="color:#c41a16">&amp;#39;{
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c41a16"> &amp;#34;settings&amp;#34;: {
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c41a16"> &amp;#34;index&amp;#34;: {
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c41a16"> &amp;#34;number_of_shards&amp;#34;: 2,
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c41a16"> &amp;#34;number_of_replica&amp;#34;: 0
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c41a16"> }
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c41a16"> }
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c41a16">}&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;p>然后执行下面的命令测试 exclude（排除）分配：
&lt;style>
.td-content .highlight {
margin-top: 0.5rem;
margin-bottom: 0.5rem;
}
.code-collapse1 {
overflow-y: auto;
max-height: 500px;
overflow-x: auto;
max-width: 100%;
}
&lt;/style>
&lt;div class="code-collapse1">
&lt;div class="highlight">&lt;div style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">
&lt;table style="border-spacing:0;padding:0;margin:0;border:0;">&lt;tr>&lt;td style="vertical-align:top;padding:0;margin:0;border:0;">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">1
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">2
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">3
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">4
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>curl -XPUT &lt;span style="color:#c41a16">&amp;#39;localhost:9200/mastering/_settings&amp;#39;&lt;/span> -d &lt;span style="color:#c41a16">&amp;#39;{
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c41a16"> &amp;#34;index.routing.allocation.require.tag&amp;#34;: &amp;#34;node1&amp;#34;,
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c41a16"> &amp;#34;index.routing.allocation.require.group&amp;#34;: &amp;#34;groupA&amp;#34;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c41a16">}&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;/div>&lt;/p>
&lt;p>再看看集群：
&lt;img src="../imgs/20221225_es_04_6.png" alt="20221225_es_04_6.png">&lt;/p>
&lt;p>如图所实施，要求 group 属性必须等于 groupA，同时希望排除 tag 等于 node1 的节点。这导致一个 mastering 索引的分片被分配到了 IP 地址为 192.168.2.2 的节点，如期望一致。&lt;/p>
&lt;h3 id="更多的分片分配属性">更多的分片分配属性&lt;/h3>
&lt;p>除了上面讨论过的，ES还允许使用一些分片来分配相关的属性。&lt;/p>
&lt;ul>
&lt;li>cluster.routing.allocation.allow_rebalance：该属性允许基于集群中所有分片的状态来控制执行再平衡（rebanlance）的时机。可选的值包括：always，使用该值时再平衡会按需执行，而不管索引分片的状态（谨慎使用该值，会造成很高的负载）；indices_primaries_active，使用该值当所有主分片时活动状态时在平衡会立刻执行；indices_all_active，使用该值再平衡在所有分片（主分片和副本）都分配好以后执行。默认值是 indices_all_active。&lt;/li>
&lt;li>cluster.routing.allocation.cluster_concurrent_rebanlance：该属性控制集群内有多少分片可以并发参与再平衡处理，默认值为2。该值设置较高会造成较高的I/O，并增加网络开销和节点的负载。&lt;/li>
&lt;li>cluster.routing.allocation.node_initial_primairies_recoveries：该属性指定了每个节点可以并发恢复的主分片数量。基于主分片恢复通畅比较快，即使把属性值设置得比较大， 也不会给节点本身带来过多压力。默认值为4。&lt;/li>
&lt;li>cluster.routing.allocation.node_concurrent_recoveries：该属性指定了每个节点允许的最大并发恢复分片数，默认值是2。指定过多的并发恢复的分片数会造成非常频繁的I/O活动。&lt;/li>
&lt;li>cluster.routing.allocation.disable_new_allocation：默认值为false。该属性用来控制是否禁止为新创建的索引分配新分片（包括主分片和副本分片）。该属性在希望延期分配新建的索引或分片时非常有用。也可以通过设置 index.routing.allocation.disable_new_allocation 属性为 true 来禁止向某个给定索引分配新的分片。&lt;/li>
&lt;li>cluster.routing.allocation.disable_allocation：默认值为false。用来控制是否禁止针对已创建的主分片和副本分片的分配。注意将一个副本分片提升为主分片（如果主分片不存在）的行为不算分配，因此这样的操作在属性为 true 时也是允许的。该属性在希望某段时间内禁止新建索引分配分片时非常有用。通过在索引的配置里设置 index.routing.allocation.disable_allocation 属性为 true，可以完全禁止向指定索引的分片分配。&lt;/li>
&lt;li>cluster.routing.allocation.disable_replica_allocation：默认值为false。设置为 true 时将会禁止将副本分片分配到节点。某时段停止分配副本分片时非常有用。也可以通过设置 index.routing.allocation.disable_replica_allocation 属性为 true 来禁止向一个给定索引分配副本。
前面所有的属性既可以在 elasticsearch.yml 文件里设置，也可以通过更新 API 来设置。在实践中通常只使用更新 API 来配置一些属性，如 cluster.routing.allocation.disable_new_allocation 、cluster.routing.allocation.disable_allocation 、 cluster.routing.allocation.disable_replica_allocation。&lt;/li>
&lt;/ul>
&lt;h2 id="查询执行偏好">查询执行偏好&lt;/h2>
&lt;p>还可以指定查询（以及其他操作，如实时获取）在哪里执行。&lt;/p>
&lt;p>了解细节之前，先查看范例集群：&lt;/p>
&lt;p>&lt;img src="../imgs/20221225_es_04_7.png" alt="20221225_es_04_7.png">&lt;/p>
&lt;p>如图集群中有三个节点和一个叫作 mastering 的索引。索引被分割为两个主分片，每个主分片有一个副本。&lt;/p>
&lt;h4 id="介绍preference参数">介绍preference参数&lt;/h4>
&lt;p>为了控制所发送查询（和其他操作）执行的地点，可以使用preference参数，可以取下面这些值：&lt;/p>
&lt;ul>
&lt;li>_primary：使用这个属性，发送的操作仅会在主分片上执行。如果想 mastering 索引发送一个查询请求，并将 preference 参数设置为 _primary，那么请求会在 node1 和 node2 上执行。如用户知道主分片在某个机柜，而副本在其它机柜，可能希望通过在主分片上执行操作来避免网络开销。&lt;/li>
&lt;li>_primary_first：该属性的行为很像 _primary，只是当主分片由于某些原因不可用时可以转而使用其副本，但它有一个自动故障恢复机制。如果向 mastering 索引发送一个查询请求，并设置 preference 参数为 _primary_first，那么查询会在 node1 和 node2 上执行。而一旦一个（或多个）主分片失败，查询会在另一个分片上执行，比如例子中这个分片分配在 node3 上。&lt;/li>
&lt;li>_local：ES在可能的情况下会优先在本地节点上执行操作。如发送一个查询请求给 node3 同时将 preference 参数设置为 _local，那么查询就会在该节点上执行。在最小化网络延时时尤为有用。&lt;/li>
&lt;li>_only_node:xxx：该操作只会在拥有置顶标识符的节点上执行。注意：如果没有足够的分片来覆盖所有的索引数据，查询只会在指定节点的可用分片上执行。&lt;/li>
&lt;li>_prefer_node:xxx：该选项设置 preference 参数为 _prefer_node，后面跟着某节点的标识符。使ES优先在指定的节点上执行查询，但如果该节点上一些分片不可用时，ES会将恰当的查询部分发送给分片可用的节点。与 _only_node 选项类似，_prefer_node 可以用来选择一个特定的节点，只是当特定节点不可用时可以转而使用其他节点。&lt;/li>
&lt;li>_shards:0,1：既指定操作将在哪个分片上执行，也是唯一一个可以和其他选项值组合的 preference 参数值。如：0,1;_local，表示为了在本地的 0 和 1 分片上执行查询，用分号连接 0,1 和 _local。对调试而言允许在一个分片上执行查询非常有用。&lt;/li>
&lt;li>custom：自定义值，确保具有相同值的查询会在相同的分片上执行。例如，发送一个 preference 参数值为 masterIng_elasticsearch 的查询，那么查询会在名称是 node1 和 node2 的节点的主分片上执行。如果发送另一个具有相同 preference 参数值的查询，那么该查询将在相同的分片上执行。该功能在需要有不同的刷新频率，并且不希望用户在重复查询时看到不同结果时尤为有用。
ES 默认会在分片和副本之间随机执行操作。如果发送大量请求，那么最终每个分片和副本上将会执行相同（或者几乎相同）数量的查询。&lt;/li>
&lt;/ul>
&lt;h2 id="应用知识">应用知识&lt;/h2>
&lt;h3 id="基本假定">基本假定&lt;/h3>
&lt;h4 id="数据量和查询说明">数据量和查询说明&lt;/h4>
&lt;p>假设有一个在线图书馆，当前销售着大约 10 万本不同语言的图书。&lt;/p>
&lt;p>期望平均的查询响应时间小于等于 200 毫秒，避免用户在输入查询之后或搜索结果呈现之前等待太长时间。&lt;/p>
&lt;p>通过一些性能测试（暂略），发现当数据分成两个分片，每个分片一个副本时，4个节点的集群工作状态时最好的。&lt;/p>
&lt;blockquote>
&lt;p>可以使用开源工具来对集群发起请求做性能测试，例如 ApacheJMter（参见 &lt;a href="http://jmeter.apache.org/">http://jmeter.apache.org/&lt;/a> ）或 ActionGenerator（参见 &lt;a href="https://github.com/sematext/ActionGenerator">https://github.com/sematext/ActionGenerator&lt;/a> ）。此外还可以使用 ES API （通过类似 paramedic 的插件（参见 &lt;a href="https://github.com/karmi/elasticsearch-paramedic">https://github.com/karmi/elasticsearch-paramedic&lt;/a> ））来查看统计记录，或者使用 BigDesk（参见 &lt;a href="https://github.com/lukas-vlcek/bigdesk%EF%BC%89%EF%BC%8C">https://github.com/lukas-vlcek/bigdesk&lt;/a> ），又或者使用一个全面监控和可调节的解决方案，类似于来自 Sematext 的 SPM for ElasticSearch（参见 &lt;a href="http://sematext.com/spm/elasticsearch-performance-monitoring/index.html">http://sematext.com/spm/elasticsearch-performance-monitoring/index.html&lt;/a> ）&lt;/p>
&lt;/blockquote>
&lt;p>集群类似：&lt;/p>
&lt;p>&lt;img src="../imgs/20221225_es_04_8.png" alt="20221225_es_04_8.png">&lt;/p>
&lt;p>当然确切地分片和副本的位置可能不同，但背后的逻辑相同，即：每个节点上有一个分片。&lt;/p>
&lt;h3 id="配置">配置&lt;/h3>
&lt;p>创建集群的配置信息：&lt;/p>
&lt;style>
.highlight {
overflow-y: auto;
max-height: 500px;
overflow-x: auto;
max-width: 130%;
}
.td-content .highlight {
margin-top: 0.5rem;
margin-bottom: 0.5rem;
}
&lt;/style>
&lt;details class="code-collapse">
&lt;summary>Expand/Collapse Code Block&lt;/summary>
&lt;div class="highlight">&lt;div style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">
&lt;table style="border-spacing:0;padding:0;margin:0;border:0;">&lt;tr>&lt;td style="vertical-align:top;padding:0;margin:0;border:0;">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 1
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 2
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 3
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 4
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 5
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 6
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 7
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 8
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 9
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">10
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">11
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">12
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">13
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">14
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">15
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">16
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">17
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">18
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">19
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">20
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">21
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">22
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">23
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">24
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">25
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">26
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">27
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">28
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">29
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">30
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">31
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">32
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">33
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">34
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">35
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">36
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">37
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">38
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-plain" data-lang="plain">&lt;span style="display:flex;">&lt;span>cluster.name: books
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span># node configuration
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>node.master: true
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>node.data: true
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>node.max_local_storage_nodes: 1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span># indices configuration
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>index.number_of_shards: 2
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>index.number_of_replicas: 1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>index.routing.allocation.total_shards_per_node: 1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span># instance paths
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>path.conf: /usr/share/elasticsearch/conf
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>path.plugins: /usr/share/elasticsearch/plugins
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>path.data: /mnt/data/elasticsearch
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>path.work: /usr/share/elasticsearch/work
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>path.logs: /var/log/elasticsearch
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span># swapping
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>bootstrap.mlockall: true
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span># gateway
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>gateway.type: local
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>gateway.recover_after_nodes: 3
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>gateway.recover_after_time: 30s
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>gateway.expected_nodes: 4
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span># recovery
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>cluster.routing.allocation.node_initial_primaries_recoveries: 1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>cluster.routing.allocstion.node_concurrent_recoveries: 1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>indices.recovery.concurrent_streams: 8
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span># discovery
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>discovery.zen.minimum_master_nodes: 3
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span># search and fetch logging
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>index.search.slowlog.threshold.query.info: 500ms
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>index.search.slowlog.threshold.query.debug: 100ms
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>index.search.slowlog.threshold.fetch.info: 1s
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>index.search.slowlog.threshold.fetch.debug: 200ms
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span># JVM gargabe collection work logging
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>monitor.jvm.gc.ParNew.info: 700ms
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>monitor.jvm.gc.ParNew.debug: 400ms
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>monitor.jvm.gc.ConcurrentMarkSweep.info: 5s
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>monitor.jvm.gc.ConcurrentMarkSweep.debug: 2s
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;/details>
&lt;br/>
&lt;h4 id="节点级配置">节点级配置&lt;/h4>
&lt;p>指定了集群名（使用 cluster.name 属性）来识别集群。如果相同网络内存在多个集群，那么拥有相同集群名称的节点会尝试相互连接并组成集群。将节点设置为可被选举为主节点（node.master 属性为 true），并使之能容纳索引数据（node.data: true）。除此之外，将 node.max_local_storage_nodes 属性设为 1，为了避免单个节点上运行多个 ES 实例。&lt;/p>
&lt;h4 id="索引级配置">索引级配置&lt;/h4>
&lt;p>这里只有一个索引且不会增加。设置默认的分片数为 2 （index.number_of_shards 属性），默认的副本数为 1（index.number_of_replicas 属性）。设置 index.routing.allocation.total_shards_per_node 属性为 1，意味着 ES 会针对每个索引在相应节点上放置一个分片，这里集群有 4 个节点，分片能够在节点上平均分配。&lt;/p>
&lt;h4 id="目录布局">目录布局&lt;/h4>
&lt;p>将 ES 安装到 /usr/share/elasticsearch，因而 conf、plugins 和 work 目录也都相应配置到了该目录中。数据放置在一个特别指定的硬盘驱动器上，可通过 /mnt/data/elasticsearch 挂载点访问。日志文件存储在 /var/log/elasticsearch 目录中。这样的目录布局，在更改时只需要考虑 /usr/share/elasticsearch 目录，而不用关心其它目录。&lt;/p>
&lt;h4 id="网关配置">网关配置&lt;/h4>
&lt;p>网关是负责存储索引及其元数据的模块。这里选择了推荐的并且唯一未废弃的网关类型，即 local（gateway.type 属性）。另外也希望恢复进程在有 3 个节点时（gateway.recover_after_nodes 属性），且在至少 3 个节点相互连接上 30 秒（gateway.recover_after_time 属性）之后立即执行。此外通过设置 gateway.expected_nodes 能告知 ES 集群将由 4 个节点组成。&lt;/p>
&lt;h4 id="恢复">恢复&lt;/h4>
&lt;p>集群恢复是一个最关键的配置。设置 cluster.routing.allocation.node_initial_primaries_recoveries 属性为 1，意味着仅允许每个节点上同时回复 1 个主分片。因为已设置每个节点上只运行一个 ES 实例。这个操作对于 local 网关类型非常快，因此如果每个节点存在一个以上的主分片则该值可以设置得更大些。也将 cluster.routing.allocation.node_concurrent_recoveries 属性设为 1 来限制每个节点上同时进行的恢复操作数（每个节点上只有一个分片，因此没有命中该规则，但如果每个节点有更多分片且 I/O 负荷允许，那么可以设置一个较大值）。此外将 indices.recovery.concurrent_streams 属性设为 8，因为在恢复操作的初始测试期间，网络和服务器在从对等分片回复一个分片时可以轻松使用 8 个并发文件流，基本上意味 8 个索引文件被同时读取。&lt;/p>
&lt;h4 id="发现">发现&lt;/h4>
&lt;p>发现模块的配置仅设置了一个属性 discovery.zen.minimum_master_nodes 的属性值为 3。它能指定组成集群所需的且可以成为主节点的最小节点数，取值至少是集群节点的一半加 1，这里的例子是 3。会避免出现集群中的节点由于一些故障断开组成了一个同名的新集群（所谓的脑裂状况）。这种情形非常危险，会造成数据损坏（因为两个新组成的集群会同时索引和改变数据）。&lt;/p>
&lt;h4 id="记录慢查询">记录慢查询&lt;/h4>
&lt;p>协同ES工作时，记录执行时间大于等于某个阈值的查询非常重要。注意：这个日志记录的不是查询的全部执行时间，而是查询在每个分片上执行的时间，意味着日志记录的只是执行时间的一部分。这个例子里，想使用 INFO 级日志记录超过 500 毫秒的查询和执行超过 1 秒的实时读取操作。对于调试级日志，分别设置为 100 毫秒和 200 毫秒。配置片段如下：&lt;/p>
&lt;style>
.td-content .highlight {
margin-top: 0.5rem;
margin-bottom: 0.5rem;
}
.code-collapse1 {
overflow-y: auto;
max-height: 500px;
overflow-x: auto;
max-width: 100%;
}
&lt;/style>
&lt;div class="code-collapse1">
&lt;div class="highlight">&lt;div style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">
&lt;table style="border-spacing:0;padding:0;margin:0;border:0;">&lt;tr>&lt;td style="vertical-align:top;padding:0;margin:0;border:0;">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">1
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">2
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">3
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">4
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-plain" data-lang="plain">&lt;span style="display:flex;">&lt;span>index.search.slowlog.threshold.query.info: 500ms
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>index.search.slowlog.threshold.query.debug: 100ms
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>index.search.slowlog.threshold.fetch.info: 1s
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>index.search.slowlog.threshold.fetch.debug: 200ms
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;h4 id="记录垃圾回收器的工作情况">记录垃圾回收器的工作情况&lt;/h4>
&lt;p>想要搞清楚是否以及何时垃圾回收器消耗了太多时间，在 elasticsearch.yml 文件中加入下面几行：&lt;/p>
&lt;style>
.td-content .highlight {
margin-top: 0.5rem;
margin-bottom: 0.5rem;
}
.code-collapse1 {
overflow-y: auto;
max-height: 500px;
overflow-x: auto;
max-width: 100%;
}
&lt;/style>
&lt;div class="code-collapse1">
&lt;div class="highlight">&lt;div style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">
&lt;table style="border-spacing:0;padding:0;margin:0;border:0;">&lt;tr>&lt;td style="vertical-align:top;padding:0;margin:0;border:0;">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">1
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">2
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">3
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">4
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-plain" data-lang="plain">&lt;span style="display:flex;">&lt;span>monitor.jvm.gc.ParNew.info: 700ms
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>monitor.jvm.gc.ParNew.debug: 400ms
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>monitor.jvm.gc.ConcurrentMarkSweep.info: 5s
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>monitor.jvm.gc.ConcurrentMarkSweep.debug: 2s
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;p>通过使用 INFO 级日志，当并发标记清除（concurrent mark sweep）执行等于或超过 5 秒时，以及新生代收集（younger generation collection）执行超过 700 毫秒时，ES 会记录垃圾回收器工作超时的信息。同时也加上 DEBUG 级日志，用来应对我们想要调试或者修复问题的情况。&lt;/p>
&lt;h4 id="内存设置">内存设置&lt;/h4>
&lt;p>假设节点各有 16G 内存，通常的建议是不要使 Java 虚拟机堆的大小超过可用内存总量的 50%，对当前这个例子来说也是一样。将 Xmx 和 Xms Java 的属性设为 8G，对这个例子来说足够了，因为索引不大，另外数据里也没有父子关系（parent-child relationships），更没有在高基数字段上做切面计算。前面设置了 ES 记录垃圾回收器的信息，为了长期监控，可能还需要使用类似 SPM（&lt;a href="http://sematext.com/spm/index.html%EF%BC%89%E6%88%96">http://sematext.com/spm/index.html&lt;/a> ）或 Munin（&lt;a href="http://munin-monitoring.org/">http://munin-monitoring.org/&lt;/a> ）的监控工具。&lt;/p>
&lt;blockquote>
&lt;p>注意：举例如果索引占用了约 30G 的磁盘空间，即使共有 128G 内存，但是由于大量的父子关系和高基数字段 faceting，还是发生了内存溢出异常，甚至已经给 Java 虚拟机堆分配了 64G 内存。这种情况不必完全避免分配超过 50% 的总可用内存给 Java 虚拟机。应该要具体情况具体分析，前面的例子索引大小远远小于从 128G 分出 64G 给 Java 虚拟机后剩余的可用内存，可以增加 Java 虚拟机的内存使用量，但是要记得留下足够的内存，这样交换（swapping）就不会在系统里发生了。&lt;/p>
&lt;/blockquote>
&lt;p>还有一个属性 bootstrap.mlockall 属性，设置为 true 表示允许 ES 锁定堆内存，确保内存不会被交换。同时，也建议把 ES_MIN_MEM 和 ES_MAX_MEM 变量设置成同样的值，以确保服务器有足够的空余物理内存来启动 ES，且留有足够的内存给操作系统，使其能完美工作。&lt;/p>
&lt;h3 id="变化">变化&lt;/h3>
&lt;p>如果图书文档数量扩大 20 倍，意味着需要调整 ES 集群，保证用户又相同或者更好的搜索体验。最容易做的无需额外工作的事情就是增加副本的数量，但缺点是副本需要更多的磁盘空间，其次要确保额外的副本可以分配到集群的节点中（参考本章最开始的公式）。此外还需要做性能测试，因为最终的吞吐量总是依赖很多因素，不能通过数学公式来描述。&lt;/p>
&lt;p>如果过度分配了分片，就为预期的增长留下了空间，但这个例子中只有 2 个分片，对于 10 万的数据量来说非常合适，但是对于处理 210 万的数据量来说太小了。&lt;/p>
&lt;h4 id="重新索引">重新索引&lt;/h4>
&lt;p>方案一是删除老的索引，然后新建一个新的有着更大分片数的索引。这是最简单的解决方案，但会导致服务在重建索引期间不可用。因为索引文档的成本很高，而且索引整个数据库的时间很长。公司的业务方会认为因重建索引而暂停这么长时间的服务是不可接受的。&lt;/p>
&lt;p>第二个方案是再建一个新索引，向它灌数据然后在合适时将应用程序切到新索引上。作为一个选择，可以通过别名来使用新索引，而不用影响应用程序的配置。但是这样仍存在一个小问题，即创建新索引需要额外的磁盘空间，当然可以购买有着更大磁盘的新机器（必须索引新的大数据），但是在它们到位前，也应该能应付所有这些耗时的任务。&lt;/p>
&lt;h4 id="路由-1">路由&lt;/h4>
&lt;p>使用路由最明显的好处是能创建有效查询（仅返回我们的基础数据集或属于我们业务伙伴的图书），这是因为路由能允许我们只在部分索引中查询。必须谨记应使用适当的过滤器，路由不能保证来自两个数据源的数据分别处在不同的分片上。所以引入路由也需要重建索引，该方案被否决。&lt;/p>
&lt;h4 id="多个索引">多个索引&lt;/h4>
&lt;p>ES 允许无需额外的开销就可以在多个索引上进行搜索。可以在 API 端点上使用多个索引，如 /books,partner1/。还有一个更有弹性的方式允许方便快速添加另一个伙伴，而不用对应用程序做任何改动，也不需要停止服务。可以使用别名定义虚拟索引，不需要改变应用程序代码。&lt;/p>
&lt;p>头脑风暴之后决定选择最后的解决方案，同时加上一些让 ES 在索引期间承受较小压力的额外改进。如下所示：禁用刷新率（refresh rate）同时删除分片副本：&lt;/p>
&lt;style>
.td-content .highlight {
margin-top: 0.5rem;
margin-bottom: 0.5rem;
}
.code-collapse1 {
overflow-y: auto;
max-height: 500px;
overflow-x: auto;
max-width: 100%;
}
&lt;/style>
&lt;div class="code-collapse1">
&lt;div class="highlight">&lt;div style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">
&lt;table style="border-spacing:0;padding:0;margin:0;border:0;">&lt;tr>&lt;td style="vertical-align:top;padding:0;margin:0;border:0;">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">1
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">2
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">3
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">4
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">5
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">6
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>curl -XPUT localhost:9200/books/_settings -d &lt;span style="color:#c41a16">&amp;#39;{
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c41a16"> &amp;#34;index&amp;#34;: {
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c41a16"> &amp;#34;refresh_interval&amp;#34;: -1,
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c41a16"> &amp;#34;number_of_replicas&amp;#34;: 0
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c41a16"> }
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c41a16">}&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;h3 id="小结">小结&lt;/h3>
&lt;p>本章学习了如何为 ES 的部署选择正确的副本分片数。也了解了在查询和索引时路由如何起作用。同时学习了分片分配器如何工作以及需要怎样的配置才能满足需求。然后按照需求配置了分片的分配机制，学习了如何选择查询执行偏好来指定操作在哪个节点上执行。最后配置了一个贴近现实的范例集群，并在需要时扩展了它。&lt;/p></description></item><item><title>Docs: 深入理解ES-05管理ES</title><link>/docs/44.%E6%90%9C%E7%B4%A2/%E6%B7%B1%E5%85%A5%E7%90%86%E8%A7%A3ElasticSearch/%E6%B7%B1%E5%85%A5%E7%90%86%E8%A7%A3ES-05%E7%AE%A1%E7%90%86ES/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/docs/44.%E6%90%9C%E7%B4%A2/%E6%B7%B1%E5%85%A5%E7%90%86%E8%A7%A3ElasticSearch/%E6%B7%B1%E5%85%A5%E7%90%86%E8%A7%A3ES-05%E7%AE%A1%E7%90%86ES/</guid><description>
&lt;p>本章将会学习：&lt;/p>
&lt;ul>
&lt;li>如何选择正确的目录实现，使得 ES 能够以高效的方式访问底层 I/O 系统&lt;/li>
&lt;li>如何配置发现模块来避免潜在的问题&lt;/li>
&lt;li>如何配置网关模块以适应需求&lt;/li>
&lt;li>恢复模块能带来什么，以及如何更改它的配置&lt;/li>
&lt;li>如何查看段信息&lt;/li>
&lt;li>ES 的缓存是什么样的，职责是什么，如何使用以及更改它的配置&lt;/li>
&lt;/ul>
&lt;h2 id="选择正确的目录实现-存储模块">选择正确的目录实现-存储模块&lt;/h2>
&lt;p>存储模块非常重要，该模块允许用户控制索引的存储方式。如可以持久化存储（存储在磁盘上）或非持久化存储（存储在内存中）。ES 的大多数存储类型与 Apache Lucene 中 Directory 类的子类是一一对应的。而目录能存取构成索引的各种文件，因此对其做适当的配置也是至关重要的。&lt;/p>
&lt;h3 id="存储类型">存储类型&lt;/h3>
&lt;p>ES 提供了 4 种可用的存储类型。&lt;/p>
&lt;h4 id="简单文件系统存储">简单文件系统存储&lt;/h4>
&lt;p>最简单的目录类的实现，使用一个随机读写文件（Java RandomAccessFile: &lt;a href="http://docs.oracle.com/javase/7/docs/api/java/io/RandomAccessFile.html">http://docs.oracle.com/javase/7/docs/api/java/io/RandomAccessFile.html&lt;/a> ）进行文件操作，并与 Apache Lucene 的 SimpleFSDirectory 类对应（&lt;a href="http://lucene.apache.org/core/4_5_0/core/org/apache/lucene/store/SimpleFSDDirectory.html">http://lucene.apache.org/core/4_5_0/core/org/apache/lucene/store/SimpleFSDDirectory.html&lt;/a> ）。对于简单的应用来说是够用的，但瓶颈主要是在多线程访问上，即性能非常差。对于 ES 来说，最好使用基于新 I/O 的系统存储来代替简单文件系统存储。然后，如果确实需要使用这种存储类型，则需要将 index.store.type 属性设为 simplefs。&lt;/p>
&lt;h4 id="新i-o文件系统存储">新I/O文件系统存储&lt;/h4>
&lt;p>该存储类型使用基于 java.nio.FileChannel（&lt;a href="http://docs.oracle.com/javase/7/docs/api/java/nio/channels/FileChannel.html">http://docs.oracle.com/javase/7/docs/api/java/nio/channels/FileChannel.html&lt;/a> ）的目录实现，与 Apache Lucene 的 NIOFSDirectory 类对应。该实现允许多个线程在不降低性能的前提下访问同一个文件。如果想使用这个存储类型，需要将 index.store.type 属性设为 niofs。&lt;/p>
&lt;h4 id="mmap文件系统存储">MMap文件系统存储&lt;/h4>
&lt;p>该存储类型使用了 Apache Lucene 的 MMapDirectory 实现。它使用 mmap 系统命令来读取和随机写入文件，并从进程的虚拟地址空间的可用部分中分出与被映射文件大小相同的空间，用于装载被映射文件。它没有任何锁机制，非常适合多线程访问。当使用 mmap 来为操作系统读取索引时就像它已经缓存过了一样（它被映射到了虚拟地址空间）。当从 Lucene 索引中读取某文件时，不需要把文件载入操作系统的缓存中，因此访问速度更快。基本上允许 Lucene 和 ES 去直接访问 I/O 缓存，从而获得了更快的索引文件访问速度。&lt;/p>
&lt;p>需要注意，MMap 文件系统存储在 64 位环境下工作最佳，对于 32 位系统，只有确信索引足够小，且虚拟地址空间足够大时才可以使用。要使用此存储类型，需要将 index.store.type 属性设为 mmapfs。&lt;/p>
&lt;h4 id="内存存储">内存存储&lt;/h4>
&lt;p>内存存储时唯一一个不是基于 Apache Lucene 目录的存储类型，它允许把全部索引都保存在内存中，因此文件并没有存储在硬盘上。这点很关键，意味着索引数据是非持久化的，无论何时，只要集群彻底重启索引数据就会被删除。然而，如果需要一份非常快的小索引，拥有多个分片和副本，且可以快速重建，那么内存存储可以作为你的选择。使用该存储类型，需要将 index.store.type 属性设为 memory。&lt;/p>
&lt;blockquote>
&lt;p>内存存储中的数据与其它存储类型中的数据一样，会被复制到所有能容纳数据的节点上去。&lt;/p>
&lt;/blockquote>
&lt;h4 id="附加属性">附加属性&lt;/h4>
&lt;p>当使用内存存储类型时，也能一定程度上控制缓存，这点非常重要。注意以下设置都是节点级别的：&lt;/p>
&lt;ul>
&lt;li>cache.memory.direct：定义内存存储是否应该被分配到 Java 虚拟机堆内存之外，默认为 true。一般情况下应该保持为默认值，从而能避免堆内存过载。&lt;/li>
&lt;li>cache.memory.small_buffer_size：定义小缓冲区的大小，默认值是 1KB。小缓冲区是用来容纳段（segment）信息和已删除文档信息的内部内存结构。&lt;/li>
&lt;li>cache.memory.large_buffer_size：定义大缓冲区的大小，默认值是 1MB。大缓冲区是用来容纳出段信息和已删除文档信息外的索引文件的内部内存结构。&lt;/li>
&lt;li>cache.memory.small_cache_size：定义小缓存的大小，默认值是 10MB。小缓存是用来缓存段信息和已删除文档信息的内部内存结构。&lt;/li>
&lt;li>cache.memory.large_cache_size：定义大缓存的大小，默认值是 500MB。大缓存是用来缓存除段信息和已删除文档信息外的索引文件的内部内存结构。&lt;/li>
&lt;/ul>
&lt;h4 id="默认存储类型">默认存储类型&lt;/h4>
&lt;p>ES 默认使用基于文件系统的存储类型。针对不同的操作系统往往会选择不同的存储类型，但终究都使用了基于文件系统的存储类型。例如，ES 在 32 位的 Windows 系统上使用 simplefs 类型，在 Solaris 和 64 位的 Windows 系统上使用 mmapfs，其它系统则使用 niofs。&lt;/p>
&lt;blockquote>
&lt;p>如果你想了解一些关于如何选择目录实现的专家见解， 请查看 Uwe Schindler 发表的
博文 &lt;a href="http://blog.thetaphi.de/2012/07/use-lucenes-mmapdirectory-on-64bit.html">http://blog.thetaphi.de/2012/07/use-lucenes-mmapdirectory-on-64bit.html&lt;/a> ，以及 Jorg Prante 发表的博文 &lt;a href="http://jprante.github.io/applications/2012/07/26/Mmap-with-Lucene.html">http://jprante.github.io/applications/2012/07/26/Mmap-with-Lucene.html&lt;/a> 。&lt;/p>
&lt;/blockquote>
&lt;p>通常，默认的存储类型就是想使用的那个，但有时候需要使用 MMap 文件系统存储类型，尤其当有用很多内存，且索引又很大的时候。因为当使用 mmap 来访问索引文件时，索引文件只会被缓存一次，且可以被 Lucene 和操作系统重复使用。&lt;/p>
&lt;h2 id="发现模块的配置">发现模块的配置&lt;/h2>
&lt;p>ES 就是为集群而设计的，这是 ES 跟其它类似的开源解决方案的最大不同。通过发现机制（discovery mechanism）ES 极大地简化了设置集群所需的工作。&lt;/p>
&lt;p>定义了想通 cluster.name 的节点会自动组成集群，这让我们可以在相同的网络中拥有多个独立的集群，但缺点是有时会忘记修改配置而意外地加入到了其它集群。这种情况下 ES 会重新平衡集群，转移一些数据到新加入的节点上。当该节点关机时，集群中的一些数据可能会魔术般地消失掉。&lt;/p>
&lt;h3 id="zen发现">Zen发现&lt;/h3>
&lt;p>Zen发现（Zen discovery）是ES自带的默认发现机制。Zen发现默认使用多播来发现其它节点。这种解决方案非常快捷，一切顺利的话只要启动一个新的 ES 节点，并给它设置与集群相同的名字，它就会加入到集群中，并被其它节点探测出来。如果出现问题，应该检查 publish_host 或 host 设置，确保 ES 监听了正确的网络接口。&lt;/p>
&lt;p>有时候多播会由于各种原因而失效，或者在一个大型集群中使用多播发现会产生大量不必要的流量，这可能都是不想使用多播的合理理由。这些情况下，Zen发现使用了第二种发现方法：单播模式。下面描述下这些模式的具体配置：&lt;/p>
&lt;h4 id="多播">多播&lt;/h4>
&lt;p>多播（multicast）是ES的默认模式。当节点还没有加入任何集群时（如节点刚刚启动或重启），它会发出一个多播的 ping 请求，相当于通知所有可见的节点和集群，它已经可用并准备好加入集群了。&lt;/p>
&lt;p>Zen发现模块的多播部分有如下配置：&lt;/p>
&lt;ul>
&lt;li>discovery.zen.ping.multicast.address：通信接口，可复制为地址或接口名。默认值是所有可用接口。&lt;/li>
&lt;li>discovery.zen.ping.multicast.port：通信端口，默认为 54328。&lt;/li>
&lt;li>discovery.zen.ping.multicast.group：代表发送多播信息的地址，默认为 224.2.2.4。&lt;/li>
&lt;li>discovery.zen.ping.multicast.buffer_size：缓冲区大小，默认为 2048。&lt;/li>
&lt;li>discovery.zen.ping.multicast.ttl：定义多播消息的生存期，默认为 3。每次包通过路由时，TTL 就会递减。这样可以限制广播接收的访问。注意，路由数的阈值设置可参考 TTL 的值，但要确保 TTL 的值不能恰好等于数据包经过的路由数。&lt;/li>
&lt;li>discovery.zen.ping.multicast.enabled：默认 true。如果打算使用单播方式二需要关闭多播时，可设置为 false。&lt;/li>
&lt;/ul>
&lt;h4 id="单播">单播&lt;/h4>
&lt;p>当节点不是集群中的一部分时（如刚刚重启，启动或由于某些故障脱离集群），它会发送一个 ping 请求给配置文件所指定的那些地址，通知所有的节点它准备好要加入集群了。&lt;/p>
&lt;p>单播的配置非常简单，如下所示：&lt;/p>
&lt;ul>
&lt;li>discovery.zen.ping.unictas.hosts：代表集群中的初始化节点列表，可称之为一个列表或主机数组。每个主机可指定一个名称（或IP地址），还可以追加一个端口或端口范围。例如，属性值可以是：[&amp;quot;master1&amp;quot;, &amp;quot;master2:8181&amp;quot;, &amp;quot;master3[80000-81000]&amp;quot;]。一般来说，单播发现的主机列表不需要是集群中所有ES节点的完整列表，因为新节点一旦与列表中的任何一个节点相连，就会知晓组成集群的其它全部节点的信息。&lt;/li>
&lt;li>discovery.zen.ping.unictas.concurrent_connects：定义单播发现使用的最大并发连接数。默认 10 个。&lt;/li>
&lt;/ul>
&lt;h4 id="最小主节点数">最小主节点数&lt;/h4>
&lt;p>对发现模块来说一个最重要的属性是 discovery.zen.minimum_master_nodes 属性。它允许设置构建集群所需的最小主节点（master node）候选节点数。这让我们避免了由于某些错误（如网络问题）而出现令人头疼的局面（即多个集群同名）。建议使用 discovery.zen.minimum_master_nodes 属性并设置为大于等于集群节点数的一半加 1。&lt;/p>
&lt;h4 id="zen发现错误检测">Zen发现错误检测&lt;/h4>
&lt;p>ES 在工作中执行两个检测流程。第一个流程是由主节点向集群中其它节点发送 ping 请求来检测它们是否工作正常。第二个流程刚好相反，由每个节点向主节点发送请求来验证主节点是否正在运行并能履行其职责。然后由于网络速度很慢，或者节点部署在不同的地点，那么默认的配置也许就不合适了。因此 ES 的发现模块提供了一下可以修改的配置：&lt;/p>
&lt;ul>
&lt;li>discovery.zen.fd.ping_interval：设置节点向目标节点发送 ping 请求的频率，默认 1 秒。&lt;/li>
&lt;li>discovery.zen.fd.ping_timeout：设置节点等待 ping 请求响应的时长，默认 30 秒。如果节点使用率达到100%或者网速很慢，可以考虑增大该属性值。&lt;/li>
&lt;li>discovery.zen.fd.ping_retries：设置当目标节点被认为不可用之前 ping 请求的重试次数，默认为 3 次。如果网络丢包比较严重，可以考虑增大该属性值，或者修复网络。&lt;/li>
&lt;/ul>
&lt;h3 id="亚马逊ec2发现">亚马逊EC2发现&lt;/h3>
&lt;p>亚马逊商店除了交易商品外，还销售一些流行的服务，例如使用按量计费的模式销售存储空间或计算能力。这被称为 EC2 模式，亚马逊提供服务器实例，可以用来安装和使用 ES 集群（也可以安装其他许多东西，因为它们就相当于普通的 linux 服务器）。ES可以在 EC2 上工作，但由于环境的特性，一些功能在工作时会有所不同。其中之一就是发现模块，因为亚马逊 EC2 不支持多播发现。当然在单播模式下能正常工作，但失去了自动检测节点的能力，且在多数情况下不想失去这个功能。幸运的是还有一个替代方案：可以使用亚马逊 EC2 插件，即一个通过使用亚马逊 EC2 接口整合多播和单播发现的插件。&lt;/p>
&lt;blockquote>
&lt;p>确保设置 EC2 实例时，开启了实例间的通讯（默认端口 9200 和 9300）。这对 ES 通讯和集群能正常工作至关重要。当然通讯设置依赖于 network.bind_host 和 network.publish_host（或 network.host）的配置。&lt;/p>
&lt;/blockquote>
&lt;h4 id="ec2插件安装">EC2插件安装&lt;/h4>
&lt;p>同大多数插件一样，EC2插件的安装十分简单。安装时执行下面的命令：&lt;/p>
&lt;style>
.td-content .highlight {
margin-top: 0.5rem;
margin-bottom: 0.5rem;
}
.code-collapse1 {
overflow-y: auto;
max-height: 500px;
overflow-x: auto;
max-width: 100%;
}
&lt;/style>
&lt;div class="code-collapse1">
&lt;div class="highlight">&lt;div style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">
&lt;table style="border-spacing:0;padding:0;margin:0;border:0;">&lt;tr>&lt;td style="vertical-align:top;padding:0;margin:0;border:0;">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>bin/plugin install cloud-aws
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;p>&lt;strong>EC2插件的配置&lt;/strong>&lt;/p>
&lt;p>为了使EC2发现能正常工作，需要对插件的以下属性进行配置：&lt;/p>
&lt;ul>
&lt;li>cluster.aws.access_key：亚马逊访问key，凭据值之一，可以在亚马逊配置面板中找到。&lt;/li>
&lt;li>cluster.aws.secret_key：亚马逊安全key，同 access_key 一样，可以在亚马逊 EC2 的配置面板中找到。
最后一件事是通知ES将要使用新的发现模式。可以通过关闭多播，并设置 discovery.type 属性值为 ec2 来实现。&lt;/li>
&lt;/ul>
&lt;p>&lt;strong>可选的EC2发现配置&lt;/strong>&lt;/p>
&lt;p>前面提到的设置已经足够运行EC2发现，但为了控制EC2发现插件的行为，ES还提供了一下配置项：&lt;/p>
&lt;ul>
&lt;li>cloud.aws.region：指定连接亚马逊web服务的趋于（region）。可以选择一个适合的实例所在区域。例如，爱尔兰可以选择eu-west-1。可选的区域有：eu-west-1、us-east-1、us-west-1 和 ap-southeast-1。&lt;/li>
&lt;li>cloud.aws.ec2.endpoint：不同于前面提到的设置指定区域，该属性设置得是一个 AWS 端点地址。如 ec2.eu-west-1.amazonaws.com。&lt;/li>
&lt;li>cloud.ec2.ping_timeout：确定当发送 ping 消息给一个节点时，响应的最长时间，默认为 3 秒。超过这个时间，没有响应的节点会被认为是已经宕机，并从集群中移除。在网络有问题或有很多 ec2 节点时可以增大这个值。
&lt;strong>EC2节点扫描配置&lt;/strong>&lt;/li>
&lt;/ul>
&lt;p>该设置允许配置 EC2 集群构建过程中的一件非常重要的事情：在亚马逊网络上过滤可用 ES 节点的能力。ES EC2 插件提供了以下相关属性：&lt;/p>
&lt;ul>
&lt;li>discovery.ec2.host_type：指定了与集群中其它节点通信时使用的主机类型。可用选项有：private_ip（默认值，私有IP将被用来进行通信）、public_ip（公有IP将被用来进行通信）、private_dns（私有主机名将被用来进行通信）和 public_dns（公有主机名将被用来进行通信）&lt;/li>
&lt;li>discovery.ec2.tag：定义了一组设置。当启动亚马逊 EC2 实例时，可以定义描述该实例用途的标签，如客户名或环境类别，可以用这个标签来限制所发现的节点。如定义了一个名为 environment 的标签并赋值为 qa，配置时可以指定 discovery.ec2.tag.environment: qa。因而只有带着这个标签的实力上的节点才会被发现机制考虑。&lt;/li>
&lt;li>discovery.ec2.groups：定义了一个安全组列表。只有安全组内的节点才会被发现并加入到集群中。&lt;/li>
&lt;li>discovery.ec2.availability_zones：定义了一个可用地区列表。只有属于指定可用地区的节点才会被发现并加入到集群中。&lt;/li>
&lt;li>discovery.ec2.any_group：默认 true。设置为 false 会强制 EC2 发现插件只发现那些驻留在预定义好的安全组内的亚马逊实例上的ES节点。默认值只要求匹配一个组。&lt;/li>
&lt;li>cloud.node.auto_attributes：设为 true 时，上面的信息都能在配置分片部署时作为属性。&lt;/li>
&lt;/ul>
&lt;h4 id="网关和恢复的配置">网关和恢复的配置&lt;/h4>
&lt;p>网关模块允许存储所欲 ES 正常工作时所需的数据。这意味着不仅存储了 Apache Lucene 的索引文件，还存储了所有的元数据（如索引的分配设置），以及每个索引的映射（mapping）信息。无论何时集群的状态发生了改变，例如当分配属性改变时，集群的状态就会通过网关模块被持久化。当集群启动时，之前保存的状态信息就会加载，并有网关模块使用。&lt;/p>
&lt;blockquote>
&lt;p>注意在配置不同的节点和网关类型时，索引将使用所在节点所配置的那种网关类型。如果索引状态信息不应通过网关模块存储，需要显式设置索引网关类型为 none。&lt;/p>
&lt;/blockquote>
&lt;p>&lt;strong>恢复的过程&lt;/strong>&lt;/p>
&lt;p>恢复过程是 ES 为了正常运行而加载通过网关模块存储的数据的过程。无论何时，只要集群完全重启网关进程就开始生效，进而加载所有前面提到的那些相关信息：元数据、映射以及所有的索引。在分片恢复期间，ES在节点间拷贝数据，这些数据同样是 Lucene 索引、元数据和事务日志（用来恢复尚未索引的文档）。&lt;/p>
&lt;p>ES允许配置应当何时通过网关模块来恢复实际的数据、元数据和映射。例如，在开始恢复过程前，需要等待集群拥有了一定数量的候选主节点或数据节点。注意，在恢复过程结束前，集群上执行的任何操作都是禁止的。这样是为了避免出现修改冲突。&lt;/p>
&lt;p>&lt;strong>可配置的属性&lt;/strong>&lt;/p>
&lt;p>ES节点可以扮演不同的角色，可以作为数据节点（存储数据的节点），也可以作为主节点，其中主节点（一个集群中只有一个）除了处理查询请求外，还负责集群管理。当然节点也可以配置为既不是主节点也不是数据节点。这种情形下，该节点只作为执行用户查询的聚合节点。ES默认每个节点都是数据节点和候选主节点，但可以修改。取消某节点的主节点候选资格，在 elasticsearch.yml 文件中将 node.master 属性设为 false。让某节点成为非数据节点，在 elasticsearch.yml 文件中将 node.data 属性设为 false。&lt;/p>
&lt;p>除此之外，还允许使用以下属性来控制网关模块的行为：&lt;/p>
&lt;ul>
&lt;li>gateway.recover_after_nodes：整数类型，表示要启动恢复过程集群中所需的节点数。如，属性值为 5 时，如果要启动恢复过程，集群中就至少要有 5 个节点（无论是候选主节点还是数据节点）存在。&lt;/li>
&lt;li>gateway.recover_after_data_nodes：允许设置当恢复过程启动时，集群中需要存在的数据节点数。&lt;/li>
&lt;li>gateway.recover_after_master_nodes：允许设置当恢复过程启动时，集群中需要存在的候选主节点数。&lt;/li>
&lt;li>gateway.recover_after_time：允许设置在条件满足后，启动恢复过程前需要等待的时间。
&lt;strong>节点预期&lt;/strong>&lt;/li>
&lt;/ul>
&lt;p>还可以配置以下属性，从而可以强制启动恢复过程：&lt;/p>
&lt;ul>
&lt;li>gateway.expected_nodes：指定立即启动恢复过程需要集群中存在的节点数。如果不希望恢复过程被延迟，建议设置属性值为将用于构建集群的节点数（或者至少要接近这个数），因为这会保证最新的集群状态得到恢复。&lt;/li>
&lt;li>gateway.expected_data_nodes：指定了立即启动恢复过程需要集群中存在的数据节点数。&lt;/li>
&lt;li>gateway.expected_master_nodes：指定了立即启动恢复过程需要集群中存在的候选主节点数。&lt;/li>
&lt;/ul>
&lt;h3 id="本地网关">本地网关&lt;/h3>
&lt;p>随着 ES 0.20 版（以及 0.19 的某些版本）的发布，除了默认的本地类型，其它类型的网关都已弃用，并建议不再使用，因为在新版的 ES 中都会被移除。如果要避免重新索引全部数据，应该使用本地网关类型。&lt;/p>
&lt;p>本地网关类型使用节点上可用的本地存储来保存元数据、映射和索引。为了使用本地网关，需要有充足的磁盘空间来容纳数据（数据全部写入磁盘，而非保存在内存缓存中）。&lt;/p>
&lt;p>本地网关的持久化不同于其它当前存在（但是已经弃用）的网关类型。向本地网关的写操作是以同步的方式进行的，以确保在写入过程中没有数据丢失。&lt;/p>
&lt;blockquote>
&lt;p>为了设置想要使用的网关类型，需要使用 gateway.type 属性，默认为 local。&lt;/p>
&lt;/blockquote>
&lt;h4 id="备份本地网关">备份本地网关&lt;/h4>
&lt;p>ES 0.90.5 及其之前版本不支持本地网关存储数据的自动备份。然而有时备份是有必要的，例如升级集群时，希望出错后可以回滚。为了实现这个目的，需要执行下面的操作：&lt;/p>
&lt;ul>
&lt;li>停止向 ES 集群索引数据（意味着停止 river 或其它向 ES 发送数据的外部应用）&lt;/li>
&lt;li>使用清空（Flush）API 清空所有尚未索引的数据&lt;/li>
&lt;li>为分配在集群中的每个分片创建至少一个备份，至少可以保证一旦发生问题能找回数据。如果希望操作尽可能简单，可以拷贝集群中每个数据节点上的完整数据目录。&lt;/li>
&lt;/ul>
&lt;h3 id="恢复配置">恢复配置&lt;/h3>
&lt;p>除了前面提到的可以使用网关类配置 ES 恢复过程的行为，但是除此之外，ES 还允许配置回复过程本身。分片分配时已经提到了一些恢复配置选项。&lt;/p>
&lt;h4 id="集群级的恢复配置">集群级的恢复配置&lt;/h4>
&lt;p>恢复配置大多针对的是集群级别，允许设置恢复模块使用的通用规则，可设置一下属性：&lt;/p>
&lt;ul>
&lt;li>indices.recovery_concurrent_streams：制定了从分片源回复分片时允许打开的并发流的数量，默认是 3。较大的值会给网络层带来更大的压力，但恢复过程会更快，这依赖于网络的使用情况和吞吐量。&lt;/li>
&lt;li>indices.recovery.max_bytes_per_sec：制定了在分片恢复过程中每秒传输数据的最大值，默认是 20MB。如果想取消数据传输限制，需要把这个属性设为 0。与并发流属性类似，该属性允许控制恢复过程中网络的使用。把它设为较大的值会带来较高的网络利用率，而且恢复过程会更快。&lt;/li>
&lt;li>indices.recovery.compress：默认值为 true，用来指定 ES 是否在恢复过程汇总压缩传输的数据。设为 false 可以降低 CPU 的压力，但同样会导致更多的网络数据传输。&lt;/li>
&lt;li>indices.recovery.file_chunk_size：指定从源分片向目标分片拷贝数据时数据块（chunk）的大小。默认值为 512KB，而如果将 indices.recovery.compress 属性设为 true 该值也会被压缩。&lt;/li>
&lt;li>indices.recovery.translog_ops：默认值为 1000，指定在恢复过程中分片间传输数据时，单个请求里最多可以传输多少行事务日志。&lt;/li>
&lt;li>indices.recovery.translog_size：指定从源分片拷贝事务日志时使用的数据块的大小。默认值为 512KB，且如果 indices.recovery.compress 属性设为 true，该值还会被压缩。&lt;/li>
&lt;/ul>
&lt;blockquote>
&lt;p>ES 0.90.0 以上的版本，indices.recovery.max_size_per_sec 属性可以使用，但是已经被弃用，现在建议使用 indices.recovery.max_bytes_per_sec 属性来代替。&lt;/p>
&lt;/blockquote>
&lt;p>所有提到过的设置都可以通过集群的更新 API 来更新，或者在 elasticsearch.yml 文件里设置。&lt;/p>
&lt;h4 id="索引级的恢复配置">索引级的恢复配置&lt;/h4>
&lt;p>还有一个可以在索引级设置得属性，即 index.recovery.initial_shards 属性，既可以在 elasticsearch.yml 文件里设置，也可以通过索引更新 API 设置。通常 ES 只有在特定数量的分片存在且能被分配时才会恢复一个特定的分片。该特定数量等于指定索引的分片数的 50% 加 1。通过 index.recovery.initial_shards 属性，可以改变 ES 的“特定数量”。该属性可以取以下值：&lt;/p>
&lt;ul>
&lt;li>quorum：这个值暗示需要总分片数 *50% 加 1 个分片存在且可分配。&lt;/li>
&lt;li>quorum-1：这个值暗示对于给定索引，需要总分片数 *50% 个分片存在且可以分配。&lt;/li>
&lt;li>full：这个值暗示对于给定索引，需要所有分片存在且可分配。&lt;/li>
&lt;li>full-1：这个值暗示对于给定索引，需要总分片数减 1 个分片存在且可分配。&lt;/li>
&lt;li>整数值：这个值为任意整数，如1、2、5，代表需要存在且可分配的分片数量。例如，该值为 2 表示需要至少 2 个分片存在且可分配。
大多数情况下默认值对于部署来说已经够用了。&lt;/li>
&lt;/ul>
&lt;h2 id="索引段统计">索引段统计&lt;/h2>
&lt;h3 id="segments-api简介">segments API简介&lt;/h3>
&lt;p>为了深入观察 Lucene 索引段，ES提供了 segments API，可以通过向 _segments REST 端点发送 HTTP GET 请求来访问它。例如，查看集群中所有索引的所有段信息，应当执行下面的命令：&lt;/p>
&lt;style>
.td-content .highlight {
margin-top: 0.5rem;
margin-bottom: 0.5rem;
}
.code-collapse1 {
overflow-y: auto;
max-height: 500px;
overflow-x: auto;
max-width: 100%;
}
&lt;/style>
&lt;div class="code-collapse1">
&lt;div class="highlight">&lt;div style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">
&lt;table style="border-spacing:0;padding:0;margin:0;border:0;">&lt;tr>&lt;td style="vertical-align:top;padding:0;margin:0;border:0;">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>curl -XGET &lt;span style="color:#c41a16">&amp;#39;localhost:9200/_segments&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;p>如果只想查看 mastering 索引的段信息，应当执行下面的命令：
&lt;style>
.td-content .highlight {
margin-top: 0.5rem;
margin-bottom: 0.5rem;
}
.code-collapse1 {
overflow-y: auto;
max-height: 500px;
overflow-x: auto;
max-width: 100%;
}
&lt;/style>
&lt;div class="code-collapse1">
&lt;div class="highlight">&lt;div style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">
&lt;table style="border-spacing:0;padding:0;margin:0;border:0;">&lt;tr>&lt;td style="vertical-align:top;padding:0;margin:0;border:0;">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>curl -XGET &lt;span style="color:#c41a16">&amp;#39;localhost:9200/mastering/_segments&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;/div>&lt;/p>
&lt;p>也可以同时看多个索引的段，只需执行下面的命令即可：
&lt;style>
.td-content .highlight {
margin-top: 0.5rem;
margin-bottom: 0.5rem;
}
.code-collapse1 {
overflow-y: auto;
max-height: 500px;
overflow-x: auto;
max-width: 100%;
}
&lt;/style>
&lt;div class="code-collapse1">
&lt;div class="highlight">&lt;div style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">
&lt;table style="border-spacing:0;padding:0;margin:0;border:0;">&lt;tr>&lt;td style="vertical-align:top;padding:0;margin:0;border:0;">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>curl -XGET &lt;span style="color:#c41a16">&amp;#39;localhost:9200/mastering,books/_segments&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;/div>&lt;/p>
&lt;h4 id="segments-api响应">segments API响应&lt;/h4>
&lt;p>segments API 调用的响应总是面向分片的，这是由于索引是由一个或多个分片（以及它们的副本）构成，每个分片就是一个物理上的 Lucene 索引。&lt;/p>
&lt;p>假设有一个名为 mastering 的索引，并且里面已经索引了一些文档。创建索引时指定索引中只有一个分片且没有任何副本。&lt;/p>
&lt;p>查看索引段：&lt;/p>
&lt;style>
.td-content .highlight {
margin-top: 0.5rem;
margin-bottom: 0.5rem;
}
.code-collapse1 {
overflow-y: auto;
max-height: 500px;
overflow-x: auto;
max-width: 100%;
}
&lt;/style>
&lt;div class="code-collapse1">
&lt;div class="highlight">&lt;div style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">
&lt;table style="border-spacing:0;padding:0;margin:0;border:0;">&lt;tr>&lt;td style="vertical-align:top;padding:0;margin:0;border:0;">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>curl -XGET &lt;span style="color:#c41a16">&amp;#39;localhost:9200/_segments?pretty&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;p>ES会返回大量可供分析的有用信息。
索引段列表每个段由下面的属性来表征：&lt;/p>
&lt;ul>
&lt;li>number：段编号，也是 JSON 对象名，所有其它的段相关信息都包含在该 JSON 对象里面（如 _0、_1 等）。&lt;/li>
&lt;li>generation：代表索引的代（generation），即一个告诉索引段由多“老”的字段。例如，代为 0 的索引段表示是最初创建的。&lt;/li>
&lt;li>num_docs：代表索引段内的文档数。&lt;/li>
&lt;li>deleted_docs：代表被标记为已删除的文档数，这些文档会在索引段合并过程中被删除。&lt;/li>
&lt;li>size：代表索引段在磁盘上的大小。&lt;/li>
&lt;li>size_in_bytes：代表索引段以字节为单位的大小。&lt;/li>
&lt;li>committed：true表示索引段已提交，反之没提交。&lt;/li>
&lt;li>search：表示索引段是否可以被 ES 搜索。&lt;/li>
&lt;li>version：代表该 Lucene 索引的版本号。注意：尽管一个给定版本的 ES 只使用一个 Lucene 版本，但也会出现不同索引段由不同版本的 Lucene 创建的情况。因而在升级 ES 时，新版 ES 可能刚好使用了不同版本的 Lucene。这种情况下，比较老的索引段在向新版合并时会被重写。&lt;/li>
&lt;li>compound：代表索引段时符合文件格式存储的（用单个文件存储改索引段的所有索引文件）&lt;/li>
&lt;/ul>
&lt;h3 id="索引段信息的可视化">索引段信息的可视化&lt;/h3>
&lt;p>一个名为 SegmentSpy 的插件（&lt;a href="https://github.com/polyfractal/elasticsearch-segmentspy">https://github.com/polyfractal/elasticsearch-segmentspy&lt;/a> ）可以做 segments API 的可视化展示。&lt;/p>
&lt;p>安装插件后，把浏览器只想 &lt;a href="http://localhost:9200/_plugin/segmentspy/">http://localhost:9200/_plugin/segmentspy/&lt;/a> ，并选择感兴趣的索引，会看到 segments 信息。&lt;/p>
&lt;h2 id="理解es缓存">理解ES缓存&lt;/h2>
&lt;p>缓存在ES里扮演着重要角色，允许有效地存储过滤器并重用它们，使用父子功能、使用切面、以及基于索引字段的高效排序。&lt;/p>
&lt;h3 id="过滤器缓存">过滤器缓存&lt;/h3>
&lt;p>过滤器缓存是负责缓存查询中使用的过滤器的执行结果的。例如，下面这个查询：&lt;/p>
&lt;style>
.td-content .highlight {
margin-top: 0.5rem;
margin-bottom: 0.5rem;
}
.code-collapse1 {
overflow-y: auto;
max-height: 500px;
overflow-x: auto;
max-width: 100%;
}
&lt;/style>
&lt;div class="code-collapse1">
&lt;div class="highlight">&lt;div style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">
&lt;table style="border-spacing:0;padding:0;margin:0;border:0;">&lt;tr>&lt;td style="vertical-align:top;padding:0;margin:0;border:0;">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 1
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 2
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 3
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 4
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 5
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 6
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 7
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 8
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 9
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">10
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">11
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">12
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">13
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">14
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-json" data-lang="json">&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">&amp;#34;query&amp;#34;&lt;/span>: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">&amp;#34;filtered&amp;#34;&lt;/span>: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">&amp;#34;query&amp;#34;&lt;/span>: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">&amp;#34;match_all&amp;#34;&lt;/span>: {}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> },
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">&amp;#34;filter&amp;#34;&lt;/span>: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">&amp;#34;term&amp;#34;&lt;/span>: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">&amp;#34;category&amp;#34;&lt;/span>: &lt;span style="color:#c41a16">&amp;#34;romance&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;p>该查询会返回所有在 category 字段中包含 romance 词项的文档。可一个看到使用了 match_all 查询和一个过滤器。在该查询第一次执行以后，每个与该查询相同过滤的查询都会重用其结果，节省了宝贵的 I/O 和 CPU 资源。&lt;/p>
&lt;h4 id="过滤器缓存的种类">过滤器缓存的种类&lt;/h4>
&lt;p>ES 中有两种类型的过滤器缓存：索引级和节点级，即可以选择配置索引级或节点级（默认选项）的过滤器缓存。由于不一定能预知给定索引会分配到哪里（实际上指索引的分片和副本），进而无法预测内存的使用，所以不建议使用索引级的过滤器缓存。&lt;/p>
&lt;h4 id="索引级过滤器缓存的配置">索引级过滤器缓存的配置&lt;/h4>
&lt;p>ES允许使用下面的属性配置索引级过滤器缓存的行为：&lt;/p>
&lt;ul>
&lt;li>index.cache.filter.type：设置缓存的类型，可以使用 resident、soft、weak 或 node（默认值）。在 resident 缓存中的记录不能被 JVM 移除，除非想移除它们（通过使用 API，设置最大缓存值，或者设置过期时间），并且也是因为这个原因而推荐使用它（填充过滤器缓存代价很高）。内存吃紧时，JVM 可以清除 soft 和 weak 类型的缓存，区别是在清理内存时，JVM 会优先清除 weak 引用对象，然后才是 soft 引用对象。最后的 node 属性代表缓存将在节点级控制。&lt;/li>
&lt;li>index.cache.filter.max_size：指定能存储到缓存中的最大记录数（默认是 -1，代表无限制）。需要注意这个设置不是应用在整个索引上，而是应用于指定索引的某个分片的某个索引段上，所以内存的使用量会因索引的分片数和副本数以及索引中段数的不同而不同。通常来说，结合 soft 类型使用默认无限制的过滤器缓存就足够了。谨记慎用某些查询以保证缓存的可重用性。&lt;/li>
&lt;li>index.cache.filter.expire：指定过滤器缓存中记录的过期时间，默认是 -1，代表永不过期。希望对过滤器缓存设置超时时长，可以设置最大空闲时间。&lt;/li>
&lt;/ul>
&lt;h4 id="节点级的过滤器缓存设置">节点级的过滤器缓存设置&lt;/h4>
&lt;p>节点级过滤器缓存是默认的缓存类型，应用于分配到给定节点上的所有分片（设置 index.cache.filter.type 属性为 node，或者不设置这个属性）。ES 允许使用 indices.cache.filter.size 属性来配置这个缓存的大小，既可以使用百分数，如 20%（默认值），也可以使用确定的数值，如 1024mb。如果使用百分数，ES 会按当前节点的最大堆内存的百分比来计算内存使用量。&lt;/p>
&lt;p>节点级过滤器缓存是 LRU 类型（最近最少使用）缓存，这意味着为了给新纪录腾出空间，在删除缓存记录时，使用次数最少得那些记录会被删除。&lt;/p>
&lt;h3 id="字段数据缓存">字段数据缓存&lt;/h3>
&lt;p>字段数据缓存在查询涉及切面计算或给予字段数据排序时使用。ES所做的事加载相关字段的全部数据到内存中，从而使 ES 能够快速地基于文档访问这些值。注意，从硬件资源的角度，构建字段数据缓存代价通常很高，因为字段的所有数据都需要加载到内存中，需要消耗 I/O 操作和 CPU 资源。&lt;/p>
&lt;blockquote>
&lt;p>对于每个用来排序或做切面计算的字段，其数据都需要加载到内存中：所有的词项。
这样做的代价非常高昂，尤其是应用于那些高基数的字段（拥有大量不同词项的字段）时。&lt;/p>
&lt;/blockquote>
&lt;h4 id="索引级字段数据缓存配置">索引级字段数据缓存配置&lt;/h4>
&lt;p>也可以使用索引级别的字段数据缓存，但与索引级过滤器缓存类似，并不建议使用它。原因就是很难预测哪个分片或索引会分配到哪个节点，因此无法预估缓存每个索引需要的内存大小，而这会带来内存使用方面的问题。&lt;/p>
&lt;p>当然，如果你仍需要使用。可以通过设置 index.fielddata.cache.type 属性为 resident 或 soft 来实现。跟描述过滤器缓存时讨论过的情形类似，除非想删除，否则 resident 类型的缓存是不能被 JVM 删除的。推荐在使用索引级字段数据缓存时使用 resident 类型的缓存，因为重建字段数据缓存代价很高，并且会影响 ES 的查询性能，而 soft 类型的字段数据缓存在缺少内存时会被 JVM 清除掉。&lt;/p>
&lt;h4 id="节点级字段数据缓存配置">节点级字段数据缓存配置&lt;/h4>
&lt;p>ES 0.90.0 版本中，如果没有修改过配置，节点级字段数据缓存是默认的字段数据缓存类型，可以使用下列属性进行配置：&lt;/p>
&lt;ul>
&lt;li>index.fielddata.cache.size：制定了字段数据缓存的最大值，既可以是一个百分比的值，如 20%，也可以是一个绝对的内存大小，如 10GB。百分比的话 ES 会按当前节点的最大堆内存的百分比来计算内存使用量。&lt;/li>
&lt;li>index.fielddata.cache.expire：指定字段数据缓存中记录的过期时间，默认为 -1，表示缓存中的记录永不过期。如果要设置字段数据缓存过期时长，可以设置最大空闲时间。&lt;/li>
&lt;/ul>
&lt;h4 id="过滤">过滤&lt;/h4>
&lt;p>ES还允许选择性地将某些字段值加载到字段数据缓存中。在某些情况下非常有用，如基于字段数据排序或切面计算时。ES 支持两种类型三种形式的字段数据过滤，即基于词频、基于正则表达式，以及基于两者的组合。&lt;/p>
&lt;p>某些场景中字段数据过滤非常有用，例如从切面计算的结果中排除那些低频词项。具体来说，索引中某些词项存在拼写错误，而这些词项一定是低基数词项，不想基于它们做切面计算，可以从数据里删除、修正或使用过滤器从字段数据缓存中删除。这样不仅返回结果得到了过滤，同时因为更少的数据存储在内存中，降低了字段数据缓存的总量。&lt;/p>
&lt;h4 id="添加字段数据过滤信息">添加字段数据过滤信息&lt;/h4>
&lt;p>引入字段数据缓存过滤信息，需要在映射文件的字段定义部分额外添加两个对象：fielddata对象及其子对象 filter。扩展后的字段定义（以某个抽象的 tag 字段为例）：&lt;/p>
&lt;style>
.td-content .highlight {
margin-top: 0.5rem;
margin-bottom: 0.5rem;
}
.code-collapse1 {
overflow-y: auto;
max-height: 500px;
overflow-x: auto;
max-width: 100%;
}
&lt;/style>
&lt;div class="code-collapse1">
&lt;div class="highlight">&lt;div style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">
&lt;table style="border-spacing:0;padding:0;margin:0;border:0;">&lt;tr>&lt;td style="vertical-align:top;padding:0;margin:0;border:0;">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">1
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">2
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">3
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">4
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">5
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">6
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">7
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">8
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">9
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-json" data-lang="json">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c41a16">&amp;#34;tag&amp;#34;&lt;/span>&lt;span style="color:#000">:&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">&amp;#34;type&amp;#34;&lt;/span>: &lt;span style="color:#c41a16">&amp;#34;string&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">&amp;#34;index&amp;#34;&lt;/span>: &lt;span style="color:#c41a16">&amp;#34;not_analyzed&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">&amp;#34;fielddata&amp;#34;&lt;/span>: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">&amp;#34;filter&amp;#34;&lt;/span>: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">...&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;h4 id="基于词频过滤">基于词频过滤&lt;/h4>
&lt;p>基于磁盘过滤的结果是只加载那些频率高于指定最小值且低于指定最大值的词项，其中词频最小值和最大值分别由 min 和 max 参数指定。词频的频率范围不是针对整个索引的，而是针对索引段的。同一个词项在段级和索引级的频率分布往往不一样，这个特性非常重要。参数 min 和 max 可以是百分比的形式，也可以是一个绝对词频数。&lt;/p>
&lt;p>另外，min_segment_size 属性指定了在构建字段数据缓存时，索引段应满足的最小文档数，小于该文档数的索引段不会被考虑。&lt;/p>
&lt;p>例如，指向保存来自容量不小于 100 的索引段，且词频在段中介于 1% 和 20% 之间的词项到字段数据缓存中，可以进行如下字段映射：&lt;/p>
&lt;style>
.highlight {
overflow-y: auto;
max-height: 500px;
overflow-x: auto;
max-width: 130%;
}
.td-content .highlight {
margin-top: 0.5rem;
margin-bottom: 0.5rem;
}
&lt;/style>
&lt;details class="code-collapse">
&lt;summary>Expand/Collapse Code Block&lt;/summary>
&lt;div class="highlight">&lt;div style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">
&lt;table style="border-spacing:0;padding:0;margin:0;border:0;">&lt;tr>&lt;td style="vertical-align:top;padding:0;margin:0;border:0;">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 1
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 2
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 3
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 4
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 5
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 6
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 7
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 8
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 9
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">10
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">11
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">12
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">13
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">14
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">15
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">16
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">17
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">18
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">19
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-json" data-lang="json">&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">&amp;#34;book&amp;#34;&lt;/span>: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">&amp;#34;properties&amp;#34;&lt;/span>: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">&amp;#34;tag&amp;#34;&lt;/span>: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">&amp;#34;type&amp;#34;&lt;/span>: &lt;span style="color:#c41a16">&amp;#34;string&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">&amp;#34;index&amp;#34;&lt;/span>: &lt;span style="color:#c41a16">&amp;#34;not_analyzed&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">&amp;#34;fielddata&amp;#34;&lt;/span>: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">&amp;#34;filter&amp;#34;&lt;/span>: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">&amp;#34;frequency&amp;#34;&lt;/span>: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">&amp;#34;min&amp;#34;&lt;/span>: &lt;span style="color:#1c01ce">0.01&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c41a16">&amp;#34;max&amp;#34;&lt;/span>: &lt;span style="color:#1c01ce">0.2&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">&amp;#34;min_segment_size&amp;#34;&lt;/span>: &lt;span style="color:#1c01ce">100&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;/details>
&lt;br/>
&lt;h4 id="基于正则表达式过滤">基于正则表达式过滤&lt;/h4>
&lt;p>只有匹配特定正则表达式的词项会加载到字段数据缓存中。如果只想缓存来自 tag 字段的数据，如 Twitter 标签（以字符 # 开头），应配置映射：&lt;/p>
&lt;style>
.td-content .highlight {
margin-top: 0.5rem;
margin-bottom: 0.5rem;
}
.code-collapse1 {
overflow-y: auto;
max-height: 500px;
overflow-x: auto;
max-width: 100%;
}
&lt;/style>
&lt;div class="code-collapse1">
&lt;div class="highlight">&lt;div style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">
&lt;table style="border-spacing:0;padding:0;margin:0;border:0;">&lt;tr>&lt;td style="vertical-align:top;padding:0;margin:0;border:0;">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 1
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 2
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 3
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 4
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 5
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 6
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 7
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 8
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 9
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">10
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">11
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">12
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">13
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">14
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">15
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-json" data-lang="json">&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">&amp;#34;book&amp;#34;&lt;/span>: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">&amp;#34;properties&amp;#34;&lt;/span>: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">&amp;#34;tag&amp;#34;&lt;/span>: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">&amp;#34;type&amp;#34;&lt;/span>: &lt;span style="color:#c41a16">&amp;#34;string&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">&amp;#34;index&amp;#34;&lt;/span>: &lt;span style="color:#c41a16">&amp;#34;not_analyzed&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">&amp;#34;fielddata&amp;#34;&lt;/span>: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">&amp;#34;filter&amp;#34;&lt;/span>: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">&amp;#34;regex&amp;#34;&lt;/span>: &lt;span style="color:#c41a16">&amp;#34;^#.*&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;h4 id="基于正则表达式和词频过滤">基于正则表达式和词频过滤&lt;/h4>
&lt;p>组合基于词频和基于正则表达式的过滤方法。如果想把 tag 字段的数据保存到字段数据缓存中，但是只缓存那些以字符 # 开头，且所在索引段至少有 100 个文档，以及词项在段中介于 1% 和 20% 之间的词项，映射如下：&lt;/p>
&lt;style>
.highlight {
overflow-y: auto;
max-height: 500px;
overflow-x: auto;
max-width: 130%;
}
.td-content .highlight {
margin-top: 0.5rem;
margin-bottom: 0.5rem;
}
&lt;/style>
&lt;details class="code-collapse">
&lt;summary>Expand/Collapse Code Block&lt;/summary>
&lt;div class="highlight">&lt;div style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">
&lt;table style="border-spacing:0;padding:0;margin:0;border:0;">&lt;tr>&lt;td style="vertical-align:top;padding:0;margin:0;border:0;">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 1
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 2
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 3
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 4
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 5
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 6
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 7
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 8
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 9
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">10
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">11
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">12
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">13
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">14
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">15
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">16
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">17
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">18
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">19
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">20
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-json" data-lang="json">&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">&amp;#34;book&amp;#34;&lt;/span>: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">&amp;#34;properties&amp;#34;&lt;/span>: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">&amp;#34;tag&amp;#34;&lt;/span>: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">&amp;#34;type&amp;#34;&lt;/span>: &lt;span style="color:#c41a16">&amp;#34;string&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">&amp;#34;index&amp;#34;&lt;/span>: &lt;span style="color:#c41a16">&amp;#34;not_analyzed&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">&amp;#34;fielddata&amp;#34;&lt;/span>: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">&amp;#34;filter&amp;#34;&lt;/span>: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">&amp;#34;frequency&amp;#34;&lt;/span>: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">&amp;#34;min&amp;#34;&lt;/span>: &lt;span style="color:#1c01ce">0.1&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">&amp;#34;max&amp;#34;&lt;/span>: &lt;span style="color:#1c01ce">0.2&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">&amp;#34;min_segment_size&amp;#34;&lt;/span>: &lt;span style="color:#1c01ce">100&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> },
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">&amp;#34;regex&amp;#34;&lt;/span>: &lt;span style="color:#c41a16">&amp;#34;^#.*&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;/details>
&lt;br/>
&lt;blockquote>
&lt;p>字段数据缓存虽然不是在索引期间构建的，但却可以在查询期间重建，可以在运行时改变过滤行为，并具体公国使用映射 API 更新 fielddata 配置来实现。注意，改变字段数据缓存过滤设置后清空缓存，可以通过使用清理缓存 API 来实现。&lt;/p>
&lt;/blockquote>
&lt;h4 id="一个过滤的例子">一个过滤的例子&lt;/h4>
&lt;p>本小节刚开始的例子，排除切面计算结果中的低频词项。低词频项指的是词频最低的那 50% 的词项。为了验证过滤效果，用如下命令创建 books 索引：&lt;/p>
&lt;style>
.highlight {
overflow-y: auto;
max-height: 500px;
overflow-x: auto;
max-width: 130%;
}
.td-content .highlight {
margin-top: 0.5rem;
margin-bottom: 0.5rem;
}
&lt;/style>
&lt;details class="code-collapse">
&lt;summary>Expand/Collapse Code Block&lt;/summary>
&lt;div class="highlight">&lt;div style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">
&lt;table style="border-spacing:0;padding:0;margin:0;border:0;">&lt;tr>&lt;td style="vertical-align:top;padding:0;margin:0;border:0;">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 1
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 2
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 3
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 4
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 5
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 6
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 7
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 8
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 9
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">10
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">11
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">12
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">13
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">14
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">15
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">16
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">17
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">18
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">19
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">20
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">21
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">22
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">23
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">24
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>curl -XPOST &lt;span style="color:#c41a16">&amp;#39;localhost:9200/books&amp;#39;&lt;/span> -d &lt;span style="color:#c41a16">&amp;#39;{
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c41a16"> &amp;#34;settings&amp;#34;: {
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c41a16"> &amp;#34;number_of_shards&amp;#34;: 1,
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c41a16"> &amp;#34;number_of_replicas&amp;#34;: 0
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c41a16"> },
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c41a16"> &amp;#34;mapping&amp;#34;: {
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c41a16"> &amp;#34;book&amp;#34;: {
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c41a16"> &amp;#34;properties&amp;#34;: {
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c41a16"> &amp;#34;tag&amp;#34;: {
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c41a16"> &amp;#34;type&amp;#34;: &amp;#34;string&amp;#34;,
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c41a16"> &amp;#34;index&amp;#34;: &amp;#34;not_analyzed&amp;#34;,
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c41a16"> &amp;#34;fielddata&amp;#34;: {
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c41a16"> &amp;#34;filter&amp;#34;: {
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c41a16"> &amp;#34;frequency&amp;#34;: {
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c41a16"> &amp;#34;min&amp;#34;: 0.5,
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c41a16"> &amp;#34;max&amp;#34;: 0.99
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c41a16"> }
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c41a16"> }
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c41a16"> }
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c41a16"> }
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c41a16"> }
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c41a16"> }
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c41a16"> }
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c41a16">}&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;/details>
&lt;br/>
&lt;p>然后使用 bulk API 索引一些文档：
&lt;style>
.td-content .highlight {
margin-top: 0.5rem;
margin-bottom: 0.5rem;
}
.code-collapse1 {
overflow-y: auto;
max-height: 500px;
overflow-x: auto;
max-width: 100%;
}
&lt;/style>
&lt;div class="code-collapse1">
&lt;div class="highlight">&lt;div style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">
&lt;table style="border-spacing:0;padding:0;margin:0;border:0;">&lt;tr>&lt;td style="vertical-align:top;padding:0;margin:0;border:0;">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 1
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 2
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 3
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 4
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 5
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 6
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 7
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 8
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 9
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">10
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>curl -s -XPOST &lt;span style="color:#c41a16">&amp;#39;localhost:9200/_bulk&amp;#39;&lt;/span> --data-binary &lt;span style="color:#c41a16">&amp;#39;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c41a16">{&amp;#34;index&amp;#34;: {&amp;#34;_index&amp;#34;: &amp;#34;books&amp;#34;, &amp;#34;_type&amp;#34;: &amp;#34;book&amp;#34;, &amp;#34;_id&amp;#34;: &amp;#34;1&amp;#34;}}
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c41a16">{&amp;#34;tag&amp;#34;: [&amp;#34;one&amp;#34;]}
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c41a16">{&amp;#34;index&amp;#34;: {&amp;#34;_index&amp;#34;: &amp;#34;books&amp;#34;, &amp;#34;_type&amp;#34;: &amp;#34;book&amp;#34;, &amp;#34;_id&amp;#34;: &amp;#34;2&amp;#34;}}
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c41a16">{&amp;#34;tag&amp;#34;: [&amp;#34;one&amp;#34;]}
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c41a16">{&amp;#34;index&amp;#34;: {&amp;#34;_index&amp;#34;: &amp;#34;books&amp;#34;, &amp;#34;_type&amp;#34;: &amp;#34;book&amp;#34;, &amp;#34;_id&amp;#34;: &amp;#34;3&amp;#34;}}
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c41a16">{&amp;#34;tag&amp;#34;: [&amp;#34;one&amp;#34;]}
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c41a16">{&amp;#34;index&amp;#34;: {&amp;#34;_index&amp;#34;: &amp;#34;books&amp;#34;, &amp;#34;_type&amp;#34;: &amp;#34;book&amp;#34;, &amp;#34;_id&amp;#34;: &amp;#34;4&amp;#34;}}
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c41a16">{&amp;#34;tag&amp;#34;: [&amp;#34;four&amp;#34;]}
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c41a16">&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;/div>&lt;/p>
&lt;p>运行查询验证简单的词项切面计算（切面计算使用到了字段数据缓存）：
&lt;style>
.td-content .highlight {
margin-top: 0.5rem;
margin-bottom: 0.5rem;
}
.code-collapse1 {
overflow-y: auto;
max-height: 500px;
overflow-x: auto;
max-width: 100%;
}
&lt;/style>
&lt;div class="code-collapse1">
&lt;div class="highlight">&lt;div style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">
&lt;table style="border-spacing:0;padding:0;margin:0;border:0;">&lt;tr>&lt;td style="vertical-align:top;padding:0;margin:0;border:0;">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 1
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 2
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 3
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 4
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 5
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 6
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 7
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 8
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 9
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">10
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">11
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">12
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>curl -XGET &lt;span style="color:#c41a16">&amp;#39;localhost:9200/books/_search?pretty&amp;#39;&lt;/span> -d &lt;span style="color:#c41a16">&amp;#39;{
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c41a16"> &amp;#34;query&amp;#34;: {
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c41a16"> &amp;#34;match_all&amp;#34;: {}
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c41a16"> },
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c41a16"> &amp;#34;facets&amp;#34;: {
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c41a16"> &amp;#34;tag&amp;#34;: {
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c41a16"> &amp;#34;terms&amp;#34;: {
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c41a16"> &amp;#34;fields&amp;#34;: &amp;#34;tag&amp;#34;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c41a16"> }
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c41a16"> }
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c41a16"> }
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c41a16">}&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;/div>&lt;/p>
&lt;p>响应中，切面计算只涉及了词项 one，其它 4 个被忽略了。讲定词项 four 存在拼写错误，就已经达到目的了。&lt;/p>
&lt;h3 id="清除缓存">清除缓存&lt;/h3>
&lt;p>在改变字段数据过滤以后需要清除缓存，这点很关键。当改变一些明确设定了缓存键值的查询时也需要清除缓存，而使用 ES 的 _cache rest 端点就可以做到这点。&lt;/p>
&lt;h4 id="单一索引缓存-多索引缓存和全部缓存的清除">单一索引缓存、多索引缓存和全部缓存的清除&lt;/h4>
&lt;p>清空全部缓存的最简单做法：&lt;/p>
&lt;style>
.td-content .highlight {
margin-top: 0.5rem;
margin-bottom: 0.5rem;
}
.code-collapse1 {
overflow-y: auto;
max-height: 500px;
overflow-x: auto;
max-width: 100%;
}
&lt;/style>
&lt;div class="code-collapse1">
&lt;div class="highlight">&lt;div style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">
&lt;table style="border-spacing:0;padding:0;margin:0;border:0;">&lt;tr>&lt;td style="vertical-align:top;padding:0;margin:0;border:0;">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>curl -XPOST &lt;span style="color:#c41a16">&amp;#39;localhost:9200/_cache/clear&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;p>清空一个或多个索引的缓存。例如清除 mastering 索引的缓存：
&lt;style>
.td-content .highlight {
margin-top: 0.5rem;
margin-bottom: 0.5rem;
}
.code-collapse1 {
overflow-y: auto;
max-height: 500px;
overflow-x: auto;
max-width: 100%;
}
&lt;/style>
&lt;div class="code-collapse1">
&lt;div class="highlight">&lt;div style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">
&lt;table style="border-spacing:0;padding:0;margin:0;border:0;">&lt;tr>&lt;td style="vertical-align:top;padding:0;margin:0;border:0;">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>curl -XPOST &lt;span style="color:#c41a16">&amp;#39;localhost:9200/mastering/_cache/clear&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;/div>&lt;/p>
&lt;p>同时清除 mastering 和 books 索引的缓存：
&lt;style>
.td-content .highlight {
margin-top: 0.5rem;
margin-bottom: 0.5rem;
}
.code-collapse1 {
overflow-y: auto;
max-height: 500px;
overflow-x: auto;
max-width: 100%;
}
&lt;/style>
&lt;div class="code-collapse1">
&lt;div class="highlight">&lt;div style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">
&lt;table style="border-spacing:0;padding:0;margin:0;border:0;">&lt;tr>&lt;td style="vertical-align:top;padding:0;margin:0;border:0;">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>curl -XPOST &lt;span style="color:#c41a16">&amp;#39;localhost:9200:mastering,books/_cache/clear&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;/div>&lt;/p>
&lt;h4 id="清除特定缓存">清除特定缓存&lt;/h4>
&lt;p>也可以只清楚一种指定类型的缓存。以下列出可以被单独清除的缓存类型：&lt;/p>
&lt;ul>
&lt;li>filter：可以通过设置 filter 参数为 true 来清除。反之为了避免清除这种缓存需要设置为 false。&lt;/li>
&lt;li>filter_data：可以通过设置 filter_data 参数为 true 来清除。反之为了避免清除这种缓存需要设置为 false。&lt;/li>
&lt;li>bloom：可以通过设置 bloom 参数为 true 来清除 bloom 缓存（如果某种倒排索引格式使用了 bloom filter ，则可能会使用这种缓存）
例如，清除 mastering 索引的字段数据缓存，并保留 filter 缓存和 bloom 缓存，则可以执行：&lt;/li>
&lt;/ul>
&lt;style>
.td-content .highlight {
margin-top: 0.5rem;
margin-bottom: 0.5rem;
}
.code-collapse1 {
overflow-y: auto;
max-height: 500px;
overflow-x: auto;
max-width: 100%;
}
&lt;/style>
&lt;div class="code-collapse1">
&lt;div class="highlight">&lt;div style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">
&lt;table style="border-spacing:0;padding:0;margin:0;border:0;">&lt;tr>&lt;td style="vertical-align:top;padding:0;margin:0;border:0;">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>curl -XPOST &lt;span style="color:#c41a16">&amp;#39;localhost:9200/mastering/_cache/clear?field_data=true&amp;amp;filter=false&amp;amp;bloom=false&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;h4 id="清除字段相关的缓存">清除字段相关的缓存&lt;/h4>
&lt;p>除了清除全部或特定的缓存，还可以清除指定字段的缓存。在需要的请求中增加 fields 参数，参数值为索要清除缓存的相关字段名，多个字段名用逗号分隔。&lt;/p>
&lt;p>例如，清除 mastering 索引里 title 和 price 字段的缓存：&lt;/p>
&lt;style>
.td-content .highlight {
margin-top: 0.5rem;
margin-bottom: 0.5rem;
}
.code-collapse1 {
overflow-y: auto;
max-height: 500px;
overflow-x: auto;
max-width: 100%;
}
&lt;/style>
&lt;div class="code-collapse1">
&lt;div class="highlight">&lt;div style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">
&lt;table style="border-spacing:0;padding:0;margin:0;border:0;">&lt;tr>&lt;td style="vertical-align:top;padding:0;margin:0;border:0;">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>curl -XPOST &lt;span style="color:#c41a16">&amp;#39;localhost:9200/mastering/_cache/clear?fields=title,price&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;h2 id="小结">小结&lt;/h2>
&lt;p>本章，学习了如何选择合适的目录来使 ES 以最高效的方式访问底层 I/O 系统，也学习了如何使用多播和单播模式类配置节点的发现模块。然后讨论了网关模块，它能控制进行集群恢复的时机，同时也讨论了恢复模块及其配置。此外，还学习了如何分析 ES 返回的索引段信息。最后了解了 ES 缓存的工作机制，如何调整它以及如何控制字段数据缓存的构建方式。&lt;/p></description></item><item><title>Docs: 深入理解ES-06故障处理</title><link>/docs/44.%E6%90%9C%E7%B4%A2/%E6%B7%B1%E5%85%A5%E7%90%86%E8%A7%A3ElasticSearch/%E6%B7%B1%E5%85%A5%E7%90%86%E8%A7%A3ES-06%E6%95%85%E9%9A%9C%E5%A4%84%E7%90%86/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/docs/44.%E6%90%9C%E7%B4%A2/%E6%B7%B1%E5%85%A5%E7%90%86%E8%A7%A3ElasticSearch/%E6%B7%B1%E5%85%A5%E7%90%86%E8%A7%A3ES-06%E6%95%85%E9%9A%9C%E5%A4%84%E7%90%86/</guid><description/></item><item><title>Docs: 深入理解ES-07改善用户搜索体验</title><link>/docs/44.%E6%90%9C%E7%B4%A2/%E6%B7%B1%E5%85%A5%E7%90%86%E8%A7%A3ElasticSearch/%E6%B7%B1%E5%85%A5%E7%90%86%E8%A7%A3ES-07%E6%94%B9%E5%96%84%E7%94%A8%E6%88%B7%E6%90%9C%E7%B4%A2%E4%BD%93%E9%AA%8C/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/docs/44.%E6%90%9C%E7%B4%A2/%E6%B7%B1%E5%85%A5%E7%90%86%E8%A7%A3ElasticSearch/%E6%B7%B1%E5%85%A5%E7%90%86%E8%A7%A3ES-07%E6%94%B9%E5%96%84%E7%94%A8%E6%88%B7%E6%90%9C%E7%B4%A2%E4%BD%93%E9%AA%8C/</guid><description/></item><item><title>Docs: 深入理解ES-08 ES Java API</title><link>/docs/44.%E6%90%9C%E7%B4%A2/%E6%B7%B1%E5%85%A5%E7%90%86%E8%A7%A3ElasticSearch/%E6%B7%B1%E5%85%A5%E7%90%86%E8%A7%A3ES-08-ES-Java-API/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/docs/44.%E6%90%9C%E7%B4%A2/%E6%B7%B1%E5%85%A5%E7%90%86%E8%A7%A3ElasticSearch/%E6%B7%B1%E5%85%A5%E7%90%86%E8%A7%A3ES-08-ES-Java-API/</guid><description/></item><item><title>Docs: 深入理解ES-09开发ES插件</title><link>/docs/44.%E6%90%9C%E7%B4%A2/%E6%B7%B1%E5%85%A5%E7%90%86%E8%A7%A3ElasticSearch/%E6%B7%B1%E5%85%A5%E7%90%86%E8%A7%A3ES-09%E5%BC%80%E5%8F%91ES%E6%8F%92%E4%BB%B6/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/docs/44.%E6%90%9C%E7%B4%A2/%E6%B7%B1%E5%85%A5%E7%90%86%E8%A7%A3ElasticSearch/%E6%B7%B1%E5%85%A5%E7%90%86%E8%A7%A3ES-09%E5%BC%80%E5%8F%91ES%E6%8F%92%E4%BB%B6/</guid><description/></item><item><title>Docs: 搜索</title><link>/docs/44.%E6%90%9C%E7%B4%A2/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/docs/44.%E6%90%9C%E7%B4%A2/</guid><description>
&lt;h1 id="introduction">Introduction&lt;/h1>
&lt;p>ES搜索等&lt;/p></description></item></channel></rss>