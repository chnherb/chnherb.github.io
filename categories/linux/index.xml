<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Herbdocs – linux</title><link>/categories/linux/</link><description>Recent content in linux on Herbdocs</description><generator>Hugo -- gohugo.io</generator><atom:link href="/categories/linux/index.xml" rel="self" type="application/rss+xml"/><item><title>Docs: Linux负载均衡LVS之IPVS</title><link>/docs/10.OS/Linux%E8%B4%9F%E8%BD%BD%E5%9D%87%E8%A1%A1LVS%E4%B9%8BIPVS/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/docs/10.OS/Linux%E8%B4%9F%E8%BD%BD%E5%9D%87%E8%A1%A1LVS%E4%B9%8BIPVS/</guid><description>
&lt;h1 id="名词概念">名词概念&lt;/h1>
&lt;h2 id="lvs">LVS&lt;/h2>
&lt;p>LVS（Linux Virtual Server）即Linux虚拟服务器，是一个虚拟的服务器集群系统，由&lt;a href="https://baike.baidu.com/item/%E7%AB%A0%E6%96%87%E5%B5%A9">章文嵩&lt;/a>博士在1998年5月成立，在linux2.6+后将lvs自动加入了kernel模块。&lt;/p>
&lt;p>LVS的用户空间的命令行管理工具为ipvsadm，ipvs是工作在内核中netfilter的INPUT的钩子函数上，对进入的报文在没有进入用户空间前，对这些报文进行操作。&lt;/p>
&lt;h2 id="ipvs">IPVS&lt;/h2>
&lt;p>IPVS是LVS（Linux Virtual Server）项目重要组成部分，目前包含于官方Linux Kernel，IPVS依赖于netfilter框架，位于内核源码的net/netfilter/ipvs目录下。&lt;/p>
&lt;p>&lt;a href="http://www.linuxvirtualserver.org/software/ipvs.html">IPVS&lt;/a>是&lt;a href="http://www.linuxvirtualserver.org/">LVS&lt;/a>项目的一部分，是一款运行在Linux kernel当中的4层负载均衡器，性能异常优秀。 &lt;/p>
&lt;h2 id="rs">RS&lt;/h2>
&lt;p>realserver，常简称为RS&lt;/p>
&lt;h2 id="nat">NAT&lt;/h2>
&lt;p>网络地址转换(Network Address Translate)&lt;/p>
&lt;h2 id="snat">SNAT&lt;/h2>
&lt;p>原地址转换&lt;/p>
&lt;h2 id="dnat">DNAT&lt;/h2>
&lt;p>目标地址转换&lt;/p>
&lt;h2 id="几种ip">几种IP&lt;/h2>
&lt;p>&lt;img src="../imgs/20220227_ipvs_1.png" alt="20220227_ipvs_1.png">&lt;/p>
&lt;h3 id="vip">VIP&lt;/h3>
&lt;p>virtual IP，LVS服务器上接收外网数据包的网卡IP地址。&lt;/p>
&lt;h3 id="dip">DIP&lt;/h3>
&lt;p>director IP，LVS服务器上转发数据包到realserver的网卡IP地址。&lt;/p>
&lt;h3 id="rip">RIP&lt;/h3>
&lt;p>realserver(常简称为RS)上接收Director转发数据包的IP，即提供服务的服务器IP。&lt;/p>
&lt;p>CIP:客户端的IP。&lt;/p>
&lt;h1 id="ipvs的三种转发模式">IPVS的三种转发模式&lt;/h1>
&lt;h2 id="dr模式-direct-routing">DR模式(Direct Routing)&lt;/h2>
&lt;p>DR模式下，客户端的请求包到达负载均衡器的虚拟服务IP端口后，负载均衡器不会改写请求包的IP和端口，但是会改写请求包的MAC地址为后端RS的MAC地址，然后将数据包转发；真实服务器处理请求后，响应包直接回给客户端，不再经过负载均衡器。所以DR模式的转发效率是最高的，特别适合下行流量较大的业务场景，比如请求视频等大文件。&lt;/p>
&lt;h2 id="nat模式-network-address-translation">NAT模式(Network Address Translation)&lt;/h2>
&lt;p>NAT模式下，请求包和响应包都需要经过LB处理。当客户端的请求到达虚拟服务后，LB会对请求包做目的地址转换（DNAT），将请求包的目的IP改写为RS的IP。当收到RS的响应后，LB会对响应包做源地址转换（SNAT），将响应包的源IP改写为LB的IP。&lt;/p>
&lt;h2 id="tun模式">TUN模式&lt;/h2>
&lt;p>采用NAT技术时，由于请求和响应报文都必须经过调度器地址重写，当客户请求越来越多时，调度器的处理能力将成为瓶颈。为了解决这个问题，调度器把请求报文通过IP隧道转发至真实服务器，而真实服务器将响应直接返回给客户，所以调度器只处理请求报文。由于一般网络服务响应报文比请求报文大许多，采用VS/TUN技术后，调度器得到极大的解放，集群系统的最大吞吐量可以提高10倍。&lt;/p>
&lt;h2 id="fullnat模式">FULLNAT模式&lt;/h2>
&lt;p>FULLNAT模式下，LB会对请求包和响应包都做SNAT+DNAT。&lt;/p>
&lt;h1 id="转发模式对比">转发模式对比&lt;/h1>
&lt;p>三种转发模式性能从高到低：DR &amp;gt; NAT &amp;gt;FULLNAT。&lt;/p>
&lt;p>虽然FULLNAT模式的性能比不上DR和NAT，但是FULLNAT模式没有组网要求，允许LB和RS部署在不同的子网中，这给运维带来了便利。并且 FULLNAT模式具有更好的可拓展性，可以通过增加更多的LB节点，提升系统整体的负载均衡能力。&lt;/p>
&lt;h1 id="ipvs实现service">IPVS实现Service&lt;/h1>
&lt;h2 id="背景知识">背景知识&lt;/h2>
&lt;p>一定要让Kernel认为VIP是本地地址，这样4层的LVS才能开始工作。&lt;/p>
&lt;h2 id="网络结构">网络结构&lt;/h2>
&lt;p>&lt;img src="../imgs/20220227_ipvs_2.png" alt="20220227_ipvs_2.png">&lt;/p>
&lt;h2 id="步骤">步骤&lt;/h2>
&lt;p>1、绑定VIP到本地（欺骗内核）&lt;/p>
&lt;style>
.td-content .highlight {
margin-top: 0.5rem;
margin-bottom: 0.5rem;
}
.code-collapse1 {
overflow-y: auto;
max-height: 500px;
overflow-x: auto;
max-width: 100%;
}
&lt;/style>
&lt;div class="code-collapse1">
&lt;div class="highlight">&lt;div style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">
&lt;table style="border-spacing:0;padding:0;margin:0;border:0;">&lt;tr>&lt;td style="vertical-align:top;padding:0;margin:0;border:0;">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#177500"># ip route add to local 192.168.60.200/32 dev eth0proto kernel&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;p>2、为该虚IP创建一个IPVS的virtual server
&lt;style>
.td-content .highlight {
margin-top: 0.5rem;
margin-bottom: 0.5rem;
}
.code-collapse1 {
overflow-y: auto;
max-height: 500px;
overflow-x: auto;
max-width: 100%;
}
&lt;/style>
&lt;div class="code-collapse1">
&lt;div class="highlight">&lt;div style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">
&lt;table style="border-spacing:0;padding:0;margin:0;border:0;">&lt;tr>&lt;td style="vertical-align:top;padding:0;margin:0;border:0;">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#177500"># ipvsadm -A -t 192.168.60.200:9376 -s rr -p 600&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;/div>&lt;/p>
&lt;p>3、为该IPVS service创建相应的real server
&lt;style>
.td-content .highlight {
margin-top: 0.5rem;
margin-bottom: 0.5rem;
}
.code-collapse1 {
overflow-y: auto;
max-height: 500px;
overflow-x: auto;
max-width: 100%;
}
&lt;/style>
&lt;div class="code-collapse1">
&lt;div class="highlight">&lt;div style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">
&lt;table style="border-spacing:0;padding:0;margin:0;border:0;">&lt;tr>&lt;td style="vertical-align:top;padding:0;margin:0;border:0;">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">1
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">2
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#177500"># ipvsadm -A -t 192.168.60.200:9376 -r 10.1.2.3:80 -m&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#177500"># ipvsadm -A -t 192.168.60.200:9376 -r 10.1.4.5:80 -m&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#177500"># ipvsadm -A -t 192.168.60.200:9376 -r 10.1.3.8:80 -m&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;/div>&lt;/p>
&lt;h1 id="reference">Reference&lt;/h1>
&lt;p>&lt;a href="https://www.cnblogs.com/lipengxiang2009/p/7349271.html">Linux负载均衡LVS（IPVS）&lt;/a>&lt;/p>
&lt;p>&lt;a href="https://www.sohu.com/a/223150286_744906">应用负载均衡之LVS(一)：基本概念和三种模式&lt;/a>&lt;/p>
&lt;p>&lt;a href="https://www.bilibili.com/video/BV1XJ411s7cd?spm_id_from=333.999.0.0">IPVS实现Service&lt;/a>&lt;/p></description></item><item><title>Docs: Linux的启动过程</title><link>/docs/10.OS/%E8%BF%9B%E7%A8%8B/Linux%E7%9A%84%E5%90%AF%E5%8A%A8%E8%BF%87%E7%A8%8B/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/docs/10.OS/%E8%BF%9B%E7%A8%8B/Linux%E7%9A%84%E5%90%AF%E5%8A%A8%E8%BF%87%E7%A8%8B/</guid><description>
&lt;h1 id="概述">概述&lt;/h1>
&lt;p>&lt;img src="../imgs/linux_start_process_1.png" alt="linux_start_process_1.png">&lt;/p>
&lt;h1 id="1-加载内核">1、加载内核&lt;/h1>
&lt;p>操作系统接管硬件以后，首先读入 /boot 目录下的内核文件。&lt;/p>
&lt;style>
.td-content .highlight {
margin-top: 0.5rem;
margin-bottom: 0.5rem;
}
.code-collapse1 {
overflow-y: auto;
max-height: 500px;
overflow-x: auto;
max-width: 100%;
}
&lt;/style>
&lt;div class="code-collapse1">
&lt;div class="highlight">&lt;div style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">
&lt;table style="border-spacing:0;padding:0;margin:0;border:0;">&lt;tr>&lt;td style="vertical-align:top;padding:0;margin:0;border:0;">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>ll /boot
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;h1 id="2-启动初始化进程">2、启动初始化进程&lt;/h1>
&lt;p>内核文件加载以后，就开始运行第一个程序 /sbin/init，它的作用是初始化系统环境。&lt;/p>
&lt;p>进程编号（pid）就是1。其他所有进程都从它衍生，都是它的子进程&lt;/p>
&lt;h1 id="3-确定运行级别">3、确定运行级别&lt;/h1>
&lt;p>许多程序需要开机启动。它们在Windows叫做&amp;quot;服务&amp;quot;（service），在Linux就叫做守护进程（daemon）。&lt;/p>
&lt;p>Linux预置七种运行级别（0-6）。一般来说，0是关机，1是单用户模式（也就是维护模式），6是重启。运行级别2-5，各个发行版不太一样，对于Debian来说，都是同样的多用户模式（也就是正常模式）。&lt;/p>
&lt;p>init进程首先读取文件 /etc/inittab，它是运行级别的设置文件。如果你打开它，可以看到第一行是这样的：&lt;/p>
&lt;style>
.td-content .highlight {
margin-top: 0.5rem;
margin-bottom: 0.5rem;
}
.code-collapse1 {
overflow-y: auto;
max-height: 500px;
overflow-x: auto;
max-width: 100%;
}
&lt;/style>
&lt;div class="code-collapse1">
&lt;div class="highlight">&lt;div style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">
&lt;table style="border-spacing:0;padding:0;margin:0;border:0;">&lt;tr>&lt;td style="vertical-align:top;padding:0;margin:0;border:0;">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000">id:&lt;/span>&lt;span style="color:#000">2&lt;/span>&lt;span style="color:#000">:&lt;/span>&lt;span style="color:#000">initdefault&lt;/span>&lt;span style="color:#000">:&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;p>表明系统启动时的运行级别为2。
运行级别为2的程序清单在/etc目录下面&lt;/p>
&lt;style>
.td-content .highlight {
margin-top: 0.5rem;
margin-bottom: 0.5rem;
}
.code-collapse1 {
overflow-y: auto;
max-height: 500px;
overflow-x: auto;
max-width: 100%;
}
&lt;/style>
&lt;div class="code-collapse1">
&lt;div class="highlight">&lt;div style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">
&lt;table style="border-spacing:0;padding:0;margin:0;border:0;">&lt;tr>&lt;td style="vertical-align:top;padding:0;margin:0;border:0;">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">1
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">2
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">3
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">4
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000">/&lt;/span>&lt;span style="color:#000">etc&lt;/span>&lt;span style="color:#000">/&lt;/span>&lt;span style="color:#000">rc0&lt;/span>&lt;span style="color:#000">.&lt;/span>&lt;span style="color:#836c28">d&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000">/&lt;/span>&lt;span style="color:#000">etc&lt;/span>&lt;span style="color:#000">/&lt;/span>&lt;span style="color:#000">rc1&lt;/span>&lt;span style="color:#000">.&lt;/span>&lt;span style="color:#836c28">d&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000">/&lt;/span>&lt;span style="color:#000">etc&lt;/span>&lt;span style="color:#000">/&lt;/span>&lt;span style="color:#000">rc2&lt;/span>&lt;span style="color:#000">.&lt;/span>&lt;span style="color:#836c28">d&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000">...&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;p>&amp;quot;rc&amp;quot;，表示run command（运行程序）、d表示directory（目录）
&lt;style>
.td-content .highlight {
margin-top: 0.5rem;
margin-bottom: 0.5rem;
}
.code-collapse1 {
overflow-y: auto;
max-height: 500px;
overflow-x: auto;
max-width: 100%;
}
&lt;/style>
&lt;div class="code-collapse1">
&lt;div class="highlight">&lt;div style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">
&lt;table style="border-spacing:0;padding:0;margin:0;border:0;">&lt;tr>&lt;td style="vertical-align:top;padding:0;margin:0;border:0;">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 1
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 2
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 3
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 4
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 5
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 6
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 7
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 8
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 9
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">10
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">11
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">12
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>ls /etc/rc2.d
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> README
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>　　S01motd
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>　　S13rpcbind
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>　　S14nfs-common
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>　　S16binfmt-support
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>　　S16rsyslog
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>　　S16sudo
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>　　S17apache2
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>　　S18acpid
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>　　...
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;/div>&lt;/p>
&lt;p>除了第一个文件README以外，其他文件名都是&amp;quot;&lt;strong>字母S+两位数字+程序名&lt;/strong>&amp;quot;的形式。
S表示Start，K表示Kill。&lt;/p>
&lt;p>如果想修改程序不建议修改该目录，可以参考：&lt;a href="http://www.debianadmin.com/manage-linux-init-or-startup-scripts.html">Debian Admin - Manage init&lt;/a> 和 &lt;a href="http://www.debianadmin.com/remove-unwanted-startup-files-or-services-in-debian.html">Debian Admin - Remove Services&lt;/a>&lt;/p>
&lt;h1 id="4-加载开机启动程序">4、加载开机启动程序&lt;/h1>
&lt;p>如果有多个运行级别的程序需要启动，为了避免拷贝，设置文件链接指向目录 /etc/init.d ，真正的启动脚本都统一放在这个目录中。init进程会运行这个目录里的启动脚本逐一加载开机启动程序。&lt;/p>
&lt;style>
.td-content .highlight {
margin-top: 0.5rem;
margin-bottom: 0.5rem;
}
.code-collapse1 {
overflow-y: auto;
max-height: 500px;
overflow-x: auto;
max-width: 100%;
}
&lt;/style>
&lt;div class="code-collapse1">
&lt;div class="highlight">&lt;div style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">
&lt;table style="border-spacing:0;padding:0;margin:0;border:0;">&lt;tr>&lt;td style="vertical-align:top;padding:0;margin:0;border:0;">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">1
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>ls -l /etc/rc2.d
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#177500"># 能看到链接&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;p>另外一个好处，直接使用 /etc/init.d下的链接文件直接启动或者关闭程序，不必到真实路径下查找。如：
&lt;style>
.td-content .highlight {
margin-top: 0.5rem;
margin-bottom: 0.5rem;
}
.code-collapse1 {
overflow-y: auto;
max-height: 500px;
overflow-x: auto;
max-width: 100%;
}
&lt;/style>
&lt;div class="code-collapse1">
&lt;div class="highlight">&lt;div style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">
&lt;table style="border-spacing:0;padding:0;margin:0;border:0;">&lt;tr>&lt;td style="vertical-align:top;padding:0;margin:0;border:0;">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>sudo /etc/init.d/apache2 restart
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;/div>&lt;/p>
&lt;p>/etc/init.d 这个目录名最后一个字母d，表示目录（directory），用来与程序 /etc/init 区分。&lt;/p>
&lt;h1 id="5-用户登录">5、用户登录&lt;/h1>
&lt;p>用户的登录方式有三种：&lt;/p>
&lt;p>1）命令行登录&lt;/p>
&lt;p>init进程调用getty程序（意为get teletype），让用户输入用户名和密码。输入完成后，再调用login程序，核对密码（Debian还会再多运行一个身份核对程序/etc/pam.d/login）。如果密码正确，就从文件 /etc/passwd 读取该用户指定的shell，然后启动这个shell。&lt;/p>
&lt;p>2）ssh登录&lt;/p>
&lt;p>这时系统调用sshd程序（Debian还会再运行/etc/pam.d/ssh ），取代getty和login，然后启动shell。&lt;/p>
&lt;p>3）图形界面登录&lt;/p>
&lt;p>init进程调用显示管理器，Gnome图形界面对应的显示管理器为gdm（GNOME Display Manager），然后用户输入用户名和密码。如果密码正确，就读取/etc/gdm3/Xsession，启动用户的会话。&lt;/p>
&lt;h1 id="6-进入-login-shell">6、进入 login shell&lt;/h1>
&lt;p>shell就是命令行界面，让用户可以直接与操作系统对话。用户登录时打开的shell，就叫做login shell。&lt;/p>
&lt;p>1）命令行登录&lt;/p>
&lt;p>首先读入 /etc/profile，这是对所有用户都有效的配置；然后依次寻找下面三个文件，这是针对当前用户的配置。&lt;/p>
&lt;style>
.td-content .highlight {
margin-top: 0.5rem;
margin-bottom: 0.5rem;
}
.code-collapse1 {
overflow-y: auto;
max-height: 500px;
overflow-x: auto;
max-width: 100%;
}
&lt;/style>
&lt;div class="code-collapse1">
&lt;div class="highlight">&lt;div style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">
&lt;table style="border-spacing:0;padding:0;margin:0;border:0;">&lt;tr>&lt;td style="vertical-align:top;padding:0;margin:0;border:0;">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">1
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">2
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000">~/.&lt;/span>&lt;span style="color:#836c28">bash_profile&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000">~/.&lt;/span>&lt;span style="color:#836c28">bash_login&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000">~/.&lt;/span>&lt;span style="color:#836c28">profile&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;p>注意：&lt;strong>这三个文件只要有一个存在，就不再读入后面的文件&lt;/strong>。
2）ssh登录：&lt;/p>
&lt;p>与命令行登录完全相同。&lt;/p>
&lt;p>3）图形界面登录&lt;/p>
&lt;p>&lt;strong>只加载 /etc/profile 和 ~/.profile。也就是说，~/.bash_profile 不管有没有，都不会运行。&lt;/strong>&lt;/p>
&lt;h1 id="7-打开-non-login-shell">7、打开 non-login shell&lt;/h1>
&lt;p>用户进入操作系统以后，常常会再手动开启一个shell。这个shell就叫做 non-login shell，意思是它不同于登录时出现的那个shell，不读取/etc/profile和.profile等配置文件。&lt;/p>
&lt;p>&lt;strong>non-login shell 会读入用户自己的bash配置文件 ~/.bashrc。&lt;/strong>&lt;/p>
&lt;p>如果不进入 non-login shell，.bashrc会通过 ~/.profile文件运行，如下.profile文件内容：&lt;/p>
&lt;style>
.td-content .highlight {
margin-top: 0.5rem;
margin-bottom: 0.5rem;
}
.code-collapse1 {
overflow-y: auto;
max-height: 500px;
overflow-x: auto;
max-width: 100%;
}
&lt;/style>
&lt;div class="code-collapse1">
&lt;div class="highlight">&lt;div style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">
&lt;table style="border-spacing:0;padding:0;margin:0;border:0;">&lt;tr>&lt;td style="vertical-align:top;padding:0;margin:0;border:0;">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">1
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">2
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">3
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">4
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">5
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-plain" data-lang="plain">&lt;span style="display:flex;">&lt;span>　　if [ -n &amp;#34;$BASH_VERSION&amp;#34; ]; then
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>　　　　if [ -f &amp;#34;$HOME/.bashrc&amp;#34; ]; then
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>　　　　　　. &amp;#34;$HOME/.bashrc&amp;#34;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>　　　　fi
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>　　fi　　
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;p>上面代码先判断变量 $BASH_VERSION 是否有值，然后判断主目录下是否存在 .bashrc 文件，如果存在就运行该文件。第三行开头的那个点，是source命令的简写形式，表示运行某个文件，写成&amp;quot;source ~/.bashrc&amp;quot;也是可以的。
因此，&lt;strong>只要运行～/.profile文件，～/.bashrc文件就会连带运行&lt;/strong>。但是上一节的第一种情况提到过，如果存在～/.bash_profile文件，那么有可能不会运行～/.profile文件。解决这个问题很简单，把下面代码写入.bash_profile就行了。&lt;/p>
&lt;style>
.td-content .highlight {
margin-top: 0.5rem;
margin-bottom: 0.5rem;
}
.code-collapse1 {
overflow-y: auto;
max-height: 500px;
overflow-x: auto;
max-width: 100%;
}
&lt;/style>
&lt;div class="code-collapse1">
&lt;div class="highlight">&lt;div style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">
&lt;table style="border-spacing:0;padding:0;margin:0;border:0;">&lt;tr>&lt;td style="vertical-align:top;padding:0;margin:0;border:0;">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">1
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">2
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-plain" data-lang="plain">&lt;span style="display:flex;">&lt;span>　　if [ -f ~/.profile ]; then
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>　　　　. ~/.profile
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>　　fi　
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;p>这样一来，不管是哪种情况，.bashrc都会执行，用户的设置可以放心地都写入这个文件了。
Bash的设置之所以如此繁琐，是由于历史原因造成的。早期的时候，计算机运行速度很慢，载入配置文件需要很长时间，Bash的作者只好把配置文件分成了几个部分，阶段性载入。系统的通用设置放在 /etc/profile，用户个人的、需要被所有子进程继承的设置放在.profile，不需要被继承的设置放在.bashrc。&lt;/p>
&lt;p>顺便提一下，除了Linux以外， Mac OS X 使用的shell也是Bash。但是，它只加载 .bash_profile，然后在.bash_profile里面调用.bashrc。而且，不管是ssh登录，还是在图形界面里启动shell窗口，都是如此。&lt;/p>
&lt;h1 id="reference">Reference&lt;/h1>
&lt;p>&lt;a href="https://www.ruanyifeng.com/blog/2013/08/linux_boot_process.html">Linux的启动过程&lt;/a>&lt;/p></description></item></channel></rss>